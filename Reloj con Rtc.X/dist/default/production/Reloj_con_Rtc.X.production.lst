

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Feb 19 15:27:19 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	text27,local,class=CODE,merge=1,delta=2
    40                           	dabs	1,0x7E,2
    41  0000                     
    42                           ; Version 2.10
    43                           ; Generated 31/07/2019 GMT
    44                           ; 
    45                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    46                           ; All rights reserved.
    47                           ; 
    48                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    49                           ; 
    50                           ; Redistribution and use in source and binary forms, with or without modification, are
    51                           ; permitted provided that the following conditions are met:
    52                           ; 
    53                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    54                           ;        conditions and the following disclaimer.
    55                           ; 
    56                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    57                           ;        of conditions and the following disclaimer in the documentation and/or other
    58                           ;        materials provided with the distribution.
    59                           ; 
    60                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    61                           ;        software without specific prior written permission.
    62                           ; 
    63                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    64                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    65                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    66                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    67                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    68                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    69                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    70                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    71                           ; 
    72                           ; 
    73                           ; Code-generator required, PIC16F877A Definitions
    74                           ; 
    75                           ; SFR Addresses
    76  0000                     	;# 
    77  0001                     	;# 
    78  0002                     	;# 
    79  0003                     	;# 
    80  0004                     	;# 
    81  0005                     	;# 
    82  0006                     	;# 
    83  0007                     	;# 
    84  0008                     	;# 
    85  0009                     	;# 
    86  000A                     	;# 
    87  000B                     	;# 
    88  000C                     	;# 
    89  000D                     	;# 
    90  000E                     	;# 
    91  000E                     	;# 
    92  000F                     	;# 
    93  0010                     	;# 
    94  0011                     	;# 
    95  0012                     	;# 
    96  0013                     	;# 
    97  0014                     	;# 
    98  0015                     	;# 
    99  0015                     	;# 
   100  0016                     	;# 
   101  0017                     	;# 
   102  0018                     	;# 
   103  0019                     	;# 
   104  001A                     	;# 
   105  001B                     	;# 
   106  001B                     	;# 
   107  001C                     	;# 
   108  001D                     	;# 
   109  001E                     	;# 
   110  001F                     	;# 
   111  0081                     	;# 
   112  0085                     	;# 
   113  0086                     	;# 
   114  0087                     	;# 
   115  0088                     	;# 
   116  0089                     	;# 
   117  008C                     	;# 
   118  008D                     	;# 
   119  008E                     	;# 
   120  0091                     	;# 
   121  0092                     	;# 
   122  0093                     	;# 
   123  0094                     	;# 
   124  0098                     	;# 
   125  0099                     	;# 
   126  009C                     	;# 
   127  009D                     	;# 
   128  009E                     	;# 
   129  009F                     	;# 
   130  010C                     	;# 
   131  010D                     	;# 
   132  010E                     	;# 
   133  010F                     	;# 
   134  018C                     	;# 
   135  018D                     	;# 
   136  0000                     	;# 
   137  0001                     	;# 
   138  0002                     	;# 
   139  0003                     	;# 
   140  0004                     	;# 
   141  0005                     	;# 
   142  0006                     	;# 
   143  0007                     	;# 
   144  0008                     	;# 
   145  0009                     	;# 
   146  000A                     	;# 
   147  000B                     	;# 
   148  000C                     	;# 
   149  000D                     	;# 
   150  000E                     	;# 
   151  000E                     	;# 
   152  000F                     	;# 
   153  0010                     	;# 
   154  0011                     	;# 
   155  0012                     	;# 
   156  0013                     	;# 
   157  0014                     	;# 
   158  0015                     	;# 
   159  0015                     	;# 
   160  0016                     	;# 
   161  0017                     	;# 
   162  0018                     	;# 
   163  0019                     	;# 
   164  001A                     	;# 
   165  001B                     	;# 
   166  001B                     	;# 
   167  001C                     	;# 
   168  001D                     	;# 
   169  001E                     	;# 
   170  001F                     	;# 
   171  0081                     	;# 
   172  0085                     	;# 
   173  0086                     	;# 
   174  0087                     	;# 
   175  0088                     	;# 
   176  0089                     	;# 
   177  008C                     	;# 
   178  008D                     	;# 
   179  008E                     	;# 
   180  0091                     	;# 
   181  0092                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0098                     	;# 
   185  0099                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  010C                     	;# 
   191  010D                     	;# 
   192  010E                     	;# 
   193  010F                     	;# 
   194  018C                     	;# 
   195  018D                     	;# 
   196                           
   197                           	psect	idataBANK0
   198  001E                     __pidataBANK0:	
   199                           
   200                           ;initializer for _numeros
   201  001E  343F               	retlw	63
   202  001F  3406               	retlw	6
   203  0020  345B               	retlw	91
   204  0021  344F               	retlw	79
   205  0022  3466               	retlw	102
   206  0023  346D               	retlw	109
   207  0024  347D               	retlw	125
   208  0025  3447               	retlw	71
   209  0026  347F               	retlw	127
   210  0027  3467               	retlw	103
   211                           
   212                           ;initializer for _contHora
   213  0028  3402               	retlw	2
   214                           
   215                           ;initializer for _contDecHora
   216  0029  3401               	retlw	1
   217                           
   218                           	psect	nvBANK0
   219  0043                     __pnvBANK0:	
   220  0043                     _contHoraMostrar:	
   221  0043                     	ds	1
   222  0044                     _contDecHoraMostrar:	
   223  0044                     	ds	1
   224  0006                     _PORTB	set	6
   225  0007                     _PORTC	set	7
   226  0005                     _PORTA	set	5
   227  0008                     _PORTD	set	8
   228  0006                     _PORTBbits	set	6
   229  0013                     _SSPBUF	set	19
   230  0014                     _SSPCON	set	20
   231  003C                     _RC4	set	60
   232  003B                     _RC3	set	59
   233  0087                     _TRISCbits	set	135
   234  009F                     _ADCON1bits	set	159
   235  0085                     _TRISA	set	133
   236  0088                     _TRISD	set	136
   237  0086                     _TRISB	set	134
   238  0091                     _SSPCON2bits	set	145
   239  0093                     _SSPADD	set	147
   240  0091                     _SSPCON2	set	145
   241  0094                     _SSPSTAT	set	148
   242  048E                     _ACKSTAT	set	1166
   243                           
   244                           ; #config settings
   245  0000                     
   246                           	psect	cinit
   247  07E3                     start_initialization:	
   248  07E3                     __initialization:	
   249                           
   250                           ; Initialize objects allocated to BANK0
   251  07E3  1383               	bcf	3,7	;select IRP bank0
   252  07E4  302C               	movlw	low (__pdataBANK0+12)
   253  07E5  00FD               	movwf	btemp+-1
   254  07E6  3000               	movlw	high __pidataBANK0
   255  07E7  00FE               	movwf	btemp
   256  07E8  301E               	movlw	low __pidataBANK0
   257  07E9  00FF               	movwf	btemp+1
   258  07EA  3020               	movlw	low __pdataBANK0
   259  07EB  0084               	movwf	4
   260  07EC  120A  118A  204D  120A  118A  	fcall	init_ram0
   261                           
   262                           ; Clear objects allocated to BANK0
   263  07F1  01B8               	clrf	__pbssBANK0& (0+127)
   264  07F2  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   265  07F3  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   266  07F4  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   267  07F5  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   268  07F6  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   269  07F7  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   270  07F8  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   271  07F9  01C0               	clrf	(__pbssBANK0+8)& (0+127)
   272  07FA  01C1               	clrf	(__pbssBANK0+9)& (0+127)
   273  07FB  01C2               	clrf	(__pbssBANK0+10)& (0+127)
   274  07FC                     end_of_initialization:	
   275                           ;End of C runtime variable initialization code
   276                           
   277  07FC                     __end_of__initialization:	
   278  07FC  0183               	clrf	3
   279  07FD  120A  118A  2DAC   	ljmp	_main	;jump to C main() function
   280                           
   281                           	psect	bssBANK0
   282  0038                     __pbssBANK0:	
   283  0038                     _contadorBotonTemp:	
   284  0038                     	ds	2
   285  003A                     _AmPm:	
   286  003A                     	ds	1
   287  003B                     _formato:	
   288  003B                     	ds	1
   289  003C                     _contadorBotonSet:	
   290  003C                     	ds	1
   291  003D                     _numeroActual:	
   292  003D                     	ds	1
   293  003E                     _digitoActual:	
   294  003E                     	ds	1
   295  003F                     _contHoraAux:	
   296  003F                     	ds	1
   297  0040                     _contDecHoraAux:	
   298  0040                     	ds	1
   299  0041                     _contMin:	
   300  0041                     	ds	1
   301  0042                     _contDecMin:	
   302  0042                     	ds	1
   303                           
   304                           	psect	dataBANK0
   305  0020                     __pdataBANK0:	
   306  0020                     _numeros:	
   307  0020                     	ds	10
   308  002A                     _contHora:	
   309  002A                     	ds	1
   310  002B                     _contDecHora:	
   311  002B                     	ds	1
   312                           
   313                           	psect	inittext
   314  0049                     init_fetch0:	
   315                           ;	Called with low address in FSR and high address in W
   316                           
   317  0049  087E               	movf	btemp,w
   318  004A  008A               	movwf	10
   319  004B  087F               	movf	btemp+1,w
   320  004C  0082               	movwf	2
   321  004D                     init_ram0:	
   322                           ;Called with:
   323                           ;	high address of idata address in btemp 
   324                           ;	low address of idata address in btemp+1 
   325                           ;	low address of data in FSR
   326                           ;	high address + 1 of data in btemp-1
   327                           
   328  004D  120A  118A  2049  120A  118A  	fcall	init_fetch0
   329  0052  0080               	movwf	0
   330  0053  0A84               	incf	4,f
   331  0054  0804               	movf	4,w
   332  0055  067D               	xorwf	btemp+-1,w
   333  0056  1903               	btfsc	3,2
   334  0057  3400               	retlw	0
   335  0058  0AFF               	incf	btemp+1,f
   336  0059  1903               	btfsc	3,2
   337  005A  0AFE               	incf	btemp,f
   338  005B  284D               	goto	init_ram0
   339                           
   340                           	psect	cstackCOMMON
   341  0070                     __pcstackCOMMON:	
   342  0070                     ?_setRtcHora:	
   343  0070                     ?_setRtcMinutos:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_setRtcDefault:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_i2c_iniciar:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0070                     ??_i2c_iniciar:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0070                     ?_i2c_espera:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0070                     ??_i2c_espera:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  0070                     ?_i2c_inicia_com:	
   362                           ; 1 bytes @ 0x0
   363                           
   364  0070                     ??_i2c_inicia_com:	
   365                           ; 1 bytes @ 0x0
   366                           
   367  0070                     ?_i2c_reinicia_com:	
   368                           ; 1 bytes @ 0x0
   369                           
   370  0070                     ??_i2c_reinicia_com:	
   371                           ; 1 bytes @ 0x0
   372                           
   373  0070                     ?_i2c_detener:	
   374                           ; 1 bytes @ 0x0
   375                           
   376  0070                     ??_i2c_detener:	
   377                           ; 1 bytes @ 0x0
   378                           
   379  0070                     ?_i2c_envia_dato:	
   380                           ; 1 bytes @ 0x0
   381                           
   382  0070                     ??_i2c_envia_dato:	
   383                           ; 1 bytes @ 0x0
   384                           
   385  0070                     ?_i2c_recibe_dato:	
   386                           ; 1 bytes @ 0x0
   387                           
   388  0070                     ??_i2c_recibe_dato:	
   389                           ; 1 bytes @ 0x0
   390                           
   391  0070                     ?_leer_rtc:	
   392                           ; 1 bytes @ 0x0
   393                           
   394  0070                     ?_convertirDato:	
   395                           ; 1 bytes @ 0x0
   396                           
   397  0070                     ?_antiRebote:	
   398                           ; 1 bytes @ 0x0
   399                           
   400  0070                     ?_validaMinutos:	
   401                           ; 1 bytes @ 0x0
   402                           
   403  0070                     ??_validaMinutos:	
   404                           ; 1 bytes @ 0x0
   405                           
   406  0070                     ?_validaDecenasMinutos:	
   407                           ; 1 bytes @ 0x0
   408                           
   409  0070                     ??_validaDecenasMinutos:	
   410                           ; 1 bytes @ 0x0
   411                           
   412  0070                     ?_validaHoras:	
   413                           ; 1 bytes @ 0x0
   414                           
   415  0070                     ??_validaHoras:	
   416                           ; 1 bytes @ 0x0
   417                           
   418  0070                     ?_dameTemperatura:	
   419                           ; 1 bytes @ 0x0
   420                           
   421  0070                     ?_controlBotones:	
   422                           ; 1 bytes @ 0x0
   423                           
   424  0070                     ?_parpadearDigitos:	
   425                           ; 1 bytes @ 0x0
   426                           
   427  0070                     ??_parpadearDigitos:	
   428                           ; 1 bytes @ 0x0
   429                           
   430  0070                     ?_mostrarDigitos:	
   431                           ; 1 bytes @ 0x0
   432                           
   433  0070                     ??_mostrarDigitos:	
   434                           ; 1 bytes @ 0x0
   435                           
   436  0070                     ?_verificaAmPm:	
   437                           ; 1 bytes @ 0x0
   438                           
   439  0070                     ??_verificaAmPm:	
   440                           ; 1 bytes @ 0x0
   441                           
   442  0070                     ?_convertirFormato:	
   443                           ; 1 bytes @ 0x0
   444                           
   445  0070                     ?_dameHoraActual:	
   446                           ; 1 bytes @ 0x0
   447                           
   448  0070                     ?_main:	
   449                           ; 1 bytes @ 0x0
   450                           
   451  0070                     ?___bmul:	
   452                           ; 1 bytes @ 0x0
   453                           
   454  0070                     ?___awdiv:	
   455                           ; 1 bytes @ 0x0
   456                           
   457  0070                     i2c_envia_dato@dato:	
   458                           ; 2 bytes @ 0x0
   459                           
   460  0070                     ___bmul@multiplicand:	
   461                           ; 1 bytes @ 0x0
   462                           
   463  0070                     antiRebote@pin:	
   464                           ; 1 bytes @ 0x0
   465                           
   466  0070                     ___awdiv@divisor:	
   467                           ; 2 bytes @ 0x0
   468                           
   469                           
   470                           ; 2 bytes @ 0x0
   471  0070                     	ds	1
   472  0071                     ?_escribe_rtc:	
   473  0071                     ??___bmul:	
   474                           ; 1 bytes @ 0x1
   475                           
   476  0071                     i2c_recibe_dato@datoleido:	
   477                           ; 1 bytes @ 0x1
   478                           
   479  0071                     escribe_rtc@dato:	
   480                           ; 1 bytes @ 0x1
   481                           
   482                           
   483                           ; 1 bytes @ 0x1
   484  0071                     	ds	1
   485  0072                     ??_escribe_rtc:	
   486  0072                     ??_leer_rtc:	
   487                           ; 1 bytes @ 0x2
   488                           
   489  0072                     ??_antiRebote:	
   490                           ; 1 bytes @ 0x2
   491                           
   492  0072                     escribe_rtc@direccion:	
   493                           ; 1 bytes @ 0x2
   494                           
   495  0072                     parpadearDigitos@repeticiones:	
   496                           ; 1 bytes @ 0x2
   497                           
   498  0072                     ___bmul@product:	
   499                           ; 1 bytes @ 0x2
   500                           
   501  0072                     ___awdiv@dividend:	
   502                           ; 1 bytes @ 0x2
   503                           
   504                           
   505                           ; 2 bytes @ 0x2
   506  0072                     	ds	1
   507  0073                     ??_setRtcHora:	
   508  0073                     ??_setRtcMinutos:	
   509                           ; 1 bytes @ 0x3
   510                           
   511  0073                     ??_setRtcDefault:	
   512                           ; 1 bytes @ 0x3
   513                           
   514  0073                     leer_rtc@direccion:	
   515                           ; 1 bytes @ 0x3
   516                           
   517  0073                     ___bmul@multiplier:	
   518                           ; 1 bytes @ 0x3
   519                           
   520                           
   521                           ; 1 bytes @ 0x3
   522  0073                     	ds	1
   523  0074                     ??_convertirDato:	
   524  0074                     ??_convertirFormato:	
   525                           ; 1 bytes @ 0x4
   526                           
   527  0074                     ??___awdiv:	
   528                           ; 1 bytes @ 0x4
   529                           
   530  0074                     leer_rtc@dato:	
   531                           ; 1 bytes @ 0x4
   532                           
   533  0074                     setRtcDefault@horaRtc:	
   534                           ; 1 bytes @ 0x4
   535                           
   536                           
   537                           ; 1 bytes @ 0x4
   538  0074                     	ds	1
   539  0075                     setRtcHora@horaRtc:	
   540  0075                     setRtcMinutos@minutosRtc:	
   541                           ; 1 bytes @ 0x5
   542                           
   543  0075                     ___awdiv@counter:	
   544                           ; 1 bytes @ 0x5
   545                           
   546                           
   547                           ; 1 bytes @ 0x5
   548  0075                     	ds	1
   549  0076                     ??_controlBotones:	
   550  0076                     convertirFormato@numeroEvaluar:	
   551                           ; 1 bytes @ 0x6
   552                           
   553  0076                     ___awdiv@sign:	
   554                           ; 1 bytes @ 0x6
   555                           
   556                           
   557                           ; 1 bytes @ 0x6
   558  0076                     	ds	1
   559  0077                     convertirDato@dato:	
   560  0077                     ___awdiv@quotient:	
   561                           ; 1 bytes @ 0x7
   562                           
   563                           
   564                           ; 2 bytes @ 0x7
   565  0077                     	ds	1
   566  0078                     convertirDato@datoR:	
   567                           
   568                           ; 1 bytes @ 0x8
   569  0078                     	ds	1
   570  0079                     ?___awmod:	
   571  0079                     ___awmod@divisor:	
   572                           ; 2 bytes @ 0x9
   573                           
   574                           
   575                           ; 2 bytes @ 0x9
   576  0079                     	ds	2
   577  007B                     ___awmod@dividend:	
   578                           
   579                           ; 2 bytes @ 0xB
   580  007B                     	ds	2
   581  007D                     ??___awmod:	
   582                           
   583                           ; 1 bytes @ 0xD
   584  007D                     	ds	1
   585                           
   586                           	psect	cstackBANK0
   587  002C                     __pcstackBANK0:	
   588  002C                     ___awmod@counter:	
   589                           
   590                           ; 1 bytes @ 0x0
   591  002C                     	ds	1
   592  002D                     ___awmod@sign:	
   593                           
   594                           ; 1 bytes @ 0x1
   595  002D                     	ds	1
   596  002E                     ??_dameTemperatura:	
   597  002E                     ??_dameHoraActual:	
   598                           ; 1 bytes @ 0x2
   599                           
   600                           
   601                           ; 1 bytes @ 0x2
   602  002E                     	ds	3
   603  0031                     dameHoraActual@auxMin:	
   604  0031                     dameTemperatura@repeticiones:	
   605                           ; 1 bytes @ 0x5
   606                           
   607                           
   608                           ; 2 bytes @ 0x5
   609  0031                     	ds	1
   610  0032                     dameHoraActual@auxHora:	
   611                           
   612                           ; 1 bytes @ 0x6
   613  0032                     	ds	1
   614  0033                     dameTemperatura@unidades:	
   615                           
   616                           ; 1 bytes @ 0x7
   617  0033                     	ds	1
   618  0034                     dameTemperatura@decenas:	
   619                           
   620                           ; 1 bytes @ 0x8
   621  0034                     	ds	1
   622  0035                     dameTemperatura@temperatura:	
   623                           
   624                           ; 1 bytes @ 0x9
   625  0035                     	ds	1
   626  0036                     ??_main:	
   627                           
   628                           ; 1 bytes @ 0xA
   629  0036                     	ds	2
   630                           
   631                           	psect	maintext
   632  05AC                     __pmaintext:	
   633 ;;
   634 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   635 ;;
   636 ;; *************** function _main *****************
   637 ;; Defined at:
   638 ;;		line 518 in file "main.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : B00/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   652 ;;      Params:         0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0
   654 ;;      Temps:          0       2       0       0       0
   655 ;;      Totals:         0       2       0       0       0
   656 ;;Total ram usage:        2 bytes
   657 ;; Hardware stack levels required when called:    5
   658 ;; This function calls:
   659 ;;		_antiRebote
   660 ;;		_controlBotones
   661 ;;		_convertirFormato
   662 ;;		_dameHoraActual
   663 ;;		_dameTemperatura
   664 ;;		_i2c_iniciar
   665 ;;		_mostrarDigitos
   666 ;;		_parpadearDigitos
   667 ;;		_verificaAmPm
   668 ;; This function is called by:
   669 ;;		Startup code after reset
   670 ;; This function uses a non-reentrant model
   671 ;;
   672                           
   673                           
   674                           ;psect for function _main
   675  05AC                     _main:	
   676  05AC                     l2223:	
   677                           ;incstack = 0
   678                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   679                           
   680                           
   681                           ;main.c: 520:     TRISB = 1;
   682  05AC  3001               	movlw	1
   683  05AD  1683               	bsf	3,5	;RP0=1, select bank1
   684  05AE  1303               	bcf	3,6	;RP1=0, select bank1
   685  05AF  0086               	movwf	6	;volatile
   686  05B0                     l2225:	
   687                           
   688                           ;main.c: 521:     TRISD = 0;
   689  05B0  0188               	clrf	8	;volatile
   690  05B1                     l2227:	
   691                           
   692                           ;main.c: 522:     TRISA = 0;
   693  05B1  0185               	clrf	5	;volatile
   694  05B2                     l2229:	
   695                           
   696                           ;main.c: 523:     ADCON1bits.PCFG = 0b0111;
   697  05B2  081F               	movf	31,w	;volatile
   698  05B3  39F0               	andlw	-16
   699  05B4  3807               	iorlw	7
   700  05B5  009F               	movwf	31	;volatile
   701  05B6                     l2231:	
   702                           
   703                           ;main.c: 524:     TRISCbits.TRISC0 = 0;
   704  05B6  1007               	bcf	7,0	;volatile
   705  05B7                     l2233:	
   706                           
   707                           ;main.c: 525:     TRISCbits.TRISC1 = 0;
   708  05B7  1087               	bcf	7,1	;volatile
   709  05B8                     l2235:	
   710                           
   711                           ;main.c: 527:     i2c_iniciar();
   712  05B8  120A  118A  2037  120A  118A  	fcall	_i2c_iniciar
   713  05BD                     l2237:	
   714                           
   715                           ;main.c: 529:     contDecHoraMostrar = &contDecHora;
   716  05BD  302B               	movlw	(low (_contDecHora| 0))& (0+255)
   717  05BE  1283               	bcf	3,5	;RP0=0, select bank0
   718  05BF  1303               	bcf	3,6	;RP1=0, select bank0
   719  05C0  00B6               	movwf	??_main
   720  05C1  0836               	movf	??_main,w
   721  05C2  00C4               	movwf	_contDecHoraMostrar
   722  05C3                     l2239:	
   723                           
   724                           ;main.c: 530:     contHoraMostrar = &contHora;
   725  05C3  302A               	movlw	(low (_contHora| 0))& (0+255)
   726  05C4  00B6               	movwf	??_main
   727  05C5  0836               	movf	??_main,w
   728  05C6  00C3               	movwf	_contHoraMostrar
   729  05C7                     l2241:	
   730                           
   731                           ;main.c: 532:     PORTA = 0;
   732  05C7  0185               	clrf	5	;volatile
   733  05C8                     l2243:	
   734                           
   735                           ;main.c: 533:     PORTB = 0;
   736  05C8  0186               	clrf	6	;volatile
   737  05C9                     l2245:	
   738                           
   739                           ;main.c: 534:     PORTC = 0;
   740  05C9  0187               	clrf	7	;volatile
   741  05CA                     l2247:	
   742                           
   743                           ;main.c: 535:     PORTD = 0;
   744  05CA  0188               	clrf	8	;volatile
   745  05CB                     l2249:	
   746                           
   747                           ;main.c: 542:         _delay((unsigned long)((3)*(4000000/4000.0)));
   748  05CB  3004               	movlw	4
   749  05CC  1283               	bcf	3,5	;RP0=0, select bank0
   750  05CD  1303               	bcf	3,6	;RP1=0, select bank0
   751  05CE  00B7               	movwf	??_main+1
   752  05CF  30E3               	movlw	227
   753  05D0  00B6               	movwf	??_main
   754  05D1                     u2037:	
   755  05D1  0BB6               	decfsz	??_main,f
   756  05D2  2DD1               	goto	u2037
   757  05D3  0BB7               	decfsz	??_main+1,f
   758  05D4  2DD1               	goto	u2037
   759  05D5  2DD6               	nop2
   760  05D6                     l2251:	
   761                           
   762                           ;main.c: 544:         if (PORTBbits.RB1&&!contadorBotonSet)
   763  05D6  1283               	bcf	3,5	;RP0=0, select bank0
   764  05D7  1303               	bcf	3,6	;RP1=0, select bank0
   765  05D8  1C86               	btfss	6,1	;volatile
   766  05D9  2DDB               	goto	u1901
   767  05DA  2DDC               	goto	u1900
   768  05DB                     u1901:	
   769  05DB  2DE7               	goto	l281
   770  05DC                     u1900:	
   771  05DC                     l2253:	
   772  05DC  083C               	movf	_contadorBotonSet,w
   773  05DD  1D03               	btfss	3,2
   774  05DE  2DE0               	goto	u1911
   775  05DF  2DE1               	goto	u1910
   776  05E0                     u1911:	
   777  05E0  2DE7               	goto	l281
   778  05E1                     u1910:	
   779  05E1                     l2255:	
   780                           
   781                           ;main.c: 545:         {;main.c: 546:             dameTemperatura();
   782  05E1  120A  118A  24F8  120A  118A  	fcall	_dameTemperatura
   783                           
   784                           ;main.c: 548:         } else if (PORTBbits.RB2&&!contadorBotonSet)
   785  05E6  2E1D               	goto	l2275
   786  05E7                     l281:	
   787  05E7  1D06               	btfss	6,2	;volatile
   788  05E8  2DEA               	goto	u1921
   789  05E9  2DEB               	goto	u1920
   790  05EA                     u1921:	
   791  05EA  2E07               	goto	l283
   792  05EB                     u1920:	
   793  05EB                     l2257:	
   794  05EB  083C               	movf	_contadorBotonSet,w
   795  05EC  1D03               	btfss	3,2
   796  05ED  2DEF               	goto	u1931
   797  05EE  2DF0               	goto	u1930
   798  05EF                     u1931:	
   799  05EF  2E07               	goto	l283
   800  05F0                     u1930:	
   801  05F0                     l2259:	
   802                           
   803                           ;main.c: 549:         {;main.c: 550:             antiRebote(2);
   804  05F0  3002               	movlw	2
   805  05F1  00F0               	movwf	antiRebote@pin
   806  05F2  3000               	movlw	0
   807  05F3  00F1               	movwf	antiRebote@pin+1
   808  05F4  120A  118A  21E9  120A  118A  	fcall	_antiRebote
   809  05F9                     l2261:	
   810                           
   811                           ;main.c: 552:             if (contadorBotonTemp != 2) {
   812  05F9  3002               	movlw	2
   813  05FA  1283               	bcf	3,5	;RP0=0, select bank0
   814  05FB  1303               	bcf	3,6	;RP1=0, select bank0
   815  05FC  0638               	xorwf	_contadorBotonTemp,w
   816  05FD  0439               	iorwf	_contadorBotonTemp+1,w
   817  05FE  1903               	btfsc	3,2
   818  05FF  2E01               	goto	u1941
   819  0600  2E02               	goto	u1940
   820  0601                     u1941:	
   821  0601  2E04               	goto	l2265
   822  0602                     u1940:	
   823  0602                     l2263:	
   824                           
   825                           ;main.c: 553:                 formato = ~formato;
   826  0602  09BB               	comf	_formato,f
   827                           
   828                           ;main.c: 554:             } else {
   829  0603  2E1D               	goto	l2275
   830  0604                     l2265:	
   831                           
   832                           ;main.c: 555:                 contadorBotonTemp = 0;
   833  0604  01B8               	clrf	_contadorBotonTemp
   834  0605  01B9               	clrf	_contadorBotonTemp+1
   835  0606  2E1D               	goto	l2275
   836  0607                     l283:	
   837  0607  1806               	btfsc	6,0	;volatile
   838  0608  2E0A               	goto	u1951
   839  0609  2E0B               	goto	u1950
   840  060A                     u1951:	
   841  060A  2E18               	goto	l2273
   842  060B                     u1950:	
   843  060B                     l2267:	
   844  060B  1886               	btfsc	6,1	;volatile
   845  060C  2E0E               	goto	u1961
   846  060D  2E0F               	goto	u1960
   847  060E                     u1961:	
   848  060E  2E13               	goto	l2271
   849  060F                     u1960:	
   850  060F                     l2269:	
   851  060F  1D06               	btfss	6,2	;volatile
   852  0610  2E12               	goto	u1971
   853  0611  2E13               	goto	u1970
   854  0612                     u1971:	
   855  0612  2E1D               	goto	l2275
   856  0613                     u1970:	
   857  0613                     l2271:	
   858  0613  083C               	movf	_contadorBotonSet,w
   859  0614  1903               	btfsc	3,2
   860  0615  2E17               	goto	u1981
   861  0616  2E18               	goto	u1980
   862  0617                     u1981:	
   863  0617  2E1D               	goto	l2275
   864  0618                     u1980:	
   865  0618                     l2273:	
   866                           
   867                           ;main.c: 558:             controlBotones();
   868  0618  120A  118A  2661  120A  118A  	fcall	_controlBotones
   869  061D                     l2275:	
   870                           
   871                           ;main.c: 561:         if (!formato) {
   872  061D  1283               	bcf	3,5	;RP0=0, select bank0
   873  061E  1303               	bcf	3,6	;RP1=0, select bank0
   874  061F  083B               	movf	_formato,w
   875  0620  1D03               	btfss	3,2
   876  0621  2E23               	goto	u1991
   877  0622  2E24               	goto	u1990
   878  0623                     u1991:	
   879  0623  2E2E               	goto	l2281
   880  0624                     u1990:	
   881  0624                     l2277:	
   882                           
   883                           ;main.c: 562:             contDecHoraMostrar = &contDecHora;
   884  0624  302B               	movlw	(low (_contDecHora| 0))& (0+255)
   885  0625  00B6               	movwf	??_main
   886  0626  0836               	movf	??_main,w
   887  0627  00C4               	movwf	_contDecHoraMostrar
   888                           
   889                           ;main.c: 563:             contHoraMostrar = &contHora;
   890  0628  302A               	movlw	(low (_contHora| 0))& (0+255)
   891  0629  00B6               	movwf	??_main
   892  062A  0836               	movf	??_main,w
   893  062B  00C3               	movwf	_contHoraMostrar
   894  062C                     l2279:	
   895                           
   896                           ;main.c: 564:             PORTC = 0;
   897  062C  0187               	clrf	7	;volatile
   898                           
   899                           ;main.c: 565:         } else {
   900  062D  2E38               	goto	l2285
   901  062E                     l2281:	
   902                           
   903                           ;main.c: 566:             verificaAmPm();
   904  062E  120A  118A  2126  120A  118A  	fcall	_verificaAmPm
   905  0633                     l2283:	
   906                           
   907                           ;main.c: 567:             convertirFormato();
   908  0633  120A  118A  244A  120A  118A  	fcall	_convertirFormato
   909  0638                     l2285:	
   910                           
   911                           ;main.c: 570:         if (!contadorBotonSet) {
   912  0638  1283               	bcf	3,5	;RP0=0, select bank0
   913  0639  1303               	bcf	3,6	;RP1=0, select bank0
   914  063A  083C               	movf	_contadorBotonSet,w
   915  063B  1D03               	btfss	3,2
   916  063C  2E3E               	goto	u2001
   917  063D  2E3F               	goto	u2000
   918  063E                     u2001:	
   919  063E  2E58               	goto	l2297
   920  063F                     u2000:	
   921  063F                     l2287:	
   922                           
   923                           ;main.c: 572:             if (contadorBotonTemp == 1 && (numeroActual != contMin))
   924  063F  0338               	decf	_contadorBotonTemp,w
   925  0640  0439               	iorwf	_contadorBotonTemp+1,w
   926  0641  1D03               	btfss	3,2
   927  0642  2E44               	goto	u2011
   928  0643  2E45               	goto	u2010
   929  0644                     u2011:	
   930  0644  2E4D               	goto	l2293
   931  0645                     u2010:	
   932  0645                     l2289:	
   933  0645  083D               	movf	_numeroActual,w
   934  0646  0641               	xorwf	_contMin,w
   935  0647  1903               	skipnz
   936  0648  2E4A               	goto	u2021
   937  0649  2E4B               	goto	u2020
   938  064A                     u2021:	
   939  064A  2E4D               	goto	l2293
   940  064B                     u2020:	
   941  064B                     l2291:	
   942                           
   943                           ;main.c: 573:                 contadorBotonTemp = 0;
   944  064B  01B8               	clrf	_contadorBotonTemp
   945  064C  01B9               	clrf	_contadorBotonTemp+1
   946  064D                     l2293:	
   947                           
   948                           ;main.c: 575:             dameHoraActual();
   949  064D  120A  118A  271E  120A  118A  	fcall	_dameHoraActual
   950  0652                     l2295:	
   951                           
   952                           ;main.c: 576:             mostrarDigitos();
   953  0652  120A  118A  2280  120A  118A  	fcall	_mostrarDigitos
   954                           
   955                           ;main.c: 577:         } else {
   956  0657  2DCB               	goto	l2249
   957  0658                     l2297:	
   958                           
   959                           ;main.c: 578:             parpadearDigitos();
   960  0658  120A  118A  23C5  120A  118A  	fcall	_parpadearDigitos
   961  065D  2DCB               	goto	l2249
   962  065E  120A  118A  2800   	ljmp	start
   963  0661                     __end_of_main:	
   964                           
   965                           	psect	text1
   966  0126                     __ptext1:	
   967 ;; *************** function _verificaAmPm *****************
   968 ;; Defined at:
   969 ;;		line 320 in file "main.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, status,2, status,0
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_main
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _verificaAmPm
   998  0126                     _verificaAmPm:	
   999  0126                     l2093:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _verificaAmPm: [wreg+status,2+status,0]
  1002                           
  1003                           
  1004                           ;main.c: 322:     if (((contHora >= 0 && contHora <= 9)&&!contDecHora) || ((contHora >= 
      +                          0 && contHora <= 1) && contDecHora == 1))
  1005  0126  1283               	bcf	3,5	;RP0=0, select bank0
  1006  0127  1303               	bcf	3,6	;RP1=0, select bank0
  1007  0128  1BAA               	btfsc	_contHora,7
  1008  0129  292B               	goto	u1761
  1009  012A  292C               	goto	u1760
  1010  012B                     u1761:	
  1011  012B  2938               	goto	l228
  1012  012C                     u1760:	
  1013  012C                     l2095:	
  1014  012C  082A               	movf	_contHora,w
  1015  012D  3A80               	xorlw	128
  1016  012E  3E76               	addlw	-138
  1017  012F  1803               	skipnc
  1018  0130  2932               	goto	u1771
  1019  0131  2933               	goto	u1770
  1020  0132                     u1771:	
  1021  0132  2938               	goto	l228
  1022  0133                     u1770:	
  1023  0133                     l2097:	
  1024  0133  082B               	movf	_contDecHora,w
  1025  0134  1903               	btfsc	3,2
  1026  0135  2937               	goto	u1781
  1027  0136  2938               	goto	u1780
  1028  0137                     u1781:	
  1029  0137  2948               	goto	l2103
  1030  0138                     u1780:	
  1031  0138                     l228:	
  1032  0138  1BAA               	btfsc	_contHora,7
  1033  0139  293B               	goto	u1791
  1034  013A  293C               	goto	u1790
  1035  013B                     u1791:	
  1036  013B  294C               	goto	l224
  1037  013C                     u1790:	
  1038  013C                     l2099:	
  1039  013C  082A               	movf	_contHora,w
  1040  013D  3A80               	xorlw	128
  1041  013E  3E7E               	addlw	-130
  1042  013F  1803               	skipnc
  1043  0140  2942               	goto	u1801
  1044  0141  2943               	goto	u1800
  1045  0142                     u1801:	
  1046  0142  294C               	goto	l224
  1047  0143                     u1800:	
  1048  0143                     l2101:	
  1049  0143  032B               	decf	_contDecHora,w
  1050  0144  1D03               	btfss	3,2
  1051  0145  2947               	goto	u1811
  1052  0146  2948               	goto	u1810
  1053  0147                     u1811:	
  1054  0147  294C               	goto	l224
  1055  0148                     u1810:	
  1056  0148                     l2103:	
  1057                           
  1058                           ;main.c: 323:     {;main.c: 324:         AmPm = 0;
  1059  0148  01BA               	clrf	_AmPm
  1060  0149                     l2105:	
  1061                           
  1062                           ;main.c: 325:         PORTC = 1;
  1063  0149  3001               	movlw	1
  1064  014A  0087               	movwf	7	;volatile
  1065                           
  1066                           ;main.c: 326:     } else
  1067  014B  2950               	goto	l230
  1068  014C                     l224:	
  1069                           
  1070                           ;main.c: 327:     {;main.c: 328:         AmPm = 1;
  1071  014C  01BA               	clrf	_AmPm
  1072  014D  0ABA               	incf	_AmPm,f
  1073  014E                     l2107:	
  1074                           
  1075                           ;main.c: 329:         PORTC = 2;
  1076  014E  3002               	movlw	2
  1077  014F  0087               	movwf	7	;volatile
  1078  0150                     l230:	
  1079  0150  0008               	return
  1080  0151                     __end_of_verificaAmPm:	
  1081                           
  1082                           	psect	text2
  1083  03C5                     __ptext2:	
  1084 ;; *************** function _parpadearDigitos *****************
  1085 ;; Defined at:
  1086 ;;		line 235 in file "main.c"
  1087 ;; Parameters:    Size  Location     Type
  1088 ;;		None
  1089 ;; Auto vars:     Size  Location     Type
  1090 ;;  repeticiones    1    2[COMMON] unsigned char 
  1091 ;; Return value:  Size  Location     Type
  1092 ;;                  1    wreg      void 
  1093 ;; Registers used:
  1094 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1095 ;; Tracked objects:
  1096 ;;		On entry : 0/0
  1097 ;;		On exit  : 0/0
  1098 ;;		Unchanged: 0/0
  1099 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1100 ;;      Params:         0       0       0       0       0
  1101 ;;      Locals:         1       0       0       0       0
  1102 ;;      Temps:          2       0       0       0       0
  1103 ;;      Totals:         3       0       0       0       0
  1104 ;;Total ram usage:        3 bytes
  1105 ;; Hardware stack levels used:    1
  1106 ;; This function calls:
  1107 ;;		Nothing
  1108 ;; This function is called by:
  1109 ;;		_main
  1110 ;; This function uses a non-reentrant model
  1111 ;;
  1112                           
  1113                           
  1114                           ;psect for function _parpadearDigitos
  1115  03C5                     _parpadearDigitos:	
  1116  03C5                     l2025:	
  1117                           ;incstack = 0
  1118                           ; Regs used in _parpadearDigitos: [wreg-fsr0h+status,2+status,0]
  1119                           
  1120                           
  1121                           ;main.c: 237:     unsigned char repeticiones = 5;
  1122  03C5  3005               	movlw	5
  1123  03C6  00F0               	movwf	??_parpadearDigitos
  1124  03C7  0870               	movf	??_parpadearDigitos,w
  1125  03C8  00F2               	movwf	parpadearDigitos@repeticiones
  1126                           
  1127                           ;main.c: 238:     while (repeticiones) {
  1128  03C9  2C44               	goto	l2069
  1129  03CA                     l2027:	
  1130                           
  1131                           ;main.c: 240:         PORTD = numeros[contMin];
  1132  03CA  1283               	bcf	3,5	;RP0=0, select bank0
  1133  03CB  1303               	bcf	3,6	;RP1=0, select bank0
  1134  03CC  0841               	movf	_contMin,w
  1135  03CD  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1136  03CE  0084               	movwf	4
  1137  03CF  1383               	bcf	3,7	;select IRP bank0
  1138  03D0  0800               	movf	0,w
  1139  03D1  0088               	movwf	8	;volatile
  1140  03D2                     l2029:	
  1141                           
  1142                           ;main.c: 242:         if (contadorBotonSet == 1) {
  1143  03D2  033C               	decf	_contadorBotonSet,w
  1144  03D3  1D03               	btfss	3,2
  1145  03D4  2BD6               	goto	u1661
  1146  03D5  2BD7               	goto	u1660
  1147  03D6                     u1661:	
  1148  03D6  2BDC               	goto	l2033
  1149  03D7                     u1660:	
  1150  03D7                     l2031:	
  1151                           
  1152                           ;main.c: 243:             if (repeticiones == 1) {
  1153  03D7  0372               	decf	parpadearDigitos@repeticiones,w
  1154  03D8  1D03               	btfss	3,2
  1155  03D9  2BDB               	goto	u1671
  1156  03DA  2BDC               	goto	u1670
  1157  03DB                     u1671:	
  1158  03DB  2BE6               	goto	l2037
  1159  03DC                     u1670:	
  1160  03DC                     l2033:	
  1161                           
  1162                           ;main.c: 244:                 PORTA = 1;
  1163  03DC  3001               	movlw	1
  1164  03DD  0085               	movwf	5	;volatile
  1165                           
  1166                           ;main.c: 245:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  1167  03DE  3007               	movlw	7
  1168  03DF  00F1               	movwf	??_parpadearDigitos+1
  1169  03E0  307D               	movlw	125
  1170  03E1  00F0               	movwf	??_parpadearDigitos
  1171  03E2                     u2047:	
  1172  03E2  0BF0               	decfsz	??_parpadearDigitos,f
  1173  03E3  2BE2               	goto	u2047
  1174  03E4  0BF1               	decfsz	??_parpadearDigitos+1,f
  1175  03E5  2BE2               	goto	u2047
  1176  03E6                     l2037:	
  1177                           
  1178                           ;main.c: 252:         PORTD = numeros[contDecMin];
  1179  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  1180  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  1181  03E8  0842               	movf	_contDecMin,w
  1182  03E9  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1183  03EA  0084               	movwf	4
  1184  03EB  1383               	bcf	3,7	;select IRP bank0
  1185  03EC  0800               	movf	0,w
  1186  03ED  0088               	movwf	8	;volatile
  1187  03EE                     l2039:	
  1188                           
  1189                           ;main.c: 254:         if (contadorBotonSet == 2) {
  1190  03EE  3002               	movlw	2
  1191  03EF  063C               	xorwf	_contadorBotonSet,w
  1192  03F0  1D03               	btfss	3,2
  1193  03F1  2BF3               	goto	u1681
  1194  03F2  2BF4               	goto	u1680
  1195  03F3                     u1681:	
  1196  03F3  2BF9               	goto	l2043
  1197  03F4                     u1680:	
  1198  03F4                     l2041:	
  1199                           
  1200                           ;main.c: 255:             if (repeticiones == 1) {
  1201  03F4  0372               	decf	parpadearDigitos@repeticiones,w
  1202  03F5  1D03               	btfss	3,2
  1203  03F6  2BF8               	goto	u1691
  1204  03F7  2BF9               	goto	u1690
  1205  03F8                     u1691:	
  1206  03F8  2C03               	goto	l2047
  1207  03F9                     u1690:	
  1208  03F9                     l2043:	
  1209                           
  1210                           ;main.c: 256:                 PORTA = 2;
  1211  03F9  3002               	movlw	2
  1212  03FA  0085               	movwf	5	;volatile
  1213                           
  1214                           ;main.c: 257:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  1215  03FB  3007               	movlw	7
  1216  03FC  00F1               	movwf	??_parpadearDigitos+1
  1217  03FD  307D               	movlw	125
  1218  03FE  00F0               	movwf	??_parpadearDigitos
  1219  03FF                     u2057:	
  1220  03FF  0BF0               	decfsz	??_parpadearDigitos,f
  1221  0400  2BFF               	goto	u2057
  1222  0401  0BF1               	decfsz	??_parpadearDigitos+1,f
  1223  0402  2BFF               	goto	u2057
  1224  0403                     l2047:	
  1225                           
  1226                           ;main.c: 264:         PORTD = numeros[(*contHoraMostrar)] + 128;
  1227  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1228  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1229  0405  0843               	movf	_contHoraMostrar,w
  1230  0406  0084               	movwf	4
  1231  0407  1383               	bcf	3,7	;select IRP bank0
  1232  0408  0800               	movf	0,w
  1233  0409  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1234  040A  0084               	movwf	4
  1235  040B  0800               	movf	0,w
  1236  040C  3E80               	addlw	128
  1237  040D  0088               	movwf	8	;volatile
  1238  040E                     l2049:	
  1239                           
  1240                           ;main.c: 266:         if (contadorBotonSet == 3) {
  1241  040E  3003               	movlw	3
  1242  040F  063C               	xorwf	_contadorBotonSet,w
  1243  0410  1D03               	btfss	3,2
  1244  0411  2C13               	goto	u1701
  1245  0412  2C14               	goto	u1700
  1246  0413                     u1701:	
  1247  0413  2C19               	goto	l2053
  1248  0414                     u1700:	
  1249  0414                     l2051:	
  1250                           
  1251                           ;main.c: 267:             if (repeticiones == 1) {
  1252  0414  0372               	decf	parpadearDigitos@repeticiones,w
  1253  0415  1D03               	btfss	3,2
  1254  0416  2C18               	goto	u1711
  1255  0417  2C19               	goto	u1710
  1256  0418                     u1711:	
  1257  0418  2C23               	goto	l2057
  1258  0419                     u1710:	
  1259  0419                     l2053:	
  1260                           
  1261                           ;main.c: 268:                 PORTA = 4;
  1262  0419  3004               	movlw	4
  1263  041A  0085               	movwf	5	;volatile
  1264                           
  1265                           ;main.c: 269:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  1266  041B  3007               	movlw	7
  1267  041C  00F1               	movwf	??_parpadearDigitos+1
  1268  041D  307D               	movlw	125
  1269  041E  00F0               	movwf	??_parpadearDigitos
  1270  041F                     u2067:	
  1271  041F  0BF0               	decfsz	??_parpadearDigitos,f
  1272  0420  2C1F               	goto	u2067
  1273  0421  0BF1               	decfsz	??_parpadearDigitos+1,f
  1274  0422  2C1F               	goto	u2067
  1275  0423                     l2057:	
  1276                           
  1277                           ;main.c: 276:         PORTD = numeros[(*contDecHoraMostrar)];
  1278  0423  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0424  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0425  0844               	movf	_contDecHoraMostrar,w
  1281  0426  0084               	movwf	4
  1282  0427  1383               	bcf	3,7	;select IRP bank0
  1283  0428  0800               	movf	0,w
  1284  0429  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1285  042A  0084               	movwf	4
  1286  042B  0800               	movf	0,w
  1287  042C  0088               	movwf	8	;volatile
  1288  042D                     l2059:	
  1289                           
  1290                           ;main.c: 278:         if (contadorBotonSet == 3) {
  1291  042D  3003               	movlw	3
  1292  042E  063C               	xorwf	_contadorBotonSet,w
  1293  042F  1D03               	btfss	3,2
  1294  0430  2C32               	goto	u1721
  1295  0431  2C33               	goto	u1720
  1296  0432                     u1721:	
  1297  0432  2C38               	goto	l2063
  1298  0433                     u1720:	
  1299  0433                     l2061:	
  1300                           
  1301                           ;main.c: 279:             if (repeticiones == 1) {
  1302  0433  0372               	decf	parpadearDigitos@repeticiones,w
  1303  0434  1D03               	btfss	3,2
  1304  0435  2C37               	goto	u1731
  1305  0436  2C38               	goto	u1730
  1306  0437                     u1731:	
  1307  0437  2C42               	goto	l2067
  1308  0438                     u1730:	
  1309  0438                     l2063:	
  1310                           
  1311                           ;main.c: 280:                 PORTA = 8;
  1312  0438  3008               	movlw	8
  1313  0439  0085               	movwf	5	;volatile
  1314                           
  1315                           ;main.c: 281:                 _delay((unsigned long)((5)*(4000000/4000.0)));
  1316  043A  3007               	movlw	7
  1317  043B  00F1               	movwf	??_parpadearDigitos+1
  1318  043C  307D               	movlw	125
  1319  043D  00F0               	movwf	??_parpadearDigitos
  1320  043E                     u2077:	
  1321  043E  0BF0               	decfsz	??_parpadearDigitos,f
  1322  043F  2C3E               	goto	u2077
  1323  0440  0BF1               	decfsz	??_parpadearDigitos+1,f
  1324  0441  2C3E               	goto	u2077
  1325  0442                     l2067:	
  1326                           
  1327                           ;main.c: 288:         repeticiones--;
  1328  0442  3001               	movlw	1
  1329  0443  02F2               	subwf	parpadearDigitos@repeticiones,f
  1330  0444                     l2069:	
  1331                           
  1332                           ;main.c: 238:     while (repeticiones) {
  1333  0444  0872               	movf	parpadearDigitos@repeticiones,w
  1334  0445  1D03               	btfss	3,2
  1335  0446  2C48               	goto	u1741
  1336  0447  2C49               	goto	u1740
  1337  0448                     u1741:	
  1338  0448  2BCA               	goto	l2027
  1339  0449                     u1740:	
  1340  0449                     l216:	
  1341  0449  0008               	return
  1342  044A                     __end_of_parpadearDigitos:	
  1343                           
  1344                           	psect	text3
  1345  0280                     __ptext3:	
  1346 ;; *************** function _mostrarDigitos *****************
  1347 ;; Defined at:
  1348 ;;		line 292 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          2       0       0       0       0
  1365 ;;      Totals:         2       0       0       0       0
  1366 ;;Total ram usage:        2 bytes
  1367 ;; Hardware stack levels used:    1
  1368 ;; This function calls:
  1369 ;;		Nothing
  1370 ;; This function is called by:
  1371 ;;		_main
  1372 ;; This function uses a non-reentrant model
  1373 ;;
  1374                           
  1375                           
  1376                           ;psect for function _mostrarDigitos
  1377  0280                     _mostrarDigitos:	
  1378  0280                     l2071:	
  1379                           ;incstack = 0
  1380                           ; Regs used in _mostrarDigitos: [wreg-fsr0h+status,2+status,0+btemp+1]
  1381                           
  1382                           
  1383                           ;main.c: 294:     if (contadorBotonTemp < 2) {
  1384  0280  1283               	bcf	3,5	;RP0=0, select bank0
  1385  0281  1303               	bcf	3,6	;RP1=0, select bank0
  1386  0282  0839               	movf	_contadorBotonTemp+1,w
  1387  0283  3A80               	xorlw	128
  1388  0284  00FF               	movwf	btemp+1
  1389  0285  3080               	movlw	128
  1390  0286  027F               	subwf	btemp+1,w
  1391  0287  1D03               	skipz
  1392  0288  2A8B               	goto	u1755
  1393  0289  3002               	movlw	2
  1394  028A  0238               	subwf	_contadorBotonTemp,w
  1395  028B                     u1755:	
  1396  028B  1803               	skipnc
  1397  028C  2A8E               	goto	u1751
  1398  028D  2A8F               	goto	u1750
  1399  028E                     u1751:	
  1400  028E  2AE1               	goto	l2091
  1401  028F                     u1750:	
  1402  028F                     l2073:	
  1403                           
  1404                           ;main.c: 298:         PORTD = numeros[contMin];
  1405  028F  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0290  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0291  0841               	movf	_contMin,w
  1408  0292  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1409  0293  0084               	movwf	4
  1410  0294  1383               	bcf	3,7	;select IRP bank0
  1411  0295  0800               	movf	0,w
  1412  0296  0088               	movwf	8	;volatile
  1413  0297                     l2075:	
  1414                           
  1415                           ;main.c: 299:         PORTA = 1;
  1416  0297  3001               	movlw	1
  1417  0298  0085               	movwf	5	;volatile
  1418  0299                     l2077:	
  1419                           
  1420                           ;main.c: 300:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1421  0299  3004               	movlw	4
  1422  029A  00F1               	movwf	??_mostrarDigitos+1
  1423  029B  30E4               	movlw	228
  1424  029C  00F0               	movwf	??_mostrarDigitos
  1425  029D                     u2087:	
  1426  029D  0BF0               	decfsz	??_mostrarDigitos,f
  1427  029E  2A9D               	goto	u2087
  1428  029F  0BF1               	decfsz	??_mostrarDigitos+1,f
  1429  02A0  2A9D               	goto	u2087
  1430  02A1  0000               	nop
  1431                           
  1432                           ;main.c: 302:         PORTD = numeros[contDecMin];
  1433  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1434  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1435  02A4  0842               	movf	_contDecMin,w
  1436  02A5  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1437  02A6  0084               	movwf	4
  1438  02A7  1383               	bcf	3,7	;select IRP bank0
  1439  02A8  0800               	movf	0,w
  1440  02A9  0088               	movwf	8	;volatile
  1441  02AA                     l2079:	
  1442                           
  1443                           ;main.c: 303:         PORTA = 2;
  1444  02AA  3002               	movlw	2
  1445  02AB  0085               	movwf	5	;volatile
  1446  02AC                     l2081:	
  1447                           
  1448                           ;main.c: 304:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1449  02AC  3004               	movlw	4
  1450  02AD  00F1               	movwf	??_mostrarDigitos+1
  1451  02AE  30E4               	movlw	228
  1452  02AF  00F0               	movwf	??_mostrarDigitos
  1453  02B0                     u2097:	
  1454  02B0  0BF0               	decfsz	??_mostrarDigitos,f
  1455  02B1  2AB0               	goto	u2097
  1456  02B2  0BF1               	decfsz	??_mostrarDigitos+1,f
  1457  02B3  2AB0               	goto	u2097
  1458  02B4  0000               	nop
  1459                           
  1460                           ;main.c: 306:         PORTD = numeros[(*contHoraMostrar)] + 128;
  1461  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1462  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1463  02B7  0843               	movf	_contHoraMostrar,w
  1464  02B8  0084               	movwf	4
  1465  02B9  1383               	bcf	3,7	;select IRP bank0
  1466  02BA  0800               	movf	0,w
  1467  02BB  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1468  02BC  0084               	movwf	4
  1469  02BD  0800               	movf	0,w
  1470  02BE  3E80               	addlw	128
  1471  02BF  0088               	movwf	8	;volatile
  1472  02C0                     l2083:	
  1473                           
  1474                           ;main.c: 307:         PORTA = 4;
  1475  02C0  3004               	movlw	4
  1476  02C1  0085               	movwf	5	;volatile
  1477  02C2                     l2085:	
  1478                           
  1479                           ;main.c: 308:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1480  02C2  3004               	movlw	4
  1481  02C3  00F1               	movwf	??_mostrarDigitos+1
  1482  02C4  30E4               	movlw	228
  1483  02C5  00F0               	movwf	??_mostrarDigitos
  1484  02C6                     u2107:	
  1485  02C6  0BF0               	decfsz	??_mostrarDigitos,f
  1486  02C7  2AC6               	goto	u2107
  1487  02C8  0BF1               	decfsz	??_mostrarDigitos+1,f
  1488  02C9  2AC6               	goto	u2107
  1489  02CA  0000               	nop
  1490                           
  1491                           ;main.c: 310:         PORTD = numeros[(*contDecHoraMostrar)];
  1492  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  1493  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  1494  02CD  0844               	movf	_contDecHoraMostrar,w
  1495  02CE  0084               	movwf	4
  1496  02CF  1383               	bcf	3,7	;select IRP bank0
  1497  02D0  0800               	movf	0,w
  1498  02D1  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1499  02D2  0084               	movwf	4
  1500  02D3  0800               	movf	0,w
  1501  02D4  0088               	movwf	8	;volatile
  1502  02D5                     l2087:	
  1503                           
  1504                           ;main.c: 311:         PORTA = 8;
  1505  02D5  3008               	movlw	8
  1506  02D6  0085               	movwf	5	;volatile
  1507  02D7                     l2089:	
  1508                           
  1509                           ;main.c: 312:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1510  02D7  3004               	movlw	4
  1511  02D8  00F1               	movwf	??_mostrarDigitos+1
  1512  02D9  30E4               	movlw	228
  1513  02DA  00F0               	movwf	??_mostrarDigitos
  1514  02DB                     u2117:	
  1515  02DB  0BF0               	decfsz	??_mostrarDigitos,f
  1516  02DC  2ADB               	goto	u2117
  1517  02DD  0BF1               	decfsz	??_mostrarDigitos+1,f
  1518  02DE  2ADB               	goto	u2117
  1519  02DF  0000               	nop
  1520                           
  1521                           ;main.c: 314:     } else {
  1522  02E0  2AE4               	goto	l221
  1523  02E1                     l2091:	
  1524                           
  1525                           ;main.c: 315:         PORTA = 0;
  1526  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1527  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1528  02E3  0185               	clrf	5	;volatile
  1529  02E4                     l221:	
  1530  02E4  0008               	return
  1531  02E5                     __end_of_mostrarDigitos:	
  1532                           
  1533                           	psect	text4
  1534  0037                     __ptext4:	
  1535 ;; *************** function _i2c_iniciar *****************
  1536 ;; Defined at:
  1537 ;;		line 4 in file "./I2C.h"
  1538 ;; Parameters:    Size  Location     Type
  1539 ;;		None
  1540 ;; Auto vars:     Size  Location     Type
  1541 ;;		None
  1542 ;; Return value:  Size  Location     Type
  1543 ;;                  1    wreg      void 
  1544 ;; Registers used:
  1545 ;;		wreg, status,2
  1546 ;; Tracked objects:
  1547 ;;		On entry : 0/0
  1548 ;;		On exit  : 0/0
  1549 ;;		Unchanged: 0/0
  1550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1551 ;;      Params:         0       0       0       0       0
  1552 ;;      Locals:         0       0       0       0       0
  1553 ;;      Temps:          0       0       0       0       0
  1554 ;;      Totals:         0       0       0       0       0
  1555 ;;Total ram usage:        0 bytes
  1556 ;; Hardware stack levels used:    1
  1557 ;; This function calls:
  1558 ;;		Nothing
  1559 ;; This function is called by:
  1560 ;;		_main
  1561 ;; This function uses a non-reentrant model
  1562 ;;
  1563                           
  1564                           
  1565                           ;psect for function _i2c_iniciar
  1566  0037                     _i2c_iniciar:	
  1567  0037                     l1913:	
  1568                           ;incstack = 0
  1569                           ; Regs used in _i2c_iniciar: [wreg+status,2]
  1570                           
  1571                           
  1572                           ;./I2C.h: 5:     RC3 = 1;
  1573  0037  1283               	bcf	3,5	;RP0=0, select bank0
  1574  0038  1303               	bcf	3,6	;RP1=0, select bank0
  1575  0039  1587               	bsf	7,3	;volatile
  1576                           
  1577                           ;./I2C.h: 6:     RC4 = 1;
  1578  003A  1607               	bsf	7,4	;volatile
  1579  003B                     l1915:	
  1580                           
  1581                           ;./I2C.h: 7:     SSPSTAT = 0b10000000;
  1582  003B  3080               	movlw	128
  1583  003C  1683               	bsf	3,5	;RP0=1, select bank1
  1584  003D  1303               	bcf	3,6	;RP1=0, select bank1
  1585  003E  0094               	movwf	20	;volatile
  1586                           
  1587                           ;./I2C.h: 8:     SSPCON = 0b00101000;
  1588  003F  3028               	movlw	40
  1589  0040  1283               	bcf	3,5	;RP0=0, select bank0
  1590  0041  1303               	bcf	3,6	;RP1=0, select bank0
  1591  0042  0094               	movwf	20	;volatile
  1592  0043                     l1917:	
  1593                           
  1594                           ;./I2C.h: 9:     SSPCON2 = 0b00000000;
  1595  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1596  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1597  0045  0191               	clrf	17	;volatile
  1598  0046                     l1919:	
  1599                           
  1600                           ;./I2C.h: 10:     SSPADD = 9;
  1601  0046  3009               	movlw	9
  1602  0047  0093               	movwf	19	;volatile
  1603  0048                     l49:	
  1604  0048  0008               	return
  1605  0049                     __end_of_i2c_iniciar:	
  1606                           
  1607                           	psect	text5
  1608  04F8                     __ptext5:	
  1609 ;; *************** function _dameTemperatura *****************
  1610 ;; Defined at:
  1611 ;;		line 112 in file "main.c"
  1612 ;; Parameters:    Size  Location     Type
  1613 ;;		None
  1614 ;; Auto vars:     Size  Location     Type
  1615 ;;  repeticiones    2    5[BANK0 ] short 
  1616 ;;  temperatura     1    9[BANK0 ] unsigned char 
  1617 ;;  decenas         1    8[BANK0 ] unsigned char 
  1618 ;;  unidades        1    7[BANK0 ] unsigned char 
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       5       0       0       0
  1630 ;;      Temps:          0       3       0       0       0
  1631 ;;      Totals:         0       8       0       0       0
  1632 ;;Total ram usage:        8 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    3
  1635 ;; This function calls:
  1636 ;;		___awdiv
  1637 ;;		___awmod
  1638 ;;		_antiRebote
  1639 ;;		_leer_rtc
  1640 ;; This function is called by:
  1641 ;;		_main
  1642 ;; This function uses a non-reentrant model
  1643 ;;
  1644                           
  1645                           
  1646                           ;psect for function _dameTemperatura
  1647  04F8                     _dameTemperatura:	
  1648  04F8                     l1921:	
  1649                           ;incstack = 0
  1650                           ; Regs used in _dameTemperatura: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1651                           
  1652                           
  1653                           ;main.c: 114:     antiRebote(1);
  1654  04F8  3001               	movlw	1
  1655  04F9  00F0               	movwf	antiRebote@pin
  1656  04FA  3000               	movlw	0
  1657  04FB  00F1               	movwf	antiRebote@pin+1
  1658  04FC  120A  118A  21E9  120A  118A  	fcall	_antiRebote
  1659  0501                     l1923:	
  1660                           
  1661                           ;main.c: 116:     contadorBotonTemp++;
  1662  0501  3001               	movlw	1
  1663  0502  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0503  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0504  07B8               	addwf	_contadorBotonTemp,f
  1666  0505  1803               	skipnc
  1667  0506  0AB9               	incf	_contadorBotonTemp+1,f
  1668  0507  3000               	movlw	0
  1669  0508  07B9               	addwf	_contadorBotonTemp+1,f
  1670  0509                     l1925:	
  1671                           
  1672                           ;main.c: 118:     if (contadorBotonTemp > 2) {
  1673  0509  0839               	movf	_contadorBotonTemp+1,w
  1674  050A  3A80               	xorlw	128
  1675  050B  00FF               	movwf	btemp+1
  1676  050C  3080               	movlw	128
  1677  050D  027F               	subwf	btemp+1,w
  1678  050E  1D03               	skipz
  1679  050F  2D12               	goto	u1585
  1680  0510  3003               	movlw	3
  1681  0511  0238               	subwf	_contadorBotonTemp,w
  1682  0512                     u1585:	
  1683  0512  1C03               	skipc
  1684  0513  2D15               	goto	u1581
  1685  0514  2D16               	goto	u1580
  1686  0515                     u1581:	
  1687  0515  2D1B               	goto	l1929
  1688  0516                     u1580:	
  1689  0516                     l1927:	
  1690                           
  1691                           ;main.c: 119:         contadorBotonTemp = 0;
  1692  0516  1283               	bcf	3,5	;RP0=0, select bank0
  1693  0517  1303               	bcf	3,6	;RP1=0, select bank0
  1694  0518  01B8               	clrf	_contadorBotonTemp
  1695  0519  01B9               	clrf	_contadorBotonTemp+1
  1696                           
  1697                           ;main.c: 120:     } else if (contadorBotonTemp == 1) {
  1698  051A  2DAB               	goto	l172
  1699  051B                     l1929:	
  1700  051B  1283               	bcf	3,5	;RP0=0, select bank0
  1701  051C  1303               	bcf	3,6	;RP1=0, select bank0
  1702  051D  0338               	decf	_contadorBotonTemp,w
  1703  051E  0439               	iorwf	_contadorBotonTemp+1,w
  1704  051F  1D03               	btfss	3,2
  1705  0520  2D22               	goto	u1591
  1706  0521  2D23               	goto	u1590
  1707  0522                     u1591:	
  1708  0522  2DAB               	goto	l172
  1709  0523                     u1590:	
  1710  0523                     l1931:	
  1711                           
  1712                           ;main.c: 122:         short int repeticiones = 400;
  1713  0523  3090               	movlw	144
  1714  0524  00B1               	movwf	dameTemperatura@repeticiones
  1715  0525  3001               	movlw	1
  1716  0526  00B2               	movwf	dameTemperatura@repeticiones+1
  1717  0527                     l1933:	
  1718                           
  1719                           ;main.c: 123:         unsigned char unidades, decenas, temperatura;;main.c: 125:        
      +                           temperatura = leer_rtc(0x11);
  1720  0527  3011               	movlw	17
  1721  0528  120A  118A  2151  120A  118A  	fcall	_leer_rtc
  1722  052D  1283               	bcf	3,5	;RP0=0, select bank0
  1723  052E  1303               	bcf	3,6	;RP1=0, select bank0
  1724  052F  00AE               	movwf	??_dameTemperatura
  1725  0530  082E               	movf	??_dameTemperatura,w
  1726  0531  00B5               	movwf	dameTemperatura@temperatura
  1727  0532                     l1935:	
  1728                           
  1729                           ;main.c: 127:         unidades = temperatura % 10;
  1730  0532  300A               	movlw	10
  1731  0533  00F9               	movwf	___awmod@divisor
  1732  0534  3000               	movlw	0
  1733  0535  00FA               	movwf	___awmod@divisor+1
  1734  0536  0835               	movf	dameTemperatura@temperatura,w
  1735  0537  00AE               	movwf	??_dameTemperatura
  1736  0538  01AF               	clrf	??_dameTemperatura+1
  1737  0539  082E               	movf	??_dameTemperatura,w
  1738  053A  00FB               	movwf	___awmod@dividend
  1739  053B  082F               	movf	??_dameTemperatura+1,w
  1740  053C  00FC               	movwf	___awmod@dividend+1
  1741  053D  120A  118A  2225  120A  118A  	fcall	___awmod
  1742  0542  0879               	movf	?___awmod,w
  1743  0543  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0544  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0545  00B0               	movwf	??_dameTemperatura+2
  1746  0546  0830               	movf	??_dameTemperatura+2,w
  1747  0547  00B3               	movwf	dameTemperatura@unidades
  1748  0548                     l1937:	
  1749                           
  1750                           ;main.c: 128:         decenas = (temperatura / 10) % 10;
  1751  0548  300A               	movlw	10
  1752  0549  00F9               	movwf	___awmod@divisor
  1753  054A  3000               	movlw	0
  1754  054B  00FA               	movwf	___awmod@divisor+1
  1755  054C  300A               	movlw	10
  1756  054D  00F0               	movwf	___awdiv@divisor
  1757  054E  3000               	movlw	0
  1758  054F  00F1               	movwf	___awdiv@divisor+1
  1759  0550  0835               	movf	dameTemperatura@temperatura,w
  1760  0551  00AE               	movwf	??_dameTemperatura
  1761  0552  01AF               	clrf	??_dameTemperatura+1
  1762  0553  082E               	movf	??_dameTemperatura,w
  1763  0554  00F2               	movwf	___awdiv@dividend
  1764  0555  082F               	movf	??_dameTemperatura+1,w
  1765  0556  00F3               	movwf	___awdiv@dividend+1
  1766  0557  120A  118A  22E5  120A  118A  	fcall	___awdiv
  1767  055C  0871               	movf	?___awdiv+1,w
  1768  055D  00FC               	movwf	___awmod@dividend+1
  1769  055E  0870               	movf	?___awdiv,w
  1770  055F  00FB               	movwf	___awmod@dividend
  1771  0560  120A  118A  2225  120A  118A  	fcall	___awmod
  1772  0565  0879               	movf	?___awmod,w
  1773  0566  1283               	bcf	3,5	;RP0=0, select bank0
  1774  0567  1303               	bcf	3,6	;RP1=0, select bank0
  1775  0568  00B0               	movwf	??_dameTemperatura+2
  1776  0569  0830               	movf	??_dameTemperatura+2,w
  1777  056A  00B4               	movwf	dameTemperatura@decenas
  1778                           
  1779                           ;main.c: 130:         while (repeticiones) {
  1780  056B  2DA1               	goto	l1955
  1781  056C                     l1939:	
  1782                           
  1783                           ;main.c: 132:             PORTD = numeros[unidades];
  1784  056C  0833               	movf	dameTemperatura@unidades,w
  1785  056D  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1786  056E  0084               	movwf	4
  1787  056F  1383               	bcf	3,7	;select IRP bank0
  1788  0570  0800               	movf	0,w
  1789  0571  0088               	movwf	8	;volatile
  1790  0572                     l1941:	
  1791                           
  1792                           ;main.c: 133:             PORTA = 1;
  1793  0572  3001               	movlw	1
  1794  0573  0085               	movwf	5	;volatile
  1795  0574                     l1943:	
  1796                           
  1797                           ;main.c: 134:             _delay((unsigned long)((3)*(4000000/4000.0)));
  1798  0574  3004               	movlw	4
  1799  0575  1283               	bcf	3,5	;RP0=0, select bank0
  1800  0576  1303               	bcf	3,6	;RP1=0, select bank0
  1801  0577  00AF               	movwf	??_dameTemperatura+1
  1802  0578  30E3               	movlw	227
  1803  0579  00AE               	movwf	??_dameTemperatura
  1804  057A                     u2127:	
  1805  057A  0BAE               	decfsz	??_dameTemperatura,f
  1806  057B  2D7A               	goto	u2127
  1807  057C  0BAF               	decfsz	??_dameTemperatura+1,f
  1808  057D  2D7A               	goto	u2127
  1809  057E  2D7F               	nop2
  1810  057F                     l1945:	
  1811                           
  1812                           ;main.c: 136:             if (decenas) {
  1813  057F  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0580  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0581  0834               	movf	dameTemperatura@decenas,w
  1816  0582  1903               	btfsc	3,2
  1817  0583  2D85               	goto	u1601
  1818  0584  2D86               	goto	u1600
  1819  0585                     u1601:	
  1820  0585  2D99               	goto	l1953
  1821  0586                     u1600:	
  1822  0586                     l1947:	
  1823                           
  1824                           ;main.c: 137:                 PORTD = numeros[decenas];
  1825  0586  0834               	movf	dameTemperatura@decenas,w
  1826  0587  3E20               	addlw	(low (_numeros| 0))& (0+255)
  1827  0588  0084               	movwf	4
  1828  0589  1383               	bcf	3,7	;select IRP bank0
  1829  058A  0800               	movf	0,w
  1830  058B  0088               	movwf	8	;volatile
  1831  058C                     l1949:	
  1832                           
  1833                           ;main.c: 138:                 PORTA = 2;
  1834  058C  3002               	movlw	2
  1835  058D  0085               	movwf	5	;volatile
  1836  058E                     l1951:	
  1837                           
  1838                           ;main.c: 139:                 _delay((unsigned long)((3)*(4000000/4000.0)));
  1839  058E  3004               	movlw	4
  1840  058F  1283               	bcf	3,5	;RP0=0, select bank0
  1841  0590  1303               	bcf	3,6	;RP1=0, select bank0
  1842  0591  00AF               	movwf	??_dameTemperatura+1
  1843  0592  30E3               	movlw	227
  1844  0593  00AE               	movwf	??_dameTemperatura
  1845  0594                     u2137:	
  1846  0594  0BAE               	decfsz	??_dameTemperatura,f
  1847  0595  2D94               	goto	u2137
  1848  0596  0BAF               	decfsz	??_dameTemperatura+1,f
  1849  0597  2D94               	goto	u2137
  1850  0598  2D99               	nop2
  1851  0599                     l1953:	
  1852                           
  1853                           ;main.c: 142:             repeticiones--;
  1854  0599  30FF               	movlw	255
  1855  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1856  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1857  059C  07B1               	addwf	dameTemperatura@repeticiones,f
  1858  059D  1803               	skipnc
  1859  059E  0AB2               	incf	dameTemperatura@repeticiones+1,f
  1860  059F  30FF               	movlw	255
  1861  05A0  07B2               	addwf	dameTemperatura@repeticiones+1,f
  1862  05A1                     l1955:	
  1863                           
  1864                           ;main.c: 130:         while (repeticiones) {
  1865  05A1  0831               	movf	dameTemperatura@repeticiones,w
  1866  05A2  0432               	iorwf	dameTemperatura@repeticiones+1,w
  1867  05A3  1D03               	btfss	3,2
  1868  05A4  2DA6               	goto	u1611
  1869  05A5  2DA7               	goto	u1610
  1870  05A6                     u1611:	
  1871  05A6  2D6C               	goto	l1939
  1872  05A7                     u1610:	
  1873  05A7                     l1957:	
  1874                           
  1875                           ;main.c: 146:         numeroActual = contMin;
  1876  05A7  0841               	movf	_contMin,w
  1877  05A8  00AE               	movwf	??_dameTemperatura
  1878  05A9  082E               	movf	??_dameTemperatura,w
  1879  05AA  00BD               	movwf	_numeroActual
  1880  05AB                     l172:	
  1881  05AB  0008               	return
  1882  05AC                     __end_of_dameTemperatura:	
  1883                           
  1884                           	psect	text6
  1885  071E                     __ptext6:	
  1886 ;; *************** function _dameHoraActual *****************
  1887 ;; Defined at:
  1888 ;;		line 462 in file "main.c"
  1889 ;; Parameters:    Size  Location     Type
  1890 ;;		None
  1891 ;; Auto vars:     Size  Location     Type
  1892 ;;  auxHora         1    6[BANK0 ] unsigned char 
  1893 ;;  auxMin          1    5[BANK0 ] unsigned char 
  1894 ;; Return value:  Size  Location     Type
  1895 ;;                  1    wreg      void 
  1896 ;; Registers used:
  1897 ;;		wreg, status,2, status,0, pclath, cstack
  1898 ;; Tracked objects:
  1899 ;;		On entry : 0/0
  1900 ;;		On exit  : 0/0
  1901 ;;		Unchanged: 0/0
  1902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1903 ;;      Params:         0       0       0       0       0
  1904 ;;      Locals:         0       2       0       0       0
  1905 ;;      Temps:          0       3       0       0       0
  1906 ;;      Totals:         0       5       0       0       0
  1907 ;;Total ram usage:        5 bytes
  1908 ;; Hardware stack levels used:    1
  1909 ;; Hardware stack levels required when called:    4
  1910 ;; This function calls:
  1911 ;;		___awdiv
  1912 ;;		___awmod
  1913 ;;		_convertirDato
  1914 ;;		_leer_rtc
  1915 ;;		_setRtcDefault
  1916 ;; This function is called by:
  1917 ;;		_main
  1918 ;; This function uses a non-reentrant model
  1919 ;;
  1920                           
  1921                           
  1922                           ;psect for function _dameHoraActual
  1923  071E                     _dameHoraActual:	
  1924  071E                     l2201:	
  1925                           ;incstack = 0
  1926                           ; Regs used in _dameHoraActual: [wreg+status,2+status,0+pclath+cstack]
  1927                           
  1928                           
  1929                           ;main.c: 464:     unsigned char auxMin, auxHora;;main.c: 466:     auxMin = convertirDato
      +                          (leer_rtc(0x01));
  1930  071E  3001               	movlw	1
  1931  071F  120A  118A  2151  120A  118A  	fcall	_leer_rtc
  1932  0724  120A  118A  2105  120A  118A  	fcall	_convertirDato
  1933  0729  1283               	bcf	3,5	;RP0=0, select bank0
  1934  072A  1303               	bcf	3,6	;RP1=0, select bank0
  1935  072B  00AE               	movwf	??_dameHoraActual
  1936  072C  082E               	movf	??_dameHoraActual,w
  1937  072D  00B1               	movwf	dameHoraActual@auxMin
  1938                           
  1939                           ;main.c: 467:     contMin = auxMin % 10;
  1940  072E  300A               	movlw	10
  1941  072F  00F9               	movwf	___awmod@divisor
  1942  0730  3000               	movlw	0
  1943  0731  00FA               	movwf	___awmod@divisor+1
  1944  0732  0831               	movf	dameHoraActual@auxMin,w
  1945  0733  00AE               	movwf	??_dameHoraActual
  1946  0734  01AF               	clrf	??_dameHoraActual+1
  1947  0735  082E               	movf	??_dameHoraActual,w
  1948  0736  00FB               	movwf	___awmod@dividend
  1949  0737  082F               	movf	??_dameHoraActual+1,w
  1950  0738  00FC               	movwf	___awmod@dividend+1
  1951  0739  120A  118A  2225  120A  118A  	fcall	___awmod
  1952  073E  0879               	movf	?___awmod,w
  1953  073F  1283               	bcf	3,5	;RP0=0, select bank0
  1954  0740  1303               	bcf	3,6	;RP1=0, select bank0
  1955  0741  00B0               	movwf	??_dameHoraActual+2
  1956  0742  0830               	movf	??_dameHoraActual+2,w
  1957  0743  00C1               	movwf	_contMin
  1958                           
  1959                           ;main.c: 468:     contDecMin = (auxMin / 10) % 10;
  1960  0744  300A               	movlw	10
  1961  0745  00F9               	movwf	___awmod@divisor
  1962  0746  3000               	movlw	0
  1963  0747  00FA               	movwf	___awmod@divisor+1
  1964  0748  300A               	movlw	10
  1965  0749  00F0               	movwf	___awdiv@divisor
  1966  074A  3000               	movlw	0
  1967  074B  00F1               	movwf	___awdiv@divisor+1
  1968  074C  0831               	movf	dameHoraActual@auxMin,w
  1969  074D  00AE               	movwf	??_dameHoraActual
  1970  074E  01AF               	clrf	??_dameHoraActual+1
  1971  074F  082E               	movf	??_dameHoraActual,w
  1972  0750  00F2               	movwf	___awdiv@dividend
  1973  0751  082F               	movf	??_dameHoraActual+1,w
  1974  0752  00F3               	movwf	___awdiv@dividend+1
  1975  0753  120A  118A  22E5  120A  118A  	fcall	___awdiv
  1976  0758  0871               	movf	?___awdiv+1,w
  1977  0759  00FC               	movwf	___awmod@dividend+1
  1978  075A  0870               	movf	?___awdiv,w
  1979  075B  00FB               	movwf	___awmod@dividend
  1980  075C  120A  118A  2225  120A  118A  	fcall	___awmod
  1981  0761  0879               	movf	?___awmod,w
  1982  0762  1283               	bcf	3,5	;RP0=0, select bank0
  1983  0763  1303               	bcf	3,6	;RP1=0, select bank0
  1984  0764  00B0               	movwf	??_dameHoraActual+2
  1985  0765  0830               	movf	??_dameHoraActual+2,w
  1986  0766  00C2               	movwf	_contDecMin
  1987                           
  1988                           ;main.c: 470:     auxHora = convertirDato(leer_rtc(0x02));
  1989  0767  3002               	movlw	2
  1990  0768  120A  118A  2151  120A  118A  	fcall	_leer_rtc
  1991  076D  120A  118A  2105  120A  118A  	fcall	_convertirDato
  1992  0772  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0773  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0774  00AE               	movwf	??_dameHoraActual
  1995  0775  082E               	movf	??_dameHoraActual,w
  1996  0776  00B2               	movwf	dameHoraActual@auxHora
  1997                           
  1998                           ;main.c: 471:     contHora = auxHora % 10;
  1999  0777  300A               	movlw	10
  2000  0778  00F9               	movwf	___awmod@divisor
  2001  0779  3000               	movlw	0
  2002  077A  00FA               	movwf	___awmod@divisor+1
  2003  077B  0832               	movf	dameHoraActual@auxHora,w
  2004  077C  00AE               	movwf	??_dameHoraActual
  2005  077D  01AF               	clrf	??_dameHoraActual+1
  2006  077E  082E               	movf	??_dameHoraActual,w
  2007  077F  00FB               	movwf	___awmod@dividend
  2008  0780  082F               	movf	??_dameHoraActual+1,w
  2009  0781  00FC               	movwf	___awmod@dividend+1
  2010  0782  120A  118A  2225  120A  118A  	fcall	___awmod
  2011  0787  0879               	movf	?___awmod,w
  2012  0788  1283               	bcf	3,5	;RP0=0, select bank0
  2013  0789  1303               	bcf	3,6	;RP1=0, select bank0
  2014  078A  00B0               	movwf	??_dameHoraActual+2
  2015  078B  0830               	movf	??_dameHoraActual+2,w
  2016  078C  00AA               	movwf	_contHora
  2017                           
  2018                           ;main.c: 472:     contDecHora = (auxHora / 10) % 10;
  2019  078D  300A               	movlw	10
  2020  078E  00F9               	movwf	___awmod@divisor
  2021  078F  3000               	movlw	0
  2022  0790  00FA               	movwf	___awmod@divisor+1
  2023  0791  300A               	movlw	10
  2024  0792  00F0               	movwf	___awdiv@divisor
  2025  0793  3000               	movlw	0
  2026  0794  00F1               	movwf	___awdiv@divisor+1
  2027  0795  0832               	movf	dameHoraActual@auxHora,w
  2028  0796  00AE               	movwf	??_dameHoraActual
  2029  0797  01AF               	clrf	??_dameHoraActual+1
  2030  0798  082E               	movf	??_dameHoraActual,w
  2031  0799  00F2               	movwf	___awdiv@dividend
  2032  079A  082F               	movf	??_dameHoraActual+1,w
  2033  079B  00F3               	movwf	___awdiv@dividend+1
  2034  079C  120A  118A  22E5  120A  118A  	fcall	___awdiv
  2035  07A1  0871               	movf	?___awdiv+1,w
  2036  07A2  00FC               	movwf	___awmod@dividend+1
  2037  07A3  0870               	movf	?___awdiv,w
  2038  07A4  00FB               	movwf	___awmod@dividend
  2039  07A5  120A  118A  2225  120A  118A  	fcall	___awmod
  2040  07AA  0879               	movf	?___awmod,w
  2041  07AB  1283               	bcf	3,5	;RP0=0, select bank0
  2042  07AC  1303               	bcf	3,6	;RP1=0, select bank0
  2043  07AD  00B0               	movwf	??_dameHoraActual+2
  2044  07AE  0830               	movf	??_dameHoraActual+2,w
  2045  07AF  00AB               	movwf	_contDecHora
  2046  07B0                     l2203:	
  2047                           
  2048                           ;main.c: 474:     if ((((contDecHora >= 0) && (contDecHora <= 2)) && ((contHora >= 0) &&
      +                           (contHora <= 9)))
  2049  07B0  1BAB               	btfsc	_contDecHora,7
  2050  07B1  2FB3               	goto	u1821
  2051  07B2  2FB4               	goto	u1820
  2052  07B3                     u1821:	
  2053  07B3  2FDD               	goto	l2221
  2054  07B4                     u1820:	
  2055  07B4                     l2205:	
  2056  07B4  082B               	movf	_contDecHora,w
  2057  07B5  3A80               	xorlw	128
  2058  07B6  3E7D               	addlw	-131
  2059  07B7  1803               	skipnc
  2060  07B8  2FBA               	goto	u1831
  2061  07B9  2FBB               	goto	u1830
  2062  07BA                     u1831:	
  2063  07BA  2FDD               	goto	l2221
  2064  07BB                     u1830:	
  2065  07BB                     l2207:	
  2066  07BB  1BAA               	btfsc	_contHora,7
  2067  07BC  2FBE               	goto	u1841
  2068  07BD  2FBF               	goto	u1840
  2069  07BE                     u1841:	
  2070  07BE  2FDD               	goto	l2221
  2071  07BF                     u1840:	
  2072  07BF                     l2209:	
  2073  07BF  082A               	movf	_contHora,w
  2074  07C0  3A80               	xorlw	128
  2075  07C1  3E76               	addlw	-138
  2076  07C2  1803               	skipnc
  2077  07C3  2FC5               	goto	u1851
  2078  07C4  2FC6               	goto	u1850
  2079  07C5                     u1851:	
  2080  07C5  2FDD               	goto	l2221
  2081  07C6                     u1850:	
  2082  07C6                     l2211:	
  2083  07C6  1BC2               	btfsc	_contDecMin,7
  2084  07C7  2FC9               	goto	u1861
  2085  07C8  2FCA               	goto	u1860
  2086  07C9                     u1861:	
  2087  07C9  2FDD               	goto	l2221
  2088  07CA                     u1860:	
  2089  07CA                     l2213:	
  2090  07CA  0842               	movf	_contDecMin,w
  2091  07CB  3A80               	xorlw	128
  2092  07CC  3E7A               	addlw	-134
  2093  07CD  1803               	skipnc
  2094  07CE  2FD0               	goto	u1871
  2095  07CF  2FD1               	goto	u1870
  2096  07D0                     u1871:	
  2097  07D0  2FDD               	goto	l2221
  2098  07D1                     u1870:	
  2099  07D1                     l2215:	
  2100  07D1  1BC1               	btfsc	_contMin,7
  2101  07D2  2FD4               	goto	u1881
  2102  07D3  2FD5               	goto	u1880
  2103  07D4                     u1881:	
  2104  07D4  2FDD               	goto	l2221
  2105  07D5                     u1880:	
  2106  07D5                     l2217:	
  2107  07D5  0841               	movf	_contMin,w
  2108  07D6  3A80               	xorlw	128
  2109  07D7  3E76               	addlw	-138
  2110  07D8  1803               	skipnc
  2111  07D9  2FDB               	goto	u1891
  2112  07DA  2FDC               	goto	u1890
  2113  07DB                     u1891:	
  2114  07DB  2FDD               	goto	l2221
  2115  07DC                     u1890:	
  2116  07DC  2FE2               	goto	l264
  2117  07DD                     l2221:	
  2118                           
  2119                           ;main.c: 478:         setRtcDefault();
  2120  07DD  120A  118A  20E7  120A  118A  	fcall	_setRtcDefault
  2121  07E2                     l264:	
  2122  07E2  0008               	return
  2123  07E3                     __end_of_dameHoraActual:	
  2124                           
  2125                           	psect	text7
  2126  00E7                     __ptext7:	
  2127 ;; *************** function _setRtcDefault *****************
  2128 ;; Defined at:
  2129 ;;		line 482 in file "main.c"
  2130 ;; Parameters:    Size  Location     Type
  2131 ;;		None
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  horaRtc         1    4[COMMON] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       0       0       0       0
  2144 ;;      Locals:         1       0       0       0       0
  2145 ;;      Temps:          1       0       0       0       0
  2146 ;;      Totals:         2       0       0       0       0
  2147 ;;Total ram usage:        2 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		_escribe_rtc
  2152 ;; This function is called by:
  2153 ;;		_dameHoraActual
  2154 ;; This function uses a non-reentrant model
  2155 ;;
  2156                           
  2157                           
  2158                           ;psect for function _setRtcDefault
  2159  00E7                     _setRtcDefault:	
  2160  00E7                     l1821:	
  2161                           ;incstack = 0
  2162                           ; Regs used in _setRtcDefault: [wreg+status,2+status,0+pclath+cstack]
  2163                           
  2164                           
  2165                           ;main.c: 483:     unsigned char horaRtc;;main.c: 485:     horaRtc = ((1) & 0x0F) << 4;
  2166  00E7  3010               	movlw	16
  2167  00E8  00F3               	movwf	??_setRtcDefault
  2168  00E9  0873               	movf	??_setRtcDefault,w
  2169  00EA  00F4               	movwf	setRtcDefault@horaRtc
  2170  00EB                     l1823:	
  2171                           
  2172                           ;main.c: 487:     horaRtc |= (2) & 0x0F;
  2173  00EB  14F4               	bsf	setRtcDefault@horaRtc,1
  2174  00EC                     l1825:	
  2175                           
  2176                           ;main.c: 489:     escribe_rtc(0x02, horaRtc);
  2177  00EC  0874               	movf	setRtcDefault@horaRtc,w
  2178  00ED  00F3               	movwf	??_setRtcDefault
  2179  00EE  0873               	movf	??_setRtcDefault,w
  2180  00EF  00F1               	movwf	escribe_rtc@dato
  2181  00F0  3002               	movlw	2
  2182  00F1  120A  118A  20AB  120A  118A  	fcall	_escribe_rtc
  2183  00F6                     l1827:	
  2184                           
  2185                           ;main.c: 491:     escribe_rtc(0x01, 0);
  2186  00F6  01F1               	clrf	escribe_rtc@dato
  2187  00F7  3001               	movlw	1
  2188  00F8  120A  118A  20AB  120A  118A  	fcall	_escribe_rtc
  2189  00FD                     l1829:	
  2190                           
  2191                           ;main.c: 492:     escribe_rtc(0x00, 0);
  2192  00FD  01F1               	clrf	escribe_rtc@dato
  2193  00FE  3000               	movlw	0
  2194  00FF  120A  118A  20AB  120A  118A  	fcall	_escribe_rtc
  2195  0104                     l267:	
  2196  0104  0008               	return
  2197  0105                     __end_of_setRtcDefault:	
  2198                           
  2199                           	psect	text8
  2200  0151                     __ptext8:	
  2201 ;; *************** function _leer_rtc *****************
  2202 ;; Defined at:
  2203 ;;		line 13 in file "./RTC.h"
  2204 ;; Parameters:    Size  Location     Type
  2205 ;;  direccion       1    wreg     unsigned char 
  2206 ;; Auto vars:     Size  Location     Type
  2207 ;;  direccion       1    3[COMMON] unsigned char 
  2208 ;;  dato            1    4[COMMON] unsigned char 
  2209 ;; Return value:  Size  Location     Type
  2210 ;;                  1    wreg      unsigned char 
  2211 ;; Registers used:
  2212 ;;		wreg, status,2, status,0, pclath, cstack
  2213 ;; Tracked objects:
  2214 ;;		On entry : 0/0
  2215 ;;		On exit  : 0/0
  2216 ;;		Unchanged: 0/0
  2217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2218 ;;      Params:         0       0       0       0       0
  2219 ;;      Locals:         2       0       0       0       0
  2220 ;;      Temps:          1       0       0       0       0
  2221 ;;      Totals:         3       0       0       0       0
  2222 ;;Total ram usage:        3 bytes
  2223 ;; Hardware stack levels used:    1
  2224 ;; Hardware stack levels required when called:    2
  2225 ;; This function calls:
  2226 ;;		_i2c_detener
  2227 ;;		_i2c_envia_dato
  2228 ;;		_i2c_inicia_com
  2229 ;;		_i2c_recibe_dato
  2230 ;;		_i2c_reinicia_com
  2231 ;; This function is called by:
  2232 ;;		_dameTemperatura
  2233 ;;		_dameHoraActual
  2234 ;; This function uses a non-reentrant model
  2235 ;;
  2236                           
  2237                           
  2238                           ;psect for function _leer_rtc
  2239  0151                     _leer_rtc:	
  2240                           
  2241                           ;incstack = 0
  2242                           ; Regs used in _leer_rtc: [wreg+status,2+status,0+pclath+cstack]
  2243                           ;leer_rtc@direccion stored from wreg
  2244  0151  00F3               	movwf	leer_rtc@direccion
  2245  0152                     l1701:	
  2246                           
  2247                           ;./RTC.h: 14:     unsigned char dato;;./RTC.h: 15:     i2c_inicia_com();
  2248  0152  120A  158A  27F7  120A  118A  	fcall	_i2c_inicia_com
  2249                           
  2250                           ;./RTC.h: 16:     i2c_envia_dato(0xD0);
  2251  0157  30D0               	movlw	208
  2252  0158  120A  118A  2013  120A  118A  	fcall	_i2c_envia_dato
  2253                           
  2254                           ;./RTC.h: 17:     i2c_envia_dato(direccion);
  2255  015D  0873               	movf	leer_rtc@direccion,w
  2256  015E  120A  118A  2013  120A  118A  	fcall	_i2c_envia_dato
  2257                           
  2258                           ;./RTC.h: 18:     i2c_reinicia_com();
  2259  0163  120A  118A  200A  120A  118A  	fcall	_i2c_reinicia_com
  2260                           
  2261                           ;./RTC.h: 19:     i2c_envia_dato(0xD1);
  2262  0168  30D1               	movlw	209
  2263  0169  120A  118A  2013  120A  118A  	fcall	_i2c_envia_dato
  2264                           
  2265                           ;./RTC.h: 20:     dato = i2c_recibe_dato();
  2266  016E  120A  118A  20C9  120A  118A  	fcall	_i2c_recibe_dato
  2267  0173  00F2               	movwf	??_leer_rtc
  2268  0174  0872               	movf	??_leer_rtc,w
  2269  0175  00F4               	movwf	leer_rtc@dato
  2270                           
  2271                           ;./RTC.h: 21:     i2c_detener();
  2272  0176  120A  158A  27EE  120A  118A  	fcall	_i2c_detener
  2273  017B                     l1703:	
  2274                           
  2275                           ;./RTC.h: 22:     return dato;
  2276  017B  0874               	movf	leer_rtc@dato,w
  2277  017C                     l76:	
  2278  017C  0008               	return
  2279  017D                     __end_of_leer_rtc:	
  2280                           
  2281                           	psect	text9
  2282  000A                     __ptext9:	
  2283 ;; *************** function _i2c_reinicia_com *****************
  2284 ;; Defined at:
  2285 ;;		line 37 in file "./I2C.h"
  2286 ;; Parameters:    Size  Location     Type
  2287 ;;		None
  2288 ;; Auto vars:     Size  Location     Type
  2289 ;;		None
  2290 ;; Return value:  Size  Location     Type
  2291 ;;                  1    wreg      void 
  2292 ;; Registers used:
  2293 ;;		wreg, status,2, status,0, pclath, cstack
  2294 ;; Tracked objects:
  2295 ;;		On entry : 0/0
  2296 ;;		On exit  : 0/0
  2297 ;;		Unchanged: 0/0
  2298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2299 ;;      Params:         0       0       0       0       0
  2300 ;;      Locals:         0       0       0       0       0
  2301 ;;      Temps:          0       0       0       0       0
  2302 ;;      Totals:         0       0       0       0       0
  2303 ;;Total ram usage:        0 bytes
  2304 ;; Hardware stack levels used:    1
  2305 ;; Hardware stack levels required when called:    1
  2306 ;; This function calls:
  2307 ;;		_i2c_espera
  2308 ;; This function is called by:
  2309 ;;		_leer_rtc
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           
  2314                           ;psect for function _i2c_reinicia_com
  2315  000A                     _i2c_reinicia_com:	
  2316  000A                     l1667:	
  2317                           ;incstack = 0
  2318                           ; Regs used in _i2c_reinicia_com: [wreg+status,2+status,0+pclath+cstack]
  2319                           
  2320                           
  2321                           ;./I2C.h: 38:     i2c_espera();
  2322  000A  120A  118A  202A  120A  118A  	fcall	_i2c_espera
  2323  000F                     l1669:	
  2324                           
  2325                           ;./I2C.h: 39:     SSPCON2bits.RSEN = 1;
  2326  000F  1683               	bsf	3,5	;RP0=1, select bank1
  2327  0010  1303               	bcf	3,6	;RP1=0, select bank1
  2328  0011  1491               	bsf	17,1	;volatile
  2329  0012                     l61:	
  2330  0012  0008               	return
  2331  0013                     __end_of_i2c_reinicia_com:	
  2332                           
  2333                           	psect	text10
  2334  00C9                     __ptext10:	
  2335 ;; *************** function _i2c_recibe_dato *****************
  2336 ;; Defined at:
  2337 ;;		line 68 in file "./I2C.h"
  2338 ;; Parameters:    Size  Location     Type
  2339 ;;		None
  2340 ;; Auto vars:     Size  Location     Type
  2341 ;;  datoleido       1    1[COMMON] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0, pclath, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         1       0       0       0       0
  2353 ;;      Temps:          1       0       0       0       0
  2354 ;;      Totals:         2       0       0       0       0
  2355 ;;Total ram usage:        2 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:    1
  2358 ;; This function calls:
  2359 ;;		_i2c_espera
  2360 ;; This function is called by:
  2361 ;;		_leer_rtc
  2362 ;; This function uses a non-reentrant model
  2363 ;;
  2364                           
  2365                           
  2366                           ;psect for function _i2c_recibe_dato
  2367  00C9                     _i2c_recibe_dato:	
  2368  00C9                     l1671:	
  2369                           ;incstack = 0
  2370                           ; Regs used in _i2c_recibe_dato: [wreg+status,2+status,0+pclath+cstack]
  2371                           
  2372                           
  2373                           ;./I2C.h: 70:     unsigned char datoleido;;./I2C.h: 73:     i2c_espera();
  2374  00C9  120A  118A  202A  120A  118A  	fcall	_i2c_espera
  2375  00CE                     l1673:	
  2376                           
  2377                           ;./I2C.h: 74:     SSPCON2bits.RCEN = 1;
  2378  00CE  1683               	bsf	3,5	;RP0=1, select bank1
  2379  00CF  1303               	bcf	3,6	;RP1=0, select bank1
  2380  00D0  1591               	bsf	17,3	;volatile
  2381                           
  2382                           ;./I2C.h: 76:     i2c_espera();
  2383  00D1  120A  118A  202A  120A  118A  	fcall	_i2c_espera
  2384  00D6                     l1675:	
  2385                           
  2386                           ;./I2C.h: 77:     datoleido = SSPBUF;
  2387  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  2388  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  2389  00D8  0813               	movf	19,w	;volatile
  2390  00D9  00F0               	movwf	??_i2c_recibe_dato
  2391  00DA  0870               	movf	??_i2c_recibe_dato,w
  2392  00DB  00F1               	movwf	i2c_recibe_dato@datoleido
  2393  00DC                     l1677:	
  2394                           
  2395                           ;./I2C.h: 80:     i2c_espera();
  2396  00DC  120A  118A  202A  120A  118A  	fcall	_i2c_espera
  2397  00E1                     l1679:	
  2398                           
  2399                           ;./I2C.h: 82:     SSPCON2bits.ACKDT = 1;
  2400  00E1  1683               	bsf	3,5	;RP0=1, select bank1
  2401  00E2  1303               	bcf	3,6	;RP1=0, select bank1
  2402  00E3  1691               	bsf	17,5	;volatile
  2403  00E4                     l1681:	
  2404                           
  2405                           ;./I2C.h: 87:     SSPCON2bits.ACKEN = 1;
  2406  00E4  1611               	bsf	17,4	;volatile
  2407                           
  2408                           ;./I2C.h: 91:     return datoleido;
  2409  00E5  0871               	movf	i2c_recibe_dato@datoleido,w
  2410  00E6                     l70:	
  2411  00E6  0008               	return
  2412  00E7                     __end_of_i2c_recibe_dato:	
  2413                           
  2414                           	psect	text11
  2415  0105                     __ptext11:	
  2416 ;; *************** function _convertirDato *****************
  2417 ;; Defined at:
  2418 ;;		line 28 in file "./RTC.h"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;  dato            1    wreg     unsigned char 
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;  dato            1    7[COMMON] unsigned char 
  2423 ;;  datoR           1    8[COMMON] unsigned char 
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      unsigned char 
  2426 ;; Registers used:
  2427 ;;		wreg, status,2, status,0, pclath, cstack
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         0       0       0       0       0
  2434 ;;      Locals:         2       0       0       0       0
  2435 ;;      Temps:          3       0       0       0       0
  2436 ;;      Totals:         5       0       0       0       0
  2437 ;;Total ram usage:        5 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    1
  2440 ;; This function calls:
  2441 ;;		___bmul
  2442 ;; This function is called by:
  2443 ;;		_dameHoraActual
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _convertirDato
  2449  0105                     _convertirDato:	
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _convertirDato: [wreg+status,2+status,0+pclath+cstack]
  2453                           ;convertirDato@dato stored from wreg
  2454  0105  00F7               	movwf	convertirDato@dato
  2455  0106                     l1707:	
  2456  0106                     l1709:	
  2457                           
  2458                           ;./RTC.h: 30:     datoR = (dato & 0xF0) >> 4;
  2459  0106  0877               	movf	convertirDato@dato,w
  2460  0107  00F4               	movwf	??_convertirDato
  2461  0108  3004               	movlw	4
  2462  0109                     u1065:	
  2463  0109  1003               	clrc
  2464  010A  0CF4               	rrf	??_convertirDato,f
  2465  010B  3EFF               	addlw	-1
  2466  010C  1D03               	skipz
  2467  010D  2909               	goto	u1065
  2468  010E  0874               	movf	??_convertirDato,w
  2469  010F  390F               	andlw	15
  2470  0110  00F5               	movwf	??_convertirDato+1
  2471  0111  0875               	movf	??_convertirDato+1,w
  2472  0112  00F8               	movwf	convertirDato@datoR
  2473  0113                     l1711:	
  2474                           
  2475                           ;./RTC.h: 31:     datoR = (datoR * 10) + (dato & 0x0F);
  2476  0113  300F               	movlw	15
  2477  0114  0577               	andwf	convertirDato@dato,w
  2478  0115  00F4               	movwf	??_convertirDato
  2479  0116  300A               	movlw	10
  2480  0117  00F5               	movwf	??_convertirDato+1
  2481  0118  0875               	movf	??_convertirDato+1,w
  2482  0119  00F0               	movwf	___bmul@multiplicand
  2483  011A  0878               	movf	convertirDato@datoR,w
  2484  011B  120A  118A  205C  120A  118A  	fcall	___bmul
  2485  0120  0774               	addwf	??_convertirDato,w
  2486  0121  00F6               	movwf	??_convertirDato+2
  2487  0122  0876               	movf	??_convertirDato+2,w
  2488  0123  00F8               	movwf	convertirDato@datoR
  2489  0124                     l1713:	
  2490                           
  2491                           ;./RTC.h: 32:     return datoR;
  2492  0124  0878               	movf	convertirDato@datoR,w
  2493  0125                     l79:	
  2494  0125  0008               	return
  2495  0126                     __end_of_convertirDato:	
  2496                           
  2497                           	psect	text12
  2498  0225                     __ptext12:	
  2499 ;; *************** function ___awmod *****************
  2500 ;; Defined at:
  2501 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;  divisor         2    9[COMMON] int 
  2504 ;;  dividend        2   11[COMMON] int 
  2505 ;; Auto vars:     Size  Location     Type
  2506 ;;  sign            1    1[BANK0 ] unsigned char 
  2507 ;;  counter         1    0[BANK0 ] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  2    9[COMMON] int 
  2510 ;; Registers used:
  2511 ;;		wreg, status,2, status,0
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2517 ;;      Params:         4       0       0       0       0
  2518 ;;      Locals:         0       2       0       0       0
  2519 ;;      Temps:          1       0       0       0       0
  2520 ;;      Totals:         5       2       0       0       0
  2521 ;;Total ram usage:        7 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; This function calls:
  2524 ;;		Nothing
  2525 ;; This function is called by:
  2526 ;;		_dameTemperatura
  2527 ;;		_dameHoraActual
  2528 ;; This function uses a non-reentrant model
  2529 ;;
  2530                           
  2531                           
  2532                           ;psect for function ___awmod
  2533  0225                     ___awmod:	
  2534  0225                     l1875:	
  2535                           ;incstack = 0
  2536                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2537                           
  2538  0225  1283               	bcf	3,5	;RP0=0, select bank0
  2539  0226  1303               	bcf	3,6	;RP1=0, select bank0
  2540  0227  01AD               	clrf	___awmod@sign
  2541  0228                     l1877:	
  2542  0228  1FFC               	btfss	___awmod@dividend+1,7
  2543  0229  2A2B               	goto	u1491
  2544  022A  2A2C               	goto	u1490
  2545  022B                     u1491:	
  2546  022B  2A33               	goto	l1883
  2547  022C                     u1490:	
  2548  022C                     l1879:	
  2549  022C  09FB               	comf	___awmod@dividend,f
  2550  022D  09FC               	comf	___awmod@dividend+1,f
  2551  022E  0AFB               	incf	___awmod@dividend,f
  2552  022F  1903               	skipnz
  2553  0230  0AFC               	incf	___awmod@dividend+1,f
  2554  0231                     l1881:	
  2555  0231  01AD               	clrf	___awmod@sign
  2556  0232  0AAD               	incf	___awmod@sign,f
  2557  0233                     l1883:	
  2558  0233  1FFA               	btfss	___awmod@divisor+1,7
  2559  0234  2A36               	goto	u1501
  2560  0235  2A37               	goto	u1500
  2561  0236                     u1501:	
  2562  0236  2A3C               	goto	l1887
  2563  0237                     u1500:	
  2564  0237                     l1885:	
  2565  0237  09F9               	comf	___awmod@divisor,f
  2566  0238  09FA               	comf	___awmod@divisor+1,f
  2567  0239  0AF9               	incf	___awmod@divisor,f
  2568  023A  1903               	skipnz
  2569  023B  0AFA               	incf	___awmod@divisor+1,f
  2570  023C                     l1887:	
  2571  023C  0879               	movf	___awmod@divisor,w
  2572  023D  047A               	iorwf	___awmod@divisor+1,w
  2573  023E  1903               	btfsc	3,2
  2574  023F  2A41               	goto	u1511
  2575  0240  2A42               	goto	u1510
  2576  0241                     u1511:	
  2577  0241  2A71               	goto	l1905
  2578  0242                     u1510:	
  2579  0242                     l1889:	
  2580  0242  01AC               	clrf	___awmod@counter
  2581  0243  0AAC               	incf	___awmod@counter,f
  2582  0244  2A50               	goto	l1895
  2583  0245                     l1891:	
  2584  0245  3001               	movlw	1
  2585  0246                     u1525:	
  2586  0246  1003               	clrc
  2587  0247  0DF9               	rlf	___awmod@divisor,f
  2588  0248  0DFA               	rlf	___awmod@divisor+1,f
  2589  0249  3EFF               	addlw	-1
  2590  024A  1D03               	skipz
  2591  024B  2A46               	goto	u1525
  2592  024C                     l1893:	
  2593  024C  3001               	movlw	1
  2594  024D  00FD               	movwf	??___awmod
  2595  024E  087D               	movf	??___awmod,w
  2596  024F  07AC               	addwf	___awmod@counter,f
  2597  0250                     l1895:	
  2598  0250  1FFA               	btfss	___awmod@divisor+1,7
  2599  0251  2A53               	goto	u1531
  2600  0252  2A54               	goto	u1530
  2601  0253                     u1531:	
  2602  0253  2A45               	goto	l1891
  2603  0254                     u1530:	
  2604  0254                     l1897:	
  2605  0254  087A               	movf	___awmod@divisor+1,w
  2606  0255  027C               	subwf	___awmod@dividend+1,w
  2607  0256  1D03               	skipz
  2608  0257  2A5A               	goto	u1545
  2609  0258  0879               	movf	___awmod@divisor,w
  2610  0259  027B               	subwf	___awmod@dividend,w
  2611  025A                     u1545:	
  2612  025A  1C03               	skipc
  2613  025B  2A5D               	goto	u1541
  2614  025C  2A5E               	goto	u1540
  2615  025D                     u1541:	
  2616  025D  2A64               	goto	l1901
  2617  025E                     u1540:	
  2618  025E                     l1899:	
  2619  025E  0879               	movf	___awmod@divisor,w
  2620  025F  02FB               	subwf	___awmod@dividend,f
  2621  0260  087A               	movf	___awmod@divisor+1,w
  2622  0261  1C03               	skipc
  2623  0262  03FC               	decf	___awmod@dividend+1,f
  2624  0263  02FC               	subwf	___awmod@dividend+1,f
  2625  0264                     l1901:	
  2626  0264  3001               	movlw	1
  2627  0265                     u1555:	
  2628  0265  1003               	clrc
  2629  0266  0CFA               	rrf	___awmod@divisor+1,f
  2630  0267  0CF9               	rrf	___awmod@divisor,f
  2631  0268  3EFF               	addlw	-1
  2632  0269  1D03               	skipz
  2633  026A  2A65               	goto	u1555
  2634  026B                     l1903:	
  2635  026B  3001               	movlw	1
  2636  026C  02AC               	subwf	___awmod@counter,f
  2637  026D  1D03               	btfss	3,2
  2638  026E  2A70               	goto	u1561
  2639  026F  2A71               	goto	u1560
  2640  0270                     u1561:	
  2641  0270  2A54               	goto	l1897
  2642  0271                     u1560:	
  2643  0271                     l1905:	
  2644  0271  082D               	movf	___awmod@sign,w
  2645  0272  1903               	btfsc	3,2
  2646  0273  2A75               	goto	u1571
  2647  0274  2A76               	goto	u1570
  2648  0275                     u1571:	
  2649  0275  2A7B               	goto	l1909
  2650  0276                     u1570:	
  2651  0276                     l1907:	
  2652  0276  09FB               	comf	___awmod@dividend,f
  2653  0277  09FC               	comf	___awmod@dividend+1,f
  2654  0278  0AFB               	incf	___awmod@dividend,f
  2655  0279  1903               	skipnz
  2656  027A  0AFC               	incf	___awmod@dividend+1,f
  2657  027B                     l1909:	
  2658  027B  087C               	movf	___awmod@dividend+1,w
  2659  027C  00FA               	movwf	?___awmod+1
  2660  027D  087B               	movf	___awmod@dividend,w
  2661  027E  00F9               	movwf	?___awmod
  2662  027F                     l551:	
  2663  027F  0008               	return
  2664  0280                     __end_of___awmod:	
  2665                           
  2666                           	psect	text13
  2667  02E5                     __ptext13:	
  2668 ;; *************** function ___awdiv *****************
  2669 ;; Defined at:
  2670 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;  divisor         2    0[COMMON] int 
  2673 ;;  dividend        2    2[COMMON] int 
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  quotient        2    7[COMMON] int 
  2676 ;;  sign            1    6[COMMON] unsigned char 
  2677 ;;  counter         1    5[COMMON] unsigned char 
  2678 ;; Return value:  Size  Location     Type
  2679 ;;                  2    0[COMMON] int 
  2680 ;; Registers used:
  2681 ;;		wreg, status,2, status,0
  2682 ;; Tracked objects:
  2683 ;;		On entry : 0/0
  2684 ;;		On exit  : 0/0
  2685 ;;		Unchanged: 0/0
  2686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2687 ;;      Params:         4       0       0       0       0
  2688 ;;      Locals:         4       0       0       0       0
  2689 ;;      Temps:          1       0       0       0       0
  2690 ;;      Totals:         9       0       0       0       0
  2691 ;;Total ram usage:        9 bytes
  2692 ;; Hardware stack levels used:    1
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_dameTemperatura
  2697 ;;		_dameHoraActual
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           
  2702                           ;psect for function ___awdiv
  2703  02E5                     ___awdiv:	
  2704  02E5                     l1831:	
  2705                           ;incstack = 0
  2706                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2707                           
  2708  02E5  01F6               	clrf	___awdiv@sign
  2709  02E6                     l1833:	
  2710  02E6  1FF1               	btfss	___awdiv@divisor+1,7
  2711  02E7  2AE9               	goto	u1391
  2712  02E8  2AEA               	goto	u1390
  2713  02E9                     u1391:	
  2714  02E9  2AF1               	goto	l1839
  2715  02EA                     u1390:	
  2716  02EA                     l1835:	
  2717  02EA  09F0               	comf	___awdiv@divisor,f
  2718  02EB  09F1               	comf	___awdiv@divisor+1,f
  2719  02EC  0AF0               	incf	___awdiv@divisor,f
  2720  02ED  1903               	skipnz
  2721  02EE  0AF1               	incf	___awdiv@divisor+1,f
  2722  02EF                     l1837:	
  2723  02EF  01F6               	clrf	___awdiv@sign
  2724  02F0  0AF6               	incf	___awdiv@sign,f
  2725  02F1                     l1839:	
  2726  02F1  1FF3               	btfss	___awdiv@dividend+1,7
  2727  02F2  2AF4               	goto	u1401
  2728  02F3  2AF5               	goto	u1400
  2729  02F4                     u1401:	
  2730  02F4  2AFE               	goto	l1845
  2731  02F5                     u1400:	
  2732  02F5                     l1841:	
  2733  02F5  09F2               	comf	___awdiv@dividend,f
  2734  02F6  09F3               	comf	___awdiv@dividend+1,f
  2735  02F7  0AF2               	incf	___awdiv@dividend,f
  2736  02F8  1903               	skipnz
  2737  02F9  0AF3               	incf	___awdiv@dividend+1,f
  2738  02FA                     l1843:	
  2739  02FA  3001               	movlw	1
  2740  02FB  00F4               	movwf	??___awdiv
  2741  02FC  0874               	movf	??___awdiv,w
  2742  02FD  06F6               	xorwf	___awdiv@sign,f
  2743  02FE                     l1845:	
  2744  02FE  01F7               	clrf	___awdiv@quotient
  2745  02FF  01F8               	clrf	___awdiv@quotient+1
  2746  0300                     l1847:	
  2747  0300  0870               	movf	___awdiv@divisor,w
  2748  0301  0471               	iorwf	___awdiv@divisor+1,w
  2749  0302  1903               	btfsc	3,2
  2750  0303  2B05               	goto	u1411
  2751  0304  2B06               	goto	u1410
  2752  0305                     u1411:	
  2753  0305  2B3D               	goto	l1867
  2754  0306                     u1410:	
  2755  0306                     l1849:	
  2756  0306  01F5               	clrf	___awdiv@counter
  2757  0307  0AF5               	incf	___awdiv@counter,f
  2758  0308  2B14               	goto	l1855
  2759  0309                     l1851:	
  2760  0309  3001               	movlw	1
  2761  030A                     u1425:	
  2762  030A  1003               	clrc
  2763  030B  0DF0               	rlf	___awdiv@divisor,f
  2764  030C  0DF1               	rlf	___awdiv@divisor+1,f
  2765  030D  3EFF               	addlw	-1
  2766  030E  1D03               	skipz
  2767  030F  2B0A               	goto	u1425
  2768  0310                     l1853:	
  2769  0310  3001               	movlw	1
  2770  0311  00F4               	movwf	??___awdiv
  2771  0312  0874               	movf	??___awdiv,w
  2772  0313  07F5               	addwf	___awdiv@counter,f
  2773  0314                     l1855:	
  2774  0314  1FF1               	btfss	___awdiv@divisor+1,7
  2775  0315  2B17               	goto	u1431
  2776  0316  2B18               	goto	u1430
  2777  0317                     u1431:	
  2778  0317  2B09               	goto	l1851
  2779  0318                     u1430:	
  2780  0318                     l1857:	
  2781  0318  3001               	movlw	1
  2782  0319                     u1445:	
  2783  0319  1003               	clrc
  2784  031A  0DF7               	rlf	___awdiv@quotient,f
  2785  031B  0DF8               	rlf	___awdiv@quotient+1,f
  2786  031C  3EFF               	addlw	-1
  2787  031D  1D03               	skipz
  2788  031E  2B19               	goto	u1445
  2789  031F  0871               	movf	___awdiv@divisor+1,w
  2790  0320  0273               	subwf	___awdiv@dividend+1,w
  2791  0321  1D03               	skipz
  2792  0322  2B25               	goto	u1455
  2793  0323  0870               	movf	___awdiv@divisor,w
  2794  0324  0272               	subwf	___awdiv@dividend,w
  2795  0325                     u1455:	
  2796  0325  1C03               	skipc
  2797  0326  2B28               	goto	u1451
  2798  0327  2B29               	goto	u1450
  2799  0328                     u1451:	
  2800  0328  2B30               	goto	l1863
  2801  0329                     u1450:	
  2802  0329                     l1859:	
  2803  0329  0870               	movf	___awdiv@divisor,w
  2804  032A  02F2               	subwf	___awdiv@dividend,f
  2805  032B  0871               	movf	___awdiv@divisor+1,w
  2806  032C  1C03               	skipc
  2807  032D  03F3               	decf	___awdiv@dividend+1,f
  2808  032E  02F3               	subwf	___awdiv@dividend+1,f
  2809  032F                     l1861:	
  2810  032F  1477               	bsf	___awdiv@quotient,0
  2811  0330                     l1863:	
  2812  0330  3001               	movlw	1
  2813  0331                     u1465:	
  2814  0331  1003               	clrc
  2815  0332  0CF1               	rrf	___awdiv@divisor+1,f
  2816  0333  0CF0               	rrf	___awdiv@divisor,f
  2817  0334  3EFF               	addlw	-1
  2818  0335  1D03               	skipz
  2819  0336  2B31               	goto	u1465
  2820  0337                     l1865:	
  2821  0337  3001               	movlw	1
  2822  0338  02F5               	subwf	___awdiv@counter,f
  2823  0339  1D03               	btfss	3,2
  2824  033A  2B3C               	goto	u1471
  2825  033B  2B3D               	goto	u1470
  2826  033C                     u1471:	
  2827  033C  2B18               	goto	l1857
  2828  033D                     u1470:	
  2829  033D                     l1867:	
  2830  033D  0876               	movf	___awdiv@sign,w
  2831  033E  1903               	btfsc	3,2
  2832  033F  2B41               	goto	u1481
  2833  0340  2B42               	goto	u1480
  2834  0341                     u1481:	
  2835  0341  2B47               	goto	l1871
  2836  0342                     u1480:	
  2837  0342                     l1869:	
  2838  0342  09F7               	comf	___awdiv@quotient,f
  2839  0343  09F8               	comf	___awdiv@quotient+1,f
  2840  0344  0AF7               	incf	___awdiv@quotient,f
  2841  0345  1903               	skipnz
  2842  0346  0AF8               	incf	___awdiv@quotient+1,f
  2843  0347                     l1871:	
  2844  0347  0878               	movf	___awdiv@quotient+1,w
  2845  0348  00F1               	movwf	?___awdiv+1
  2846  0349  0877               	movf	___awdiv@quotient,w
  2847  034A  00F0               	movwf	?___awdiv
  2848  034B                     l538:	
  2849  034B  0008               	return
  2850  034C                     __end_of___awdiv:	
  2851                           
  2852                           	psect	text14
  2853  044A                     __ptext14:	
  2854 ;; *************** function _convertirFormato *****************
  2855 ;; Defined at:
  2856 ;;		line 333 in file "main.c"
  2857 ;; Parameters:    Size  Location     Type
  2858 ;;		None
  2859 ;; Auto vars:     Size  Location     Type
  2860 ;;  numeroEvalua    1    6[COMMON] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  1    wreg      void 
  2863 ;; Registers used:
  2864 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2870 ;;      Params:         0       0       0       0       0
  2871 ;;      Locals:         1       0       0       0       0
  2872 ;;      Temps:          2       0       0       0       0
  2873 ;;      Totals:         3       0       0       0       0
  2874 ;;Total ram usage:        3 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; Hardware stack levels required when called:    1
  2877 ;; This function calls:
  2878 ;;		___bmul
  2879 ;; This function is called by:
  2880 ;;		_main
  2881 ;; This function uses a non-reentrant model
  2882 ;;
  2883                           
  2884                           
  2885                           ;psect for function _convertirFormato
  2886  044A                     _convertirFormato:	
  2887  044A                     l2109:	
  2888                           ;incstack = 0
  2889                           ; Regs used in _convertirFormato: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2890                           
  2891                           
  2892                           ;main.c: 334:     unsigned char numeroEvaluar = (contDecHora * 10) + contHora;
  2893  044A  300A               	movlw	10
  2894  044B  00F4               	movwf	??_convertirFormato
  2895  044C  0874               	movf	??_convertirFormato,w
  2896  044D  00F0               	movwf	___bmul@multiplicand
  2897  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2898  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0450  082B               	movf	_contDecHora,w
  2900  0451  120A  118A  205C  120A  118A  	fcall	___bmul
  2901  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2902  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2903  0458  072A               	addwf	_contHora,w
  2904  0459  00F5               	movwf	??_convertirFormato+1
  2905  045A  0875               	movf	??_convertirFormato+1,w
  2906  045B  00F6               	movwf	convertirFormato@numeroEvaluar
  2907                           
  2908                           ;main.c: 335:     switch (numeroEvaluar) {
  2909  045C  2C9D               	goto	l2193
  2910  045D                     l234:	
  2911                           ;main.c: 336:         case 0:
  2912                           
  2913                           
  2914                           ;main.c: 337:             contDecHoraAux = 1;
  2915  045D  01C0               	clrf	_contDecHoraAux
  2916  045E  0AC0               	incf	_contDecHoraAux,f
  2917  045F                     l2111:	
  2918                           
  2919                           ;main.c: 338:             contHoraAux = 2;
  2920  045F  3002               	movlw	2
  2921  0460  00F4               	movwf	??_convertirFormato
  2922  0461  0874               	movf	??_convertirFormato,w
  2923  0462  00BF               	movwf	_contHoraAux
  2924                           
  2925                           ;main.c: 339:             break;
  2926  0463  2CEF               	goto	l2195
  2927  0464                     l2113:	
  2928                           
  2929                           ;main.c: 342:             contDecHoraAux = 0;
  2930  0464  01C0               	clrf	_contDecHoraAux
  2931  0465                     l2115:	
  2932                           
  2933                           ;main.c: 343:             contHoraAux = 1;
  2934  0465  01BF               	clrf	_contHoraAux
  2935  0466  0ABF               	incf	_contHoraAux,f
  2936                           
  2937                           ;main.c: 344:             break;
  2938  0467  2CEF               	goto	l2195
  2939  0468                     l2117:	
  2940                           
  2941                           ;main.c: 347:             contDecHoraAux = 0;
  2942  0468  01C0               	clrf	_contDecHoraAux
  2943  0469  2C5F               	goto	l2111
  2944  046A                     l2121:	
  2945                           
  2946                           ;main.c: 352:             contDecHoraAux = 0;
  2947  046A  01C0               	clrf	_contDecHoraAux
  2948  046B                     l2123:	
  2949                           
  2950                           ;main.c: 353:             contHoraAux = 3;
  2951  046B  3003               	movlw	3
  2952  046C  00F4               	movwf	??_convertirFormato
  2953  046D  0874               	movf	??_convertirFormato,w
  2954  046E  00BF               	movwf	_contHoraAux
  2955                           
  2956                           ;main.c: 354:             break;
  2957  046F  2CEF               	goto	l2195
  2958  0470                     l2125:	
  2959                           
  2960                           ;main.c: 357:             contDecHoraAux = 0;
  2961  0470  01C0               	clrf	_contDecHoraAux
  2962  0471                     l2127:	
  2963                           
  2964                           ;main.c: 358:             contHoraAux = 4;
  2965  0471  3004               	movlw	4
  2966  0472  00F4               	movwf	??_convertirFormato
  2967  0473  0874               	movf	??_convertirFormato,w
  2968  0474  00BF               	movwf	_contHoraAux
  2969                           
  2970                           ;main.c: 359:             break;
  2971  0475  2CEF               	goto	l2195
  2972  0476                     l2129:	
  2973                           
  2974                           ;main.c: 362:             contDecHoraAux = 0;
  2975  0476  01C0               	clrf	_contDecHoraAux
  2976  0477                     l2131:	
  2977                           
  2978                           ;main.c: 363:             contHoraAux = 5;
  2979  0477  3005               	movlw	5
  2980  0478  00F4               	movwf	??_convertirFormato
  2981  0479  0874               	movf	??_convertirFormato,w
  2982  047A  00BF               	movwf	_contHoraAux
  2983                           
  2984                           ;main.c: 364:             break;
  2985  047B  2CEF               	goto	l2195
  2986  047C                     l2133:	
  2987                           
  2988                           ;main.c: 367:             contDecHoraAux = 0;
  2989  047C  01C0               	clrf	_contDecHoraAux
  2990  047D                     l2135:	
  2991                           
  2992                           ;main.c: 368:             contHoraAux = 6;
  2993  047D  3006               	movlw	6
  2994  047E  00F4               	movwf	??_convertirFormato
  2995  047F  0874               	movf	??_convertirFormato,w
  2996  0480  00BF               	movwf	_contHoraAux
  2997                           
  2998                           ;main.c: 369:             break;
  2999  0481  2CEF               	goto	l2195
  3000  0482                     l2137:	
  3001                           
  3002                           ;main.c: 372:             contDecHoraAux = 0;
  3003  0482  01C0               	clrf	_contDecHoraAux
  3004  0483                     l2139:	
  3005                           
  3006                           ;main.c: 373:             contHoraAux = 7;
  3007  0483  3007               	movlw	7
  3008  0484  00F4               	movwf	??_convertirFormato
  3009  0485  0874               	movf	??_convertirFormato,w
  3010  0486  00BF               	movwf	_contHoraAux
  3011                           
  3012                           ;main.c: 374:             break;
  3013  0487  2CEF               	goto	l2195
  3014  0488                     l2141:	
  3015                           
  3016                           ;main.c: 377:             contDecHoraAux = 0;
  3017  0488  01C0               	clrf	_contDecHoraAux
  3018  0489                     l2143:	
  3019                           
  3020                           ;main.c: 378:             contHoraAux = 8;
  3021  0489  3008               	movlw	8
  3022  048A  00F4               	movwf	??_convertirFormato
  3023  048B  0874               	movf	??_convertirFormato,w
  3024  048C  00BF               	movwf	_contHoraAux
  3025                           
  3026                           ;main.c: 379:             break;
  3027  048D  2CEF               	goto	l2195
  3028  048E                     l2145:	
  3029                           
  3030                           ;main.c: 382:             contDecHoraAux = 0;
  3031  048E  01C0               	clrf	_contDecHoraAux
  3032  048F                     l2147:	
  3033                           
  3034                           ;main.c: 383:             contHoraAux = 9;
  3035  048F  3009               	movlw	9
  3036  0490  00F4               	movwf	??_convertirFormato
  3037  0491  0874               	movf	??_convertirFormato,w
  3038  0492  00BF               	movwf	_contHoraAux
  3039                           
  3040                           ;main.c: 384:             break;
  3041  0493  2CEF               	goto	l2195
  3042  0494                     l245:	
  3043                           ;main.c: 386:         case 10:
  3044                           
  3045                           
  3046                           ;main.c: 387:             contDecHoraAux = 1;
  3047  0494  01C0               	clrf	_contDecHoraAux
  3048  0495  0AC0               	incf	_contDecHoraAux,f
  3049  0496                     l2149:	
  3050                           
  3051                           ;main.c: 388:             contHoraAux = 0;
  3052  0496  01BF               	clrf	_contHoraAux
  3053                           
  3054                           ;main.c: 389:             break;
  3055  0497  2CEF               	goto	l2195
  3056  0498                     l246:	
  3057                           ;main.c: 391:         case 11:
  3058                           
  3059                           
  3060                           ;main.c: 392:             contDecHoraAux = 1;
  3061  0498  01C0               	clrf	_contDecHoraAux
  3062  0499  0AC0               	incf	_contDecHoraAux,f
  3063                           
  3064                           ;main.c: 393:             contHoraAux = 1;
  3065  049A  01BF               	clrf	_contHoraAux
  3066  049B  0ABF               	incf	_contHoraAux,f
  3067                           
  3068                           ;main.c: 394:             break;
  3069  049C  2CEF               	goto	l2195
  3070  049D                     l2193:	
  3071  049D  0876               	movf	convertirFormato@numeroEvaluar,w
  3072  049E  00F4               	movwf	??_convertirFormato
  3073  049F  01F5               	clrf	??_convertirFormato+1
  3074                           
  3075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3076                           ; Switch size 1, requested type "simple"
  3077                           ; Number of cases is 1, Range of values is 0 to 0
  3078                           ; switch strategies available:
  3079                           ; Name         Instructions Cycles
  3080                           ; simple_byte            4     3 (average)
  3081                           ; direct_byte           11     8 (fixed)
  3082                           ; jumptable            260     6 (fixed)
  3083                           ;	Chosen strategy is simple_byte
  3084  04A0  0875               	movf	??_convertirFormato+1,w
  3085  04A1  3A00               	xorlw	0	; case 0
  3086  04A2  1903               	skipnz
  3087  04A3  2CA5               	goto	l2399
  3088  04A4  2CEF               	goto	l2195
  3089  04A5                     l2399:	
  3090                           
  3091                           ; Switch size 1, requested type "simple"
  3092                           ; Number of cases is 24, Range of values is 0 to 23
  3093                           ; switch strategies available:
  3094                           ; Name         Instructions Cycles
  3095                           ; simple_byte           73    37 (average)
  3096                           ; direct_byte           80     8 (fixed)
  3097                           ; jumptable            260     6 (fixed)
  3098                           ;	Chosen strategy is simple_byte
  3099  04A5  0874               	movf	??_convertirFormato,w
  3100  04A6  3A00               	xorlw	0	; case 0
  3101  04A7  1903               	skipnz
  3102  04A8  2C5D               	goto	l234
  3103  04A9  3A01               	xorlw	1	; case 1
  3104  04AA  1903               	skipnz
  3105  04AB  2C64               	goto	l2113
  3106  04AC  3A03               	xorlw	3	; case 2
  3107  04AD  1903               	skipnz
  3108  04AE  2C68               	goto	l2117
  3109  04AF  3A01               	xorlw	1	; case 3
  3110  04B0  1903               	skipnz
  3111  04B1  2C6A               	goto	l2121
  3112  04B2  3A07               	xorlw	7	; case 4
  3113  04B3  1903               	skipnz
  3114  04B4  2C70               	goto	l2125
  3115  04B5  3A01               	xorlw	1	; case 5
  3116  04B6  1903               	skipnz
  3117  04B7  2C76               	goto	l2129
  3118  04B8  3A03               	xorlw	3	; case 6
  3119  04B9  1903               	skipnz
  3120  04BA  2C7C               	goto	l2133
  3121  04BB  3A01               	xorlw	1	; case 7
  3122  04BC  1903               	skipnz
  3123  04BD  2C82               	goto	l2137
  3124  04BE  3A0F               	xorlw	15	; case 8
  3125  04BF  1903               	skipnz
  3126  04C0  2C88               	goto	l2141
  3127  04C1  3A01               	xorlw	1	; case 9
  3128  04C2  1903               	skipnz
  3129  04C3  2C8E               	goto	l2145
  3130  04C4  3A03               	xorlw	3	; case 10
  3131  04C5  1903               	skipnz
  3132  04C6  2C94               	goto	l245
  3133  04C7  3A01               	xorlw	1	; case 11
  3134  04C8  1903               	skipnz
  3135  04C9  2C98               	goto	l246
  3136  04CA  3A07               	xorlw	7	; case 12
  3137  04CB  1903               	skipnz
  3138  04CC  2C5D               	goto	l234
  3139  04CD  3A01               	xorlw	1	; case 13
  3140  04CE  1903               	skipnz
  3141  04CF  2C64               	goto	l2113
  3142  04D0  3A03               	xorlw	3	; case 14
  3143  04D1  1903               	skipnz
  3144  04D2  2C68               	goto	l2117
  3145  04D3  3A01               	xorlw	1	; case 15
  3146  04D4  1903               	skipnz
  3147  04D5  2C6A               	goto	l2121
  3148  04D6  3A1F               	xorlw	31	; case 16
  3149  04D7  1903               	skipnz
  3150  04D8  2C70               	goto	l2125
  3151  04D9  3A01               	xorlw	1	; case 17
  3152  04DA  1903               	skipnz
  3153  04DB  2C76               	goto	l2129
  3154  04DC  3A03               	xorlw	3	; case 18
  3155  04DD  1903               	skipnz
  3156  04DE  2C7C               	goto	l2133
  3157  04DF  3A01               	xorlw	1	; case 19
  3158  04E0  1903               	skipnz
  3159  04E1  2C82               	goto	l2137
  3160  04E2  3A07               	xorlw	7	; case 20
  3161  04E3  1903               	skipnz
  3162  04E4  2C88               	goto	l2141
  3163  04E5  3A01               	xorlw	1	; case 21
  3164  04E6  1903               	skipnz
  3165  04E7  2C8E               	goto	l2145
  3166  04E8  3A03               	xorlw	3	; case 22
  3167  04E9  1903               	skipnz
  3168  04EA  2C94               	goto	l245
  3169  04EB  3A01               	xorlw	1	; case 23
  3170  04EC  1903               	skipnz
  3171  04ED  2C98               	goto	l246
  3172  04EE  2CEF               	goto	l2195
  3173  04EF                     l2195:	
  3174                           
  3175                           ;main.c: 458:     contDecHoraMostrar = &contDecHoraAux;
  3176  04EF  3040               	movlw	(low (_contDecHoraAux| 0))& (0+255)
  3177  04F0  00F4               	movwf	??_convertirFormato
  3178  04F1  0874               	movf	??_convertirFormato,w
  3179  04F2  00C4               	movwf	_contDecHoraMostrar
  3180                           
  3181                           ;main.c: 459:     contHoraMostrar = &contHoraAux;
  3182  04F3  303F               	movlw	(low (_contHoraAux| 0))& (0+255)
  3183  04F4  00F4               	movwf	??_convertirFormato
  3184  04F5  0874               	movf	??_convertirFormato,w
  3185  04F6  00C3               	movwf	_contHoraMostrar
  3186  04F7                     l259:	
  3187  04F7  0008               	return
  3188  04F8                     __end_of_convertirFormato:	
  3189                           
  3190                           	psect	text15
  3191  005C                     __ptext15:	
  3192 ;; *************** function ___bmul *****************
  3193 ;; Defined at:
  3194 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\Umul8.c"
  3195 ;; Parameters:    Size  Location     Type
  3196 ;;  multiplier      1    wreg     unsigned char 
  3197 ;;  multiplicand    1    0[COMMON] unsigned char 
  3198 ;; Auto vars:     Size  Location     Type
  3199 ;;  multiplier      1    3[COMMON] unsigned char 
  3200 ;;  product         1    2[COMMON] unsigned char 
  3201 ;; Return value:  Size  Location     Type
  3202 ;;                  1    wreg      unsigned char 
  3203 ;; Registers used:
  3204 ;;		wreg, status,2, status,0
  3205 ;; Tracked objects:
  3206 ;;		On entry : 0/0
  3207 ;;		On exit  : 0/0
  3208 ;;		Unchanged: 0/0
  3209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3210 ;;      Params:         1       0       0       0       0
  3211 ;;      Locals:         2       0       0       0       0
  3212 ;;      Temps:          1       0       0       0       0
  3213 ;;      Totals:         4       0       0       0       0
  3214 ;;Total ram usage:        4 bytes
  3215 ;; Hardware stack levels used:    1
  3216 ;; This function calls:
  3217 ;;		Nothing
  3218 ;; This function is called by:
  3219 ;;		_convertirDato
  3220 ;;		_convertirFormato
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           
  3225                           ;psect for function ___bmul
  3226  005C                     ___bmul:	
  3227                           
  3228                           ;incstack = 0
  3229                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  3230                           ;___bmul@multiplier stored from wreg
  3231  005C  00F3               	movwf	___bmul@multiplier
  3232  005D                     l1687:	
  3233  005D  01F2               	clrf	___bmul@product
  3234  005E                     l1689:	
  3235  005E  1C73               	btfss	___bmul@multiplier,0
  3236  005F  2861               	goto	u1041
  3237  0060  2862               	goto	u1040
  3238  0061                     u1041:	
  3239  0061  2866               	goto	l1693
  3240  0062                     u1040:	
  3241  0062                     l1691:	
  3242  0062  0870               	movf	___bmul@multiplicand,w
  3243  0063  00F1               	movwf	??___bmul
  3244  0064  0871               	movf	??___bmul,w
  3245  0065  07F2               	addwf	___bmul@product,f
  3246  0066                     l1693:	
  3247  0066  1003               	clrc
  3248  0067  0DF0               	rlf	___bmul@multiplicand,f
  3249  0068                     l1695:	
  3250  0068  1003               	clrc
  3251  0069  0CF3               	rrf	___bmul@multiplier,f
  3252  006A  0873               	movf	___bmul@multiplier,w
  3253  006B  1D03               	btfss	3,2
  3254  006C  286E               	goto	u1051
  3255  006D  286F               	goto	u1050
  3256  006E                     u1051:	
  3257  006E  285E               	goto	l1689
  3258  006F                     u1050:	
  3259  006F                     l1697:	
  3260  006F  0872               	movf	___bmul@product,w
  3261  0070                     l411:	
  3262  0070  0008               	return
  3263  0071                     __end_of___bmul:	
  3264                           
  3265                           	psect	text16
  3266  0661                     __ptext16:	
  3267 ;; *************** function _controlBotones *****************
  3268 ;; Defined at:
  3269 ;;		line 152 in file "main.c"
  3270 ;; Parameters:    Size  Location     Type
  3271 ;;		None
  3272 ;; Auto vars:     Size  Location     Type
  3273 ;;		None
  3274 ;; Return value:  Size  Location     Type
  3275 ;;                  1    wreg      void 
  3276 ;; Registers used:
  3277 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3278 ;; Tracked objects:
  3279 ;;		On entry : 0/0
  3280 ;;		On exit  : 0/0
  3281 ;;		Unchanged: 0/0
  3282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3283 ;;      Params:         0       0       0       0       0
  3284 ;;      Locals:         0       0       0       0       0
  3285 ;;      Temps:          2       0       0       0       0
  3286 ;;      Totals:         2       0       0       0       0
  3287 ;;Total ram usage:        2 bytes
  3288 ;; Hardware stack levels used:    1
  3289 ;; Hardware stack levels required when called:    4
  3290 ;; This function calls:
  3291 ;;		_antiRebote
  3292 ;;		_setRtcHora
  3293 ;;		_setRtcMinutos
  3294 ;;		_validaDecenasMinutos
  3295 ;;		_validaHoras
  3296 ;;		_validaMinutos
  3297 ;; This function is called by:
  3298 ;;		_main
  3299 ;; This function uses a non-reentrant model
  3300 ;;
  3301                           
  3302                           
  3303                           ;psect for function _controlBotones
  3304  0661                     _controlBotones:	
  3305  0661                     l1959:	
  3306                           ;incstack = 0
  3307                           ; Regs used in _controlBotones: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  3308                           
  3309                           
  3310                           ;main.c: 154:     if (contadorBotonTemp == 2) {
  3311  0661  3002               	movlw	2
  3312  0662  1283               	bcf	3,5	;RP0=0, select bank0
  3313  0663  1303               	bcf	3,6	;RP1=0, select bank0
  3314  0664  0638               	xorwf	_contadorBotonTemp,w
  3315  0665  0439               	iorwf	_contadorBotonTemp+1,w
  3316  0666  1D03               	btfss	3,2
  3317  0667  2E69               	goto	u1621
  3318  0668  2E6A               	goto	u1620
  3319  0669                     u1621:	
  3320  0669  2E77               	goto	l175
  3321  066A                     u1620:	
  3322  066A                     l1961:	
  3323                           
  3324                           ;main.c: 155:         antiRebote(0);
  3325  066A  3000               	movlw	0
  3326  066B  00F0               	movwf	antiRebote@pin
  3327  066C  00F1               	movwf	antiRebote@pin+1
  3328  066D  120A  118A  21E9  120A  118A  	fcall	_antiRebote
  3329  0672                     l1963:	
  3330                           
  3331                           ;main.c: 156:         contadorBotonTemp = 0;
  3332  0672  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0673  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0674  01B8               	clrf	_contadorBotonTemp
  3335  0675  01B9               	clrf	_contadorBotonTemp+1
  3336                           
  3337                           ;main.c: 157:     } else {
  3338  0676  2F1D               	goto	l198
  3339  0677                     l175:	
  3340                           
  3341                           ;main.c: 159:         if (PORTBbits.RB0)
  3342  0677  1C06               	btfss	6,0	;volatile
  3343  0678  2E7A               	goto	u1631
  3344  0679  2E7B               	goto	u1630
  3345  067A                     u1631:	
  3346  067A  2EB8               	goto	l177
  3347  067B                     u1630:	
  3348  067B                     l1965:	
  3349                           
  3350                           ;main.c: 160:         {;main.c: 162:             antiRebote(0);
  3351  067B  3000               	movlw	0
  3352  067C  00F0               	movwf	antiRebote@pin
  3353  067D  00F1               	movwf	antiRebote@pin+1
  3354  067E  120A  118A  21E9  120A  118A  	fcall	_antiRebote
  3355  0683                     l1967:	
  3356                           
  3357                           ;main.c: 164:             contadorBotonSet++;
  3358  0683  3001               	movlw	1
  3359  0684  00F6               	movwf	??_controlBotones
  3360  0685  0876               	movf	??_controlBotones,w
  3361  0686  1283               	bcf	3,5	;RP0=0, select bank0
  3362  0687  1303               	bcf	3,6	;RP1=0, select bank0
  3363  0688  07BC               	addwf	_contadorBotonSet,f
  3364                           
  3365                           ;main.c: 166:             switch (contadorBotonSet) {
  3366  0689  2EA5               	goto	l1983
  3367  068A                     l1969:	
  3368                           
  3369                           ;main.c: 169:                     digitoActual = &contMin;
  3370  068A  3041               	movlw	(low (_contMin| 0))& (0+255)
  3371  068B  00F6               	movwf	??_controlBotones
  3372  068C  0876               	movf	??_controlBotones,w
  3373  068D  00BE               	movwf	_digitoActual
  3374                           
  3375                           ;main.c: 170:                     break;
  3376  068E  2F1D               	goto	l198
  3377  068F                     l1971:	
  3378                           
  3379                           ;main.c: 173:                     digitoActual = &contDecMin;
  3380  068F  3042               	movlw	(low (_contDecMin| 0))& (0+255)
  3381  0690  00F6               	movwf	??_controlBotones
  3382  0691  0876               	movf	??_controlBotones,w
  3383  0692  00BE               	movwf	_digitoActual
  3384                           
  3385                           ;main.c: 174:                     break;
  3386  0693  2F1D               	goto	l198
  3387  0694                     l1973:	
  3388                           
  3389                           ;main.c: 177:                     digitoActual = &contHora;
  3390  0694  302A               	movlw	(low (_contHora| 0))& (0+255)
  3391  0695  00F6               	movwf	??_controlBotones
  3392  0696  0876               	movf	??_controlBotones,w
  3393  0697  00BE               	movwf	_digitoActual
  3394                           
  3395                           ;main.c: 178:                     break;
  3396  0698  2F1D               	goto	l198
  3397  0699                     l1975:	
  3398                           
  3399                           ;main.c: 181:                     contadorBotonSet = 0;
  3400  0699  01BC               	clrf	_contadorBotonSet
  3401  069A                     l1977:	
  3402                           
  3403                           ;main.c: 182:                     setRtcHora();
  3404  069A  120A  118A  217D  120A  118A  	fcall	_setRtcHora
  3405  069F                     l1979:	
  3406                           
  3407                           ;main.c: 183:                     setRtcMinutos();
  3408  069F  120A  118A  21B3  120A  118A  	fcall	_setRtcMinutos
  3409                           
  3410                           ;main.c: 184:                     break;
  3411  06A4  2F1D               	goto	l198
  3412  06A5                     l1983:	
  3413  06A5  083C               	movf	_contadorBotonSet,w
  3414  06A6  00F6               	movwf	??_controlBotones
  3415  06A7  01F7               	clrf	??_controlBotones+1
  3416                           
  3417                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3418                           ; Switch size 1, requested type "simple"
  3419                           ; Number of cases is 1, Range of values is 0 to 0
  3420                           ; switch strategies available:
  3421                           ; Name         Instructions Cycles
  3422                           ; simple_byte            4     3 (average)
  3423                           ; direct_byte           11     8 (fixed)
  3424                           ; jumptable            260     6 (fixed)
  3425                           ;	Chosen strategy is simple_byte
  3426  06A8  0877               	movf	??_controlBotones+1,w
  3427  06A9  3A00               	xorlw	0	; case 0
  3428  06AA  1903               	skipnz
  3429  06AB  2EAD               	goto	l2401
  3430  06AC  2E99               	goto	l1975
  3431  06AD                     l2401:	
  3432                           
  3433                           ; Switch size 1, requested type "simple"
  3434                           ; Number of cases is 3, Range of values is 1 to 3
  3435                           ; switch strategies available:
  3436                           ; Name         Instructions Cycles
  3437                           ; simple_byte           10     6 (average)
  3438                           ; direct_byte           20    11 (fixed)
  3439                           ; jumptable            263     9 (fixed)
  3440                           ;	Chosen strategy is simple_byte
  3441  06AD  0876               	movf	??_controlBotones,w
  3442  06AE  3A01               	xorlw	1	; case 1
  3443  06AF  1903               	skipnz
  3444  06B0  2E8A               	goto	l1969
  3445  06B1  3A03               	xorlw	3	; case 2
  3446  06B2  1903               	skipnz
  3447  06B3  2E8F               	goto	l1971
  3448  06B4  3A01               	xorlw	1	; case 3
  3449  06B5  1903               	skipnz
  3450  06B6  2E94               	goto	l1973
  3451  06B7  2E99               	goto	l1975
  3452  06B8                     l177:	
  3453  06B8  1C86               	btfss	6,1	;volatile
  3454  06B9  2EBB               	goto	u1641
  3455  06BA  2EBC               	goto	u1640
  3456  06BB                     u1641:	
  3457  06BB  2EF4               	goto	l185
  3458  06BC                     u1640:	
  3459  06BC                     l1985:	
  3460                           
  3461                           ;main.c: 188:         {;main.c: 190:             antiRebote(1);
  3462  06BC  3001               	movlw	1
  3463  06BD  00F0               	movwf	antiRebote@pin
  3464  06BE  3000               	movlw	0
  3465  06BF  00F1               	movwf	antiRebote@pin+1
  3466  06C0  120A  118A  21E9  120A  118A  	fcall	_antiRebote
  3467  06C5                     l1987:	
  3468                           
  3469                           ;main.c: 192:             (*digitoActual)++;
  3470  06C5  3001               	movlw	1
  3471  06C6  00F6               	movwf	??_controlBotones
  3472  06C7  1283               	bcf	3,5	;RP0=0, select bank0
  3473  06C8  1303               	bcf	3,6	;RP1=0, select bank0
  3474  06C9  083E               	movf	_digitoActual,w
  3475  06CA  0084               	movwf	4
  3476  06CB  0876               	movf	??_controlBotones,w
  3477  06CC  1383               	bcf	3,7	;select IRP bank0
  3478  06CD  0780               	addwf	0,f
  3479                           
  3480                           ;main.c: 194:             switch (contadorBotonSet) {
  3481  06CE  2EE1               	goto	l1997
  3482  06CF                     l1989:	
  3483                           
  3484                           ;main.c: 196:                     validaMinutos();
  3485  06CF  120A  118A  208E  120A  118A  	fcall	_validaMinutos
  3486                           
  3487                           ;main.c: 197:                     break;
  3488  06D4  2F1D               	goto	l198
  3489  06D5                     l1991:	
  3490                           
  3491                           ;main.c: 200:                     validaDecenasMinutos();
  3492  06D5  120A  118A  2071  120A  118A  	fcall	_validaDecenasMinutos
  3493                           
  3494                           ;main.c: 201:                     break;
  3495  06DA  2F1D               	goto	l198
  3496  06DB                     l1993:	
  3497                           
  3498                           ;main.c: 204:                     validaHoras();
  3499  06DB  120A  118A  234C  120A  118A  	fcall	_validaHoras
  3500                           
  3501                           ;main.c: 205:                     break;
  3502  06E0  2F1D               	goto	l198
  3503  06E1                     l1997:	
  3504  06E1  083C               	movf	_contadorBotonSet,w
  3505  06E2  00F6               	movwf	??_controlBotones
  3506  06E3  01F7               	clrf	??_controlBotones+1
  3507                           
  3508                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3509                           ; Switch size 1, requested type "simple"
  3510                           ; Number of cases is 1, Range of values is 0 to 0
  3511                           ; switch strategies available:
  3512                           ; Name         Instructions Cycles
  3513                           ; simple_byte            4     3 (average)
  3514                           ; direct_byte           11     8 (fixed)
  3515                           ; jumptable            260     6 (fixed)
  3516                           ;	Chosen strategy is simple_byte
  3517  06E4  0877               	movf	??_controlBotones+1,w
  3518  06E5  3A00               	xorlw	0	; case 0
  3519  06E6  1903               	skipnz
  3520  06E7  2EE9               	goto	l2403
  3521  06E8  2F1D               	goto	l198
  3522  06E9                     l2403:	
  3523                           
  3524                           ; Switch size 1, requested type "simple"
  3525                           ; Number of cases is 3, Range of values is 1 to 3
  3526                           ; switch strategies available:
  3527                           ; Name         Instructions Cycles
  3528                           ; simple_byte           10     6 (average)
  3529                           ; direct_byte           20    11 (fixed)
  3530                           ; jumptable            263     9 (fixed)
  3531                           ;	Chosen strategy is simple_byte
  3532  06E9  0876               	movf	??_controlBotones,w
  3533  06EA  3A01               	xorlw	1	; case 1
  3534  06EB  1903               	skipnz
  3535  06EC  2ECF               	goto	l1989
  3536  06ED  3A03               	xorlw	3	; case 2
  3537  06EE  1903               	skipnz
  3538  06EF  2ED5               	goto	l1991
  3539  06F0  3A01               	xorlw	1	; case 3
  3540  06F1  1903               	skipnz
  3541  06F2  2EDB               	goto	l1993
  3542  06F3  2F1D               	goto	l198
  3543  06F4                     l185:	
  3544  06F4  1D06               	btfss	6,2	;volatile
  3545  06F5  2EF7               	goto	u1651
  3546  06F6  2EF8               	goto	u1650
  3547  06F7                     u1651:	
  3548  06F7  2F1D               	goto	l184
  3549  06F8                     u1650:	
  3550  06F8                     l1999:	
  3551                           
  3552                           ;main.c: 211:         {;main.c: 212:             antiRebote(2);
  3553  06F8  3002               	movlw	2
  3554  06F9  00F0               	movwf	antiRebote@pin
  3555  06FA  3000               	movlw	0
  3556  06FB  00F1               	movwf	antiRebote@pin+1
  3557  06FC  120A  118A  21E9  120A  118A  	fcall	_antiRebote
  3558  0701                     l2001:	
  3559                           
  3560                           ;main.c: 214:             (*digitoActual)--;
  3561  0701  30FF               	movlw	255
  3562  0702  00F6               	movwf	??_controlBotones
  3563  0703  1283               	bcf	3,5	;RP0=0, select bank0
  3564  0704  1303               	bcf	3,6	;RP1=0, select bank0
  3565  0705  083E               	movf	_digitoActual,w
  3566  0706  0084               	movwf	4
  3567  0707  0876               	movf	??_controlBotones,w
  3568  0708  1383               	bcf	3,7	;select IRP bank0
  3569  0709  0780               	addwf	0,f
  3570  070A                     l2011:	
  3571                           ;main.c: 216:             switch (contadorBotonSet) {
  3572                           
  3573  070A  083C               	movf	_contadorBotonSet,w
  3574  070B  00F6               	movwf	??_controlBotones
  3575  070C  01F7               	clrf	??_controlBotones+1
  3576                           
  3577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3578                           ; Switch size 1, requested type "simple"
  3579                           ; Number of cases is 1, Range of values is 0 to 0
  3580                           ; switch strategies available:
  3581                           ; Name         Instructions Cycles
  3582                           ; simple_byte            4     3 (average)
  3583                           ; direct_byte           11     8 (fixed)
  3584                           ; jumptable            260     6 (fixed)
  3585                           ;	Chosen strategy is simple_byte
  3586  070D  0877               	movf	??_controlBotones+1,w
  3587  070E  3A00               	xorlw	0	; case 0
  3588  070F  1903               	skipnz
  3589  0710  2F12               	goto	l2405
  3590  0711  2F1D               	goto	l198
  3591  0712                     l2405:	
  3592                           
  3593                           ; Switch size 1, requested type "simple"
  3594                           ; Number of cases is 3, Range of values is 1 to 3
  3595                           ; switch strategies available:
  3596                           ; Name         Instructions Cycles
  3597                           ; simple_byte           10     6 (average)
  3598                           ; direct_byte           20    11 (fixed)
  3599                           ; jumptable            263     9 (fixed)
  3600                           ;	Chosen strategy is simple_byte
  3601  0712  0876               	movf	??_controlBotones,w
  3602  0713  3A01               	xorlw	1	; case 1
  3603  0714  1903               	skipnz
  3604  0715  2ECF               	goto	l1989
  3605  0716  3A03               	xorlw	3	; case 2
  3606  0717  1903               	skipnz
  3607  0718  2ED5               	goto	l1991
  3608  0719  3A01               	xorlw	1	; case 3
  3609  071A  1903               	skipnz
  3610  071B  2EDB               	goto	l1993
  3611  071C  2F1D               	goto	l198
  3612  071D                     l184:	
  3613  071D                     l198:	
  3614  071D  0008               	return
  3615  071E                     __end_of_controlBotones:	
  3616                           
  3617                           	psect	text17
  3618  008E                     __ptext17:	
  3619 ;; *************** function _validaMinutos *****************
  3620 ;; Defined at:
  3621 ;;		line 74 in file "main.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;		None
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;		None
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       0       0       0       0
  3636 ;;      Locals:         0       0       0       0       0
  3637 ;;      Temps:          1       0       0       0       0
  3638 ;;      Totals:         1       0       0       0       0
  3639 ;;Total ram usage:        1 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; This function calls:
  3642 ;;		Nothing
  3643 ;; This function is called by:
  3644 ;;		_controlBotones
  3645 ;; This function uses a non-reentrant model
  3646 ;;
  3647                           
  3648                           
  3649                           ;psect for function _validaMinutos
  3650  008E                     _validaMinutos:	
  3651  008E                     l1733:	
  3652                           ;incstack = 0
  3653                           ; Regs used in _validaMinutos: [wreg-fsr0h+status,2+status,0]
  3654                           
  3655                           
  3656                           ;main.c: 75:     if (*digitoActual == -1) {
  3657  008E  1283               	bcf	3,5	;RP0=0, select bank0
  3658  008F  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0090  083E               	movf	_digitoActual,w
  3660  0091  0084               	movwf	4
  3661  0092  1383               	bcf	3,7	;select IRP bank0
  3662  0093  0A00               	incf	0,w
  3663  0094  1D03               	btfss	3,2
  3664  0095  2897               	goto	u1131
  3665  0096  2898               	goto	u1130
  3666  0097                     u1131:	
  3667  0097  289F               	goto	l1737
  3668  0098                     u1130:	
  3669  0098                     l1735:	
  3670                           
  3671                           ;main.c: 76:         *digitoActual = 9;
  3672  0098  3009               	movlw	9
  3673  0099  00F0               	movwf	??_validaMinutos
  3674  009A  083E               	movf	_digitoActual,w
  3675  009B  0084               	movwf	4
  3676  009C  0870               	movf	??_validaMinutos,w
  3677  009D  0080               	movwf	0
  3678                           
  3679                           ;main.c: 77:     } else if (*digitoActual == 10) {
  3680  009E  28AA               	goto	l142
  3681  009F                     l1737:	
  3682  009F  083E               	movf	_digitoActual,w
  3683  00A0  0084               	movwf	4
  3684  00A1  300A               	movlw	10
  3685  00A2  0600               	xorwf	0,w
  3686  00A3  1D03               	btfss	3,2
  3687  00A4  28A6               	goto	u1141
  3688  00A5  28A7               	goto	u1140
  3689  00A6                     u1141:	
  3690  00A6  28AA               	goto	l142
  3691  00A7                     u1140:	
  3692  00A7                     l1739:	
  3693                           
  3694                           ;main.c: 78:         *digitoActual = 0;
  3695  00A7  083E               	movf	_digitoActual,w
  3696  00A8  0084               	movwf	4
  3697  00A9  0180               	clrf	0
  3698  00AA                     l142:	
  3699  00AA  0008               	return
  3700  00AB                     __end_of_validaMinutos:	
  3701                           
  3702                           	psect	text18
  3703  034C                     __ptext18:	
  3704 ;; *************** function _validaHoras *****************
  3705 ;; Defined at:
  3706 ;;		line 90 in file "main.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3720 ;;      Params:         0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0
  3722 ;;      Temps:          1       0       0       0       0
  3723 ;;      Totals:         1       0       0       0       0
  3724 ;;Total ram usage:        1 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_controlBotones
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _validaHoras
  3735  034C                     _validaHoras:	
  3736  034C                     l1749:	
  3737                           ;incstack = 0
  3738                           ; Regs used in _validaHoras: [wreg-fsr0h+status,2+status,0]
  3739                           
  3740                           
  3741                           ;main.c: 91:     if (contDecHora == 1 && *digitoActual == -1) {
  3742  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3743  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3744  034E  032B               	decf	_contDecHora,w
  3745  034F  1D03               	btfss	3,2
  3746  0350  2B52               	goto	u1171
  3747  0351  2B53               	goto	u1170
  3748  0352                     u1171:	
  3749  0352  2B63               	goto	l1757
  3750  0353                     u1170:	
  3751  0353                     l1751:	
  3752  0353  083E               	movf	_digitoActual,w
  3753  0354  0084               	movwf	4
  3754  0355  1383               	bcf	3,7	;select IRP bank0
  3755  0356  0A00               	incf	0,w
  3756  0357  1D03               	btfss	3,2
  3757  0358  2B5A               	goto	u1181
  3758  0359  2B5B               	goto	u1180
  3759  035A                     u1181:	
  3760  035A  2B63               	goto	l1757
  3761  035B                     u1180:	
  3762  035B                     l1753:	
  3763                           
  3764                           ;main.c: 92:         contDecHora = 0;
  3765  035B  01AB               	clrf	_contDecHora
  3766  035C                     l1755:	
  3767                           
  3768                           ;main.c: 93:         *digitoActual = 9;
  3769  035C  3009               	movlw	9
  3770  035D  00F0               	movwf	??_validaHoras
  3771  035E  083E               	movf	_digitoActual,w
  3772  035F  0084               	movwf	4
  3773  0360  0870               	movf	??_validaHoras,w
  3774  0361  0080               	movwf	0
  3775                           
  3776                           ;main.c: 94:     } else if (contDecHora == 2 && *digitoActual == 4) {
  3777  0362  2BC4               	goto	l162
  3778  0363                     l1757:	
  3779  0363  3002               	movlw	2
  3780  0364  062B               	xorwf	_contDecHora,w
  3781  0365  1D03               	btfss	3,2
  3782  0366  2B68               	goto	u1191
  3783  0367  2B69               	goto	u1190
  3784  0368                     u1191:	
  3785  0368  2B77               	goto	l1765
  3786  0369                     u1190:	
  3787  0369                     l1759:	
  3788  0369  083E               	movf	_digitoActual,w
  3789  036A  0084               	movwf	4
  3790  036B  3004               	movlw	4
  3791  036C  1383               	bcf	3,7	;select IRP bank0
  3792  036D  0600               	xorwf	0,w
  3793  036E  1D03               	btfss	3,2
  3794  036F  2B71               	goto	u1201
  3795  0370  2B72               	goto	u1200
  3796  0371                     u1201:	
  3797  0371  2B77               	goto	l1765
  3798  0372                     u1200:	
  3799  0372                     l1761:	
  3800                           
  3801                           ;main.c: 95:         contDecHora = 0;
  3802  0372  01AB               	clrf	_contDecHora
  3803  0373                     l1763:	
  3804                           
  3805                           ;main.c: 96:         *digitoActual = 0;
  3806  0373  083E               	movf	_digitoActual,w
  3807  0374  0084               	movwf	4
  3808  0375  0180               	clrf	0
  3809                           
  3810                           ;main.c: 97:     } else if (contDecHora == 2 && *digitoActual == -1) {
  3811  0376  2BC4               	goto	l162
  3812  0377                     l1765:	
  3813  0377  3002               	movlw	2
  3814  0378  062B               	xorwf	_contDecHora,w
  3815  0379  1D03               	btfss	3,2
  3816  037A  2B7C               	goto	u1211
  3817  037B  2B7D               	goto	u1210
  3818  037C                     u1211:	
  3819  037C  2B88               	goto	l1773
  3820  037D                     u1210:	
  3821  037D                     l1767:	
  3822  037D  083E               	movf	_digitoActual,w
  3823  037E  0084               	movwf	4
  3824  037F  1383               	bcf	3,7	;select IRP bank0
  3825  0380  0A00               	incf	0,w
  3826  0381  1D03               	btfss	3,2
  3827  0382  2B84               	goto	u1221
  3828  0383  2B85               	goto	u1220
  3829  0384                     u1221:	
  3830  0384  2B88               	goto	l1773
  3831  0385                     u1220:	
  3832  0385                     l1769:	
  3833                           
  3834                           ;main.c: 98:         contDecHora = 1;
  3835  0385  01AB               	clrf	_contDecHora
  3836  0386  0AAB               	incf	_contDecHora,f
  3837  0387  2B5C               	goto	l1755
  3838  0388                     l1773:	
  3839  0388  082B               	movf	_contDecHora,w
  3840  0389  1D03               	btfss	3,2
  3841  038A  2B8C               	goto	u1231
  3842  038B  2B8D               	goto	u1230
  3843  038C                     u1231:	
  3844  038C  2BA0               	goto	l1781
  3845  038D                     u1230:	
  3846  038D                     l1775:	
  3847  038D  083E               	movf	_digitoActual,w
  3848  038E  0084               	movwf	4
  3849  038F  1383               	bcf	3,7	;select IRP bank0
  3850  0390  0A00               	incf	0,w
  3851  0391  1D03               	btfss	3,2
  3852  0392  2B94               	goto	u1241
  3853  0393  2B95               	goto	u1240
  3854  0394                     u1241:	
  3855  0394  2BA0               	goto	l1781
  3856  0395                     u1240:	
  3857  0395                     l1777:	
  3858                           
  3859                           ;main.c: 101:         contDecHora = 2;
  3860  0395  3002               	movlw	2
  3861  0396  00F0               	movwf	??_validaHoras
  3862  0397  0870               	movf	??_validaHoras,w
  3863  0398  00AB               	movwf	_contDecHora
  3864  0399                     l1779:	
  3865                           
  3866                           ;main.c: 102:         *digitoActual = 3;
  3867  0399  3003               	movlw	3
  3868  039A  00F0               	movwf	??_validaHoras
  3869  039B  083E               	movf	_digitoActual,w
  3870  039C  0084               	movwf	4
  3871  039D  0870               	movf	??_validaHoras,w
  3872  039E  0080               	movwf	0
  3873                           
  3874                           ;main.c: 103:     } else if (contDecHora == 1 && *digitoActual == 10) {
  3875  039F  2BC4               	goto	l162
  3876  03A0                     l1781:	
  3877  03A0  032B               	decf	_contDecHora,w
  3878  03A1  1D03               	btfss	3,2
  3879  03A2  2BA4               	goto	u1251
  3880  03A3  2BA5               	goto	u1250
  3881  03A4                     u1251:	
  3882  03A4  2BB3               	goto	l1789
  3883  03A5                     u1250:	
  3884  03A5                     l1783:	
  3885  03A5  083E               	movf	_digitoActual,w
  3886  03A6  0084               	movwf	4
  3887  03A7  300A               	movlw	10
  3888  03A8  1383               	bcf	3,7	;select IRP bank0
  3889  03A9  0600               	xorwf	0,w
  3890  03AA  1D03               	btfss	3,2
  3891  03AB  2BAD               	goto	u1261
  3892  03AC  2BAE               	goto	u1260
  3893  03AD                     u1261:	
  3894  03AD  2BB3               	goto	l1789
  3895  03AE                     u1260:	
  3896  03AE                     l1785:	
  3897                           
  3898                           ;main.c: 104:         contDecHora = 2;
  3899  03AE  3002               	movlw	2
  3900  03AF  00F0               	movwf	??_validaHoras
  3901  03B0  0870               	movf	??_validaHoras,w
  3902  03B1  00AB               	movwf	_contDecHora
  3903  03B2  2B73               	goto	l1763
  3904  03B3                     l1789:	
  3905  03B3  082B               	movf	_contDecHora,w
  3906  03B4  1D03               	btfss	3,2
  3907  03B5  2BB7               	goto	u1271
  3908  03B6  2BB8               	goto	u1270
  3909  03B7                     u1271:	
  3910  03B7  2BC4               	goto	l156
  3911  03B8                     u1270:	
  3912  03B8                     l1791:	
  3913  03B8  083E               	movf	_digitoActual,w
  3914  03B9  0084               	movwf	4
  3915  03BA  300A               	movlw	10
  3916  03BB  1383               	bcf	3,7	;select IRP bank0
  3917  03BC  0600               	xorwf	0,w
  3918  03BD  1D03               	btfss	3,2
  3919  03BE  2BC0               	goto	u1281
  3920  03BF  2BC1               	goto	u1280
  3921  03C0                     u1281:	
  3922  03C0  2BC4               	goto	l156
  3923  03C1                     u1280:	
  3924  03C1                     l1793:	
  3925                           
  3926                           ;main.c: 107:         contDecHora = 1;
  3927  03C1  01AB               	clrf	_contDecHora
  3928  03C2  0AAB               	incf	_contDecHora,f
  3929  03C3  2B73               	goto	l1763
  3930  03C4                     l156:	
  3931  03C4                     l162:	
  3932  03C4  0008               	return
  3933  03C5                     __end_of_validaHoras:	
  3934                           
  3935                           	psect	text19
  3936  0071                     __ptext19:	
  3937 ;; *************** function _validaDecenasMinutos *****************
  3938 ;; Defined at:
  3939 ;;		line 82 in file "main.c"
  3940 ;; Parameters:    Size  Location     Type
  3941 ;;		None
  3942 ;; Auto vars:     Size  Location     Type
  3943 ;;		None
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3953 ;;      Params:         0       0       0       0       0
  3954 ;;      Locals:         0       0       0       0       0
  3955 ;;      Temps:          1       0       0       0       0
  3956 ;;      Totals:         1       0       0       0       0
  3957 ;;Total ram usage:        1 bytes
  3958 ;; Hardware stack levels used:    1
  3959 ;; This function calls:
  3960 ;;		Nothing
  3961 ;; This function is called by:
  3962 ;;		_controlBotones
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           
  3967                           ;psect for function _validaDecenasMinutos
  3968  0071                     _validaDecenasMinutos:	
  3969  0071                     l1741:	
  3970                           ;incstack = 0
  3971                           ; Regs used in _validaDecenasMinutos: [wreg-fsr0h+status,2+status,0]
  3972                           
  3973                           
  3974                           ;main.c: 83:     if (*digitoActual == -1) {
  3975  0071  1283               	bcf	3,5	;RP0=0, select bank0
  3976  0072  1303               	bcf	3,6	;RP1=0, select bank0
  3977  0073  083E               	movf	_digitoActual,w
  3978  0074  0084               	movwf	4
  3979  0075  1383               	bcf	3,7	;select IRP bank0
  3980  0076  0A00               	incf	0,w
  3981  0077  1D03               	btfss	3,2
  3982  0078  287A               	goto	u1151
  3983  0079  287B               	goto	u1150
  3984  007A                     u1151:	
  3985  007A  2882               	goto	l1745
  3986  007B                     u1150:	
  3987  007B                     l1743:	
  3988                           
  3989                           ;main.c: 84:         *digitoActual = 5;
  3990  007B  3005               	movlw	5
  3991  007C  00F0               	movwf	??_validaDecenasMinutos
  3992  007D  083E               	movf	_digitoActual,w
  3993  007E  0084               	movwf	4
  3994  007F  0870               	movf	??_validaDecenasMinutos,w
  3995  0080  0080               	movwf	0
  3996                           
  3997                           ;main.c: 85:     } else if (*digitoActual == 6) {
  3998  0081  288D               	goto	l148
  3999  0082                     l1745:	
  4000  0082  083E               	movf	_digitoActual,w
  4001  0083  0084               	movwf	4
  4002  0084  3006               	movlw	6
  4003  0085  0600               	xorwf	0,w
  4004  0086  1D03               	btfss	3,2
  4005  0087  2889               	goto	u1161
  4006  0088  288A               	goto	u1160
  4007  0089                     u1161:	
  4008  0089  288D               	goto	l148
  4009  008A                     u1160:	
  4010  008A                     l1747:	
  4011                           
  4012                           ;main.c: 86:         *digitoActual = 0;
  4013  008A  083E               	movf	_digitoActual,w
  4014  008B  0084               	movwf	4
  4015  008C  0180               	clrf	0
  4016  008D                     l148:	
  4017  008D  0008               	return
  4018  008E                     __end_of_validaDecenasMinutos:	
  4019                           
  4020                           	psect	text20
  4021  01B3                     __ptext20:	
  4022 ;; *************** function _setRtcMinutos *****************
  4023 ;; Defined at:
  4024 ;;		line 507 in file "main.c"
  4025 ;; Parameters:    Size  Location     Type
  4026 ;;		None
  4027 ;; Auto vars:     Size  Location     Type
  4028 ;;  minutosRtc      1    5[COMMON] unsigned char 
  4029 ;; Return value:  Size  Location     Type
  4030 ;;                  1    wreg      void 
  4031 ;; Registers used:
  4032 ;;		wreg, status,2, status,0, pclath, cstack
  4033 ;; Tracked objects:
  4034 ;;		On entry : 0/0
  4035 ;;		On exit  : 0/0
  4036 ;;		Unchanged: 0/0
  4037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4038 ;;      Params:         0       0       0       0       0
  4039 ;;      Locals:         1       0       0       0       0
  4040 ;;      Temps:          2       0       0       0       0
  4041 ;;      Totals:         3       0       0       0       0
  4042 ;;Total ram usage:        3 bytes
  4043 ;; Hardware stack levels used:    1
  4044 ;; Hardware stack levels required when called:    3
  4045 ;; This function calls:
  4046 ;;		_escribe_rtc
  4047 ;; This function is called by:
  4048 ;;		_controlBotones
  4049 ;; This function uses a non-reentrant model
  4050 ;;
  4051                           
  4052                           
  4053                           ;psect for function _setRtcMinutos
  4054  01B3                     _setRtcMinutos:	
  4055  01B3                     l1809:	
  4056                           ;incstack = 0
  4057                           ; Regs used in _setRtcMinutos: [wreg+status,2+status,0+pclath+cstack]
  4058                           
  4059                           
  4060                           ;main.c: 508:     unsigned char minutosRtc;;main.c: 510:     if (((contDecMin >= 0) && (
      +                          contDecMin <= 5)) && ((contMin >= 0) && (contMin <= 9))) {
  4061  01B3  1283               	bcf	3,5	;RP0=0, select bank0
  4062  01B4  1303               	bcf	3,6	;RP1=0, select bank0
  4063  01B5  1BC2               	btfsc	_contDecMin,7
  4064  01B6  29B8               	goto	u1341
  4065  01B7  29B9               	goto	u1340
  4066  01B8                     u1341:	
  4067  01B8  29E8               	goto	l275
  4068  01B9                     u1340:	
  4069  01B9                     l1811:	
  4070  01B9  0842               	movf	_contDecMin,w
  4071  01BA  3A80               	xorlw	128
  4072  01BB  3E7A               	addlw	-134
  4073  01BC  1803               	skipnc
  4074  01BD  29BF               	goto	u1351
  4075  01BE  29C0               	goto	u1350
  4076  01BF                     u1351:	
  4077  01BF  29E8               	goto	l275
  4078  01C0                     u1350:	
  4079  01C0                     l1813:	
  4080  01C0  1BC1               	btfsc	_contMin,7
  4081  01C1  29C3               	goto	u1361
  4082  01C2  29C4               	goto	u1360
  4083  01C3                     u1361:	
  4084  01C3  29E8               	goto	l275
  4085  01C4                     u1360:	
  4086  01C4                     l1815:	
  4087  01C4  0841               	movf	_contMin,w
  4088  01C5  3A80               	xorlw	128
  4089  01C6  3E76               	addlw	-138
  4090  01C7  1803               	skipnc
  4091  01C8  29CA               	goto	u1371
  4092  01C9  29CB               	goto	u1370
  4093  01CA                     u1371:	
  4094  01CA  29E8               	goto	l275
  4095  01CB                     u1370:	
  4096  01CB                     l1817:	
  4097                           
  4098                           ;main.c: 511:         minutosRtc = ((contDecMin) & 0x0F) << 4;
  4099  01CB  0842               	movf	_contDecMin,w
  4100  01CC  390F               	andlw	15
  4101  01CD  00F3               	movwf	??_setRtcMinutos
  4102  01CE  3003               	movlw	3
  4103  01CF                     u1385:	
  4104  01CF  1003               	clrc
  4105  01D0  0DF3               	rlf	??_setRtcMinutos,f
  4106  01D1  3EFF               	addlw	-1
  4107  01D2  1D03               	skipz
  4108  01D3  29CF               	goto	u1385
  4109  01D4  1003               	clrc
  4110  01D5  0D73               	rlf	??_setRtcMinutos,w
  4111  01D6  00F4               	movwf	??_setRtcMinutos+1
  4112  01D7  0874               	movf	??_setRtcMinutos+1,w
  4113  01D8  00F5               	movwf	setRtcMinutos@minutosRtc
  4114                           
  4115                           ;main.c: 512:         minutosRtc |= (contMin) & 0x0F;
  4116  01D9  0841               	movf	_contMin,w
  4117  01DA  390F               	andlw	15
  4118  01DB  00F3               	movwf	??_setRtcMinutos
  4119  01DC  0873               	movf	??_setRtcMinutos,w
  4120  01DD  04F5               	iorwf	setRtcMinutos@minutosRtc,f
  4121  01DE                     l1819:	
  4122                           
  4123                           ;main.c: 513:         escribe_rtc(0x01, minutosRtc);
  4124  01DE  0875               	movf	setRtcMinutos@minutosRtc,w
  4125  01DF  00F3               	movwf	??_setRtcMinutos
  4126  01E0  0873               	movf	??_setRtcMinutos,w
  4127  01E1  00F1               	movwf	escribe_rtc@dato
  4128  01E2  3001               	movlw	1
  4129  01E3  120A  118A  20AB  120A  118A  	fcall	_escribe_rtc
  4130  01E8                     l275:	
  4131  01E8  0008               	return
  4132  01E9                     __end_of_setRtcMinutos:	
  4133                           
  4134                           	psect	text21
  4135  017D                     __ptext21:	
  4136 ;; *************** function _setRtcHora *****************
  4137 ;; Defined at:
  4138 ;;		line 495 in file "main.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;		None
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  horaRtc         1    5[COMMON] unsigned char 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, pclath, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4152 ;;      Params:         0       0       0       0       0
  4153 ;;      Locals:         1       0       0       0       0
  4154 ;;      Temps:          2       0       0       0       0
  4155 ;;      Totals:         3       0       0       0       0
  4156 ;;Total ram usage:        3 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    3
  4159 ;; This function calls:
  4160 ;;		_escribe_rtc
  4161 ;; This function is called by:
  4162 ;;		_controlBotones
  4163 ;; This function uses a non-reentrant model
  4164 ;;
  4165                           
  4166                           
  4167                           ;psect for function _setRtcHora
  4168  017D                     _setRtcHora:	
  4169  017D                     l1797:	
  4170                           ;incstack = 0
  4171                           ; Regs used in _setRtcHora: [wreg+status,2+status,0+pclath+cstack]
  4172                           
  4173                           
  4174                           ;main.c: 497:     unsigned char horaRtc;;main.c: 499:     if (((contDecHora >= 0) && (co
      +                          ntDecHora <= 2)) && ((contHora >= 0) && (contHora <= 9))) {
  4175  017D  1283               	bcf	3,5	;RP0=0, select bank0
  4176  017E  1303               	bcf	3,6	;RP1=0, select bank0
  4177  017F  1BAB               	btfsc	_contDecHora,7
  4178  0180  2982               	goto	u1291
  4179  0181  2983               	goto	u1290
  4180  0182                     u1291:	
  4181  0182  29B2               	goto	l271
  4182  0183                     u1290:	
  4183  0183                     l1799:	
  4184  0183  082B               	movf	_contDecHora,w
  4185  0184  3A80               	xorlw	128
  4186  0185  3E7D               	addlw	-131
  4187  0186  1803               	skipnc
  4188  0187  2989               	goto	u1301
  4189  0188  298A               	goto	u1300
  4190  0189                     u1301:	
  4191  0189  29B2               	goto	l271
  4192  018A                     u1300:	
  4193  018A                     l1801:	
  4194  018A  1BAA               	btfsc	_contHora,7
  4195  018B  298D               	goto	u1311
  4196  018C  298E               	goto	u1310
  4197  018D                     u1311:	
  4198  018D  29B2               	goto	l271
  4199  018E                     u1310:	
  4200  018E                     l1803:	
  4201  018E  082A               	movf	_contHora,w
  4202  018F  3A80               	xorlw	128
  4203  0190  3E76               	addlw	-138
  4204  0191  1803               	skipnc
  4205  0192  2994               	goto	u1321
  4206  0193  2995               	goto	u1320
  4207  0194                     u1321:	
  4208  0194  29B2               	goto	l271
  4209  0195                     u1320:	
  4210  0195                     l1805:	
  4211                           
  4212                           ;main.c: 500:         horaRtc = ((contDecHora) & 0x0F) << 4;
  4213  0195  082B               	movf	_contDecHora,w
  4214  0196  390F               	andlw	15
  4215  0197  00F3               	movwf	??_setRtcHora
  4216  0198  3003               	movlw	3
  4217  0199                     u1335:	
  4218  0199  1003               	clrc
  4219  019A  0DF3               	rlf	??_setRtcHora,f
  4220  019B  3EFF               	addlw	-1
  4221  019C  1D03               	skipz
  4222  019D  2999               	goto	u1335
  4223  019E  1003               	clrc
  4224  019F  0D73               	rlf	??_setRtcHora,w
  4225  01A0  00F4               	movwf	??_setRtcHora+1
  4226  01A1  0874               	movf	??_setRtcHora+1,w
  4227  01A2  00F5               	movwf	setRtcHora@horaRtc
  4228                           
  4229                           ;main.c: 501:         horaRtc |= (contHora) & 0x0F;
  4230  01A3  082A               	movf	_contHora,w
  4231  01A4  390F               	andlw	15
  4232  01A5  00F3               	movwf	??_setRtcHora
  4233  01A6  0873               	movf	??_setRtcHora,w
  4234  01A7  04F5               	iorwf	setRtcHora@horaRtc,f
  4235  01A8                     l1807:	
  4236                           
  4237                           ;main.c: 502:         escribe_rtc(0x02, horaRtc);
  4238  01A8  0875               	movf	setRtcHora@horaRtc,w
  4239  01A9  00F3               	movwf	??_setRtcHora
  4240  01AA  0873               	movf	??_setRtcHora,w
  4241  01AB  00F1               	movwf	escribe_rtc@dato
  4242  01AC  3002               	movlw	2
  4243  01AD  120A  118A  20AB  120A  118A  	fcall	_escribe_rtc
  4244  01B2                     l271:	
  4245  01B2  0008               	return
  4246  01B3                     __end_of_setRtcHora:	
  4247                           
  4248                           	psect	text22
  4249  00AB                     __ptext22:	
  4250 ;; *************** function _escribe_rtc *****************
  4251 ;; Defined at:
  4252 ;;		line 2 in file "./RTC.h"
  4253 ;; Parameters:    Size  Location     Type
  4254 ;;  direccion       1    wreg     unsigned char 
  4255 ;;  dato            1    1[COMMON] unsigned char 
  4256 ;; Auto vars:     Size  Location     Type
  4257 ;;  direccion       1    2[COMMON] unsigned char 
  4258 ;; Return value:  Size  Location     Type
  4259 ;;                  1    wreg      void 
  4260 ;; Registers used:
  4261 ;;		wreg, status,2, status,0, pclath, cstack
  4262 ;; Tracked objects:
  4263 ;;		On entry : 0/0
  4264 ;;		On exit  : 0/0
  4265 ;;		Unchanged: 0/0
  4266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4267 ;;      Params:         1       0       0       0       0
  4268 ;;      Locals:         1       0       0       0       0
  4269 ;;      Temps:          0       0       0       0       0
  4270 ;;      Totals:         2       0       0       0       0
  4271 ;;Total ram usage:        2 bytes
  4272 ;; Hardware stack levels used:    1
  4273 ;; Hardware stack levels required when called:    2
  4274 ;; This function calls:
  4275 ;;		_i2c_detener
  4276 ;;		_i2c_envia_dato
  4277 ;;		_i2c_inicia_com
  4278 ;; This function is called by:
  4279 ;;		_setRtcDefault
  4280 ;;		_setRtcHora
  4281 ;;		_setRtcMinutos
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           
  4286                           ;psect for function _escribe_rtc
  4287  00AB                     _escribe_rtc:	
  4288                           
  4289                           ;incstack = 0
  4290                           ; Regs used in _escribe_rtc: [wreg+status,2+status,0+pclath+cstack]
  4291                           ;escribe_rtc@direccion stored from wreg
  4292  00AB  00F2               	movwf	escribe_rtc@direccion
  4293  00AC                     l1685:	
  4294                           
  4295                           ;./RTC.h: 3:     i2c_inicia_com();
  4296  00AC  120A  158A  27F7  120A  118A  	fcall	_i2c_inicia_com
  4297                           
  4298                           ;./RTC.h: 4:     i2c_envia_dato(0xD0);
  4299  00B1  30D0               	movlw	208
  4300  00B2  120A  118A  2013  120A  118A  	fcall	_i2c_envia_dato
  4301                           
  4302                           ;./RTC.h: 5:     i2c_envia_dato(direccion);
  4303  00B7  0872               	movf	escribe_rtc@direccion,w
  4304  00B8  120A  118A  2013  120A  118A  	fcall	_i2c_envia_dato
  4305                           
  4306                           ;./RTC.h: 6:     i2c_envia_dato(dato);
  4307  00BD  0871               	movf	escribe_rtc@dato,w
  4308  00BE  120A  118A  2013  120A  118A  	fcall	_i2c_envia_dato
  4309                           
  4310                           ;./RTC.h: 7:     i2c_detener();
  4311  00C3  120A  158A  27EE  120A  118A  	fcall	_i2c_detener
  4312  00C8                     l73:	
  4313  00C8  0008               	return
  4314  00C9                     __end_of_escribe_rtc:	
  4315                           
  4316                           	psect	text23
  4317  0FF7                     __ptext23:	
  4318 ;; *************** function _i2c_inicia_com *****************
  4319 ;; Defined at:
  4320 ;;		line 28 in file "./I2C.h"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, pclath, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4334 ;;      Params:         0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    1
  4341 ;; This function calls:
  4342 ;;		_i2c_espera
  4343 ;; This function is called by:
  4344 ;;		_escribe_rtc
  4345 ;;		_leer_rtc
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           
  4350                           ;psect for function _i2c_inicia_com
  4351  0FF7                     _i2c_inicia_com:	
  4352  0FF7                     l1651:	
  4353                           ;incstack = 0
  4354                           ; Regs used in _i2c_inicia_com: [wreg+status,2+status,0+pclath+cstack]
  4355                           
  4356                           
  4357                           ;./I2C.h: 29:     i2c_espera();
  4358  0FF7  120A  118A  202A  120A  158A  	fcall	_i2c_espera
  4359  0FFC                     l1653:	
  4360                           
  4361                           ;./I2C.h: 30:     SSPCON2bits.SEN = 1;
  4362  0FFC  1683               	bsf	3,5	;RP0=1, select bank1
  4363  0FFD  1303               	bcf	3,6	;RP1=0, select bank1
  4364  0FFE  1411               	bsf	17,0	;volatile
  4365  0FFF                     l58:	
  4366  0FFF  0008               	return
  4367  1000                     __end_of_i2c_inicia_com:	
  4368                           
  4369                           	psect	text24
  4370  0013                     __ptext24:	
  4371 ;; *************** function _i2c_envia_dato *****************
  4372 ;; Defined at:
  4373 ;;		line 57 in file "./I2C.h"
  4374 ;; Parameters:    Size  Location     Type
  4375 ;;  dato            1    wreg     unsigned char 
  4376 ;; Auto vars:     Size  Location     Type
  4377 ;;  dato            1    0[COMMON] unsigned char 
  4378 ;; Return value:  Size  Location     Type
  4379 ;;                  1    wreg      unsigned char 
  4380 ;; Registers used:
  4381 ;;		wreg, status,2, status,0, pclath, cstack
  4382 ;; Tracked objects:
  4383 ;;		On entry : 0/0
  4384 ;;		On exit  : 0/0
  4385 ;;		Unchanged: 0/0
  4386 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4387 ;;      Params:         0       0       0       0       0
  4388 ;;      Locals:         1       0       0       0       0
  4389 ;;      Temps:          0       0       0       0       0
  4390 ;;      Totals:         1       0       0       0       0
  4391 ;;Total ram usage:        1 bytes
  4392 ;; Hardware stack levels used:    1
  4393 ;; Hardware stack levels required when called:    1
  4394 ;; This function calls:
  4395 ;;		_i2c_espera
  4396 ;; This function is called by:
  4397 ;;		_escribe_rtc
  4398 ;;		_leer_rtc
  4399 ;; This function uses a non-reentrant model
  4400 ;;
  4401                           
  4402                           
  4403                           ;psect for function _i2c_envia_dato
  4404  0013                     _i2c_envia_dato:	
  4405                           
  4406                           ;incstack = 0
  4407                           ; Regs used in _i2c_envia_dato: [wreg+status,2+status,0+pclath+cstack]
  4408                           ;i2c_envia_dato@dato stored from wreg
  4409  0013  00F0               	movwf	i2c_envia_dato@dato
  4410  0014                     l1659:	
  4411                           
  4412                           ;./I2C.h: 58:     i2c_espera();
  4413  0014  120A  118A  202A  120A  118A  	fcall	_i2c_espera
  4414  0019                     l1661:	
  4415                           
  4416                           ;./I2C.h: 59:     SSPBUF = dato;
  4417  0019  0870               	movf	i2c_envia_dato@dato,w
  4418  001A  1283               	bcf	3,5	;RP0=0, select bank0
  4419  001B  1303               	bcf	3,6	;RP1=0, select bank0
  4420  001C  0093               	movwf	19	;volatile
  4421  001D                     l1663:	
  4422  001D                     l67:	
  4423                           ;./I2C.h: 60:     return ACKSTAT;;	Return value of _i2c_envia_dato is never used
  4424                           
  4425  001D  0008               	return
  4426  001E                     __end_of_i2c_envia_dato:	
  4427                           
  4428                           	psect	text25
  4429  0FEE                     __ptext25:	
  4430 ;; *************** function _i2c_detener *****************
  4431 ;; Defined at:
  4432 ;;		line 46 in file "./I2C.h"
  4433 ;; Parameters:    Size  Location     Type
  4434 ;;		None
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;		None
  4437 ;; Return value:  Size  Location     Type
  4438 ;;                  1    wreg      void 
  4439 ;; Registers used:
  4440 ;;		wreg, status,2, status,0, pclath, cstack
  4441 ;; Tracked objects:
  4442 ;;		On entry : 0/0
  4443 ;;		On exit  : 0/0
  4444 ;;		Unchanged: 0/0
  4445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4446 ;;      Params:         0       0       0       0       0
  4447 ;;      Locals:         0       0       0       0       0
  4448 ;;      Temps:          0       0       0       0       0
  4449 ;;      Totals:         0       0       0       0       0
  4450 ;;Total ram usage:        0 bytes
  4451 ;; Hardware stack levels used:    1
  4452 ;; Hardware stack levels required when called:    1
  4453 ;; This function calls:
  4454 ;;		_i2c_espera
  4455 ;; This function is called by:
  4456 ;;		_escribe_rtc
  4457 ;;		_leer_rtc
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           
  4462                           ;psect for function _i2c_detener
  4463  0FEE                     _i2c_detener:	
  4464  0FEE                     l1655:	
  4465                           ;incstack = 0
  4466                           ; Regs used in _i2c_detener: [wreg+status,2+status,0+pclath+cstack]
  4467                           
  4468                           
  4469                           ;./I2C.h: 47:     i2c_espera();
  4470  0FEE  120A  118A  202A  120A  158A  	fcall	_i2c_espera
  4471  0FF3                     l1657:	
  4472                           
  4473                           ;./I2C.h: 48:     SSPCON2bits.PEN = 1;
  4474  0FF3  1683               	bsf	3,5	;RP0=1, select bank1
  4475  0FF4  1303               	bcf	3,6	;RP1=0, select bank1
  4476  0FF5  1511               	bsf	17,2	;volatile
  4477  0FF6                     l64:	
  4478  0FF6  0008               	return
  4479  0FF7                     __end_of_i2c_detener:	
  4480                           
  4481                           	psect	text26
  4482  002A                     __ptext26:	
  4483 ;; *************** function _i2c_espera *****************
  4484 ;; Defined at:
  4485 ;;		line 20 in file "./I2C.h"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;		None
  4490 ;; Return value:  Size  Location     Type
  4491 ;;                  1    wreg      void 
  4492 ;; Registers used:
  4493 ;;		wreg, status,2
  4494 ;; Tracked objects:
  4495 ;;		On entry : 0/0
  4496 ;;		On exit  : 0/0
  4497 ;;		Unchanged: 0/0
  4498 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4499 ;;      Params:         0       0       0       0       0
  4500 ;;      Locals:         0       0       0       0       0
  4501 ;;      Temps:          0       0       0       0       0
  4502 ;;      Totals:         0       0       0       0       0
  4503 ;;Total ram usage:        0 bytes
  4504 ;; Hardware stack levels used:    1
  4505 ;; This function calls:
  4506 ;;		Nothing
  4507 ;; This function is called by:
  4508 ;;		_i2c_inicia_com
  4509 ;;		_i2c_reinicia_com
  4510 ;;		_i2c_detener
  4511 ;;		_i2c_envia_dato
  4512 ;;		_i2c_recibe_dato
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516                           
  4517                           ;psect for function _i2c_espera
  4518  002A                     _i2c_espera:	
  4519  002A                     l1645:	
  4520                           ;incstack = 0
  4521                           ; Regs used in _i2c_espera: [wreg+status,2]
  4522                           
  4523  002A                     l1647:	
  4524                           ;./I2C.h: 21:     while ((SSPCON2 & 0b00011111) || (SSPSTAT & 0b00000100));
  4525                           
  4526  002A  1683               	bsf	3,5	;RP0=1, select bank1
  4527  002B  1303               	bcf	3,6	;RP1=0, select bank1
  4528  002C  0811               	movf	17,w	;volatile
  4529  002D  391F               	andlw	31
  4530  002E  1D03               	btfss	3,2
  4531  002F  2831               	goto	u1021
  4532  0030  2832               	goto	u1020
  4533  0031                     u1021:	
  4534  0031  282A               	goto	l1647
  4535  0032                     u1020:	
  4536  0032                     l1649:	
  4537  0032  1914               	btfsc	20,2	;volatile
  4538  0033  2835               	goto	u1031
  4539  0034  2836               	goto	u1030
  4540  0035                     u1031:	
  4541  0035  282A               	goto	l1647
  4542  0036                     u1030:	
  4543  0036                     l55:	
  4544  0036  0008               	return
  4545  0037                     __end_of_i2c_espera:	
  4546                           
  4547                           	psect	text27
  4548  01E9                     __ptext27:	
  4549 ;; *************** function _antiRebote *****************
  4550 ;; Defined at:
  4551 ;;		line 47 in file "main.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;  pin             2    0[COMMON] unsigned int 
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4565 ;;      Params:         2       0       0       0       0
  4566 ;;      Locals:         0       0       0       0       0
  4567 ;;      Temps:          2       0       0       0       0
  4568 ;;      Totals:         4       0       0       0       0
  4569 ;;Total ram usage:        4 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_dameTemperatura
  4575 ;;		_controlBotones
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           
  4581                           ;psect for function _antiRebote
  4582  01E9                     _antiRebote:	
  4583  01E9                     l1717:	
  4584                           ;incstack = 0
  4585                           ; Regs used in _antiRebote: [wreg-fsr0h+status,2+status,0]
  4586                           
  4587                           
  4588                           ;main.c: 49:     switch (pin) {
  4589  01E9  2A14               	goto	l1727
  4590  01EA                     l114:	
  4591  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  4592  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  4593  01EC  1C06               	btfss	6,0	;volatile
  4594  01ED  29EF               	goto	u1071
  4595  01EE  29F0               	goto	u1070
  4596  01EF                     u1071:	
  4597  01EF  29EA               	goto	l114
  4598  01F0                     u1070:	
  4599  01F0                     l117:	
  4600  01F0  1806               	btfsc	6,0	;volatile
  4601  01F1  29F3               	goto	u1081
  4602  01F2  29F4               	goto	u1080
  4603  01F3                     u1081:	
  4604  01F3  29F0               	goto	l117
  4605  01F4                     u1080:	
  4606  01F4                     l1719:	
  4607                           
  4608                           ;main.c: 53:             _delay((unsigned long)((100)*(4000000/4000.0)));
  4609  01F4  3082               	movlw	130
  4610  01F5  00F3               	movwf	??_antiRebote+1
  4611  01F6  30DD               	movlw	221
  4612  01F7  00F2               	movwf	??_antiRebote
  4613  01F8                     u2147:	
  4614  01F8  0BF2               	decfsz	??_antiRebote,f
  4615  01F9  29F8               	goto	u2147
  4616  01FA  0BF3               	decfsz	??_antiRebote+1,f
  4617  01FB  29F8               	goto	u2147
  4618  01FC  29FD               	nop2
  4619                           
  4620                           ;main.c: 54:             break;
  4621  01FD  2A24               	goto	l136
  4622  01FE                     l122:	
  4623  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  4624  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  4625  0200  1C86               	btfss	6,1	;volatile
  4626  0201  2A03               	goto	u1091
  4627  0202  2A04               	goto	u1090
  4628  0203                     u1091:	
  4629  0203  29FE               	goto	l122
  4630  0204                     u1090:	
  4631  0204                     l125:	
  4632  0204  1886               	btfsc	6,1	;volatile
  4633  0205  2A07               	goto	u1101
  4634  0206  2A08               	goto	u1100
  4635  0207                     u1101:	
  4636  0207  2A04               	goto	l125
  4637  0208                     u1100:	
  4638  0208  29F4               	goto	l1719
  4639  0209                     l129:	
  4640  0209  1283               	bcf	3,5	;RP0=0, select bank0
  4641  020A  1303               	bcf	3,6	;RP1=0, select bank0
  4642  020B  1D06               	btfss	6,2	;volatile
  4643  020C  2A0E               	goto	u1111
  4644  020D  2A0F               	goto	u1110
  4645  020E                     u1111:	
  4646  020E  2A09               	goto	l129
  4647  020F                     u1110:	
  4648  020F                     l132:	
  4649  020F  1906               	btfsc	6,2	;volatile
  4650  0210  2A12               	goto	u1121
  4651  0211  2A13               	goto	u1120
  4652  0212                     u1121:	
  4653  0212  2A0F               	goto	l132
  4654  0213                     u1120:	
  4655  0213  29F4               	goto	l1719
  4656  0214                     l1727:	
  4657                           
  4658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4659                           ; Switch size 1, requested type "simple"
  4660                           ; Number of cases is 1, Range of values is 0 to 0
  4661                           ; switch strategies available:
  4662                           ; Name         Instructions Cycles
  4663                           ; simple_byte            4     3 (average)
  4664                           ; direct_byte           11     8 (fixed)
  4665                           ; jumptable            260     6 (fixed)
  4666                           ;	Chosen strategy is simple_byte
  4667  0214  0871               	movf	antiRebote@pin+1,w
  4668  0215  3A00               	xorlw	0	; case 0
  4669  0216  1903               	skipnz
  4670  0217  2A19               	goto	l2407
  4671  0218  2A24               	goto	l136
  4672  0219                     l2407:	
  4673                           
  4674                           ; Switch size 1, requested type "simple"
  4675                           ; Number of cases is 3, Range of values is 0 to 2
  4676                           ; switch strategies available:
  4677                           ; Name         Instructions Cycles
  4678                           ; simple_byte           10     6 (average)
  4679                           ; direct_byte           17     8 (fixed)
  4680                           ; jumptable            260     6 (fixed)
  4681                           ;	Chosen strategy is simple_byte
  4682  0219  0870               	movf	antiRebote@pin,w
  4683  021A  3A00               	xorlw	0	; case 0
  4684  021B  1903               	skipnz
  4685  021C  29EA               	goto	l114
  4686  021D  3A01               	xorlw	1	; case 1
  4687  021E  1903               	skipnz
  4688  021F  29FE               	goto	l122
  4689  0220  3A03               	xorlw	3	; case 2
  4690  0221  1903               	skipnz
  4691  0222  2A09               	goto	l129
  4692  0223  2A24               	goto	l136
  4693  0224                     l136:	
  4694  0224  0008               	return
  4695  0225                     __end_of_antiRebote:	
  4696  007E                     btemp	set	126	;btemp
  4697  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        12
    BSS         11
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     12      37
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    contDecHoraMostrar	PTR char  size(1) Largest target is 1
		 -> NULL(NULL[0]), contDecHoraAux(BANK0[1]), contDecHora(BANK0[1]), 

    contHoraMostrar	PTR char  size(1) Largest target is 1
		 -> NULL(NULL[0]), contHoraAux(BANK0[1]), contHora(BANK0[1]), 

    digitoActual	PTR char  size(1) Largest target is 1
		 -> NULL(NULL[0]), contHora(BANK0[1]), contDecMin(BANK0[1]), contMin(BANK0[1]), 


Critical Paths under _main in COMMON

    _dameTemperatura->___awmod
    _dameHoraActual->___awmod
    _setRtcDefault->_escribe_rtc
    _leer_rtc->_i2c_recibe_dato
    _convertirDato->___bmul
    ___awmod->___awdiv
    _convertirFormato->___bmul
    _controlBotones->_setRtcHora
    _controlBotones->_setRtcMinutos
    _setRtcMinutos->_escribe_rtc
    _setRtcHora->_escribe_rtc
    _escribe_rtc->_i2c_envia_dato

Critical Paths under _main in BANK0

    _main->_dameTemperatura
    _dameTemperatura->___awmod
    _dameHoraActual->___awmod

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    7893
                                             10 BANK0      2     2      0
                         _antiRebote
                     _controlBotones
                   _convertirFormato
                     _dameHoraActual
                    _dameTemperatura
                        _i2c_iniciar
                     _mostrarDigitos
                   _parpadearDigitos
                       _verificaAmPm
 ---------------------------------------------------------------------------------
 (1) _verificaAmPm                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _parpadearDigitos                                     3     3      0     112
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _mostrarDigitos                                       2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _i2c_iniciar                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _dameTemperatura                                      8     8      0    2669
                                              2 BANK0      8     8      0
                            ___awdiv
                            ___awmod
                         _antiRebote
                           _leer_rtc
 ---------------------------------------------------------------------------------
 (1) _dameHoraActual                                       5     5      0    2949
                                              2 BANK0      5     5      0
                            ___awdiv
                            ___awmod
                      _convertirDato
                           _leer_rtc
                      _setRtcDefault
 ---------------------------------------------------------------------------------
 (2) _setRtcDefault                                        2     2      0     470
                                              3 COMMON     2     2      0
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (2) _leer_rtc                                             3     3      0      90
                                              2 COMMON     3     3      0
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
                    _i2c_recibe_dato
                   _i2c_reinicia_com
 ---------------------------------------------------------------------------------
 (3) _i2c_reinicia_com                                     0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_recibe_dato                                      2     2      0      23
                                              0 COMMON     2     2      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (2) _convertirDato                                        5     5      0     335
                                              4 COMMON     5     5      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4    1208
                                              9 COMMON     5     1      4
                                              0 BANK0      2     2      0
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     756
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _convertirFormato                                     3     3      0     267
                                              4 COMMON     3     3      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     244
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _controlBotones                                       2     2      0    1418
                                              6 COMMON     2     2      0
                         _antiRebote
                         _setRtcHora
                      _setRtcMinutos
               _validaDecenasMinutos
                        _validaHoras
                      _validaMinutos
 ---------------------------------------------------------------------------------
 (2) _validaMinutos                                        1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _validaHoras                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _validaDecenasMinutos                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _setRtcMinutos                                        3     3      0     470
                                              3 COMMON     3     3      0
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (2) _setRtcHora                                           3     3      0     470
                                              3 COMMON     3     3      0
                        _escribe_rtc
 ---------------------------------------------------------------------------------
 (3) _escribe_rtc                                          2     1      1     446
                                              1 COMMON     2     1      1
                        _i2c_detener
                     _i2c_envia_dato
                     _i2c_inicia_com
 ---------------------------------------------------------------------------------
 (3) _i2c_inicia_com                                       0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_envia_dato                                       1     1      0      22
                                              0 COMMON     1     1      0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (3) _i2c_detener                                          0     0      0       0
                         _i2c_espera
 ---------------------------------------------------------------------------------
 (4) _i2c_espera                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _antiRebote                                           4     2      2     478
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _antiRebote
   _controlBotones
     _antiRebote
     _setRtcHora
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
     _setRtcMinutos
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
     _validaDecenasMinutos
     _validaHoras
     _validaMinutos
   _convertirFormato
     ___bmul
   _dameHoraActual
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _convertirDato
       ___bmul
     _leer_rtc
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
     _setRtcDefault
       _escribe_rtc
         _i2c_detener
           _i2c_espera
         _i2c_envia_dato
           _i2c_espera
         _i2c_inicia_com
           _i2c_espera
   _dameTemperatura
     ___awdiv
     ___awmod
       ___awdiv (ARG)
     _antiRebote
     _leer_rtc
       _i2c_detener
         _i2c_espera
       _i2c_envia_dato
         _i2c_espera
       _i2c_inicia_com
         _i2c_espera
       _i2c_recibe_dato
         _i2c_espera
       _i2c_reinicia_com
         _i2c_espera
   _i2c_iniciar
   _mostrarDigitos
   _parpadearDigitos
   _verificaAmPm

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      C      25       5       46.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      33      12        0.0%
ABS                  0      0      33       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Feb 19 15:27:19 2021

                            pc 0002                 ___bmul@product 0072                    __CFG_CP$OFF 0000  
                           l61 0012                             l70 00E6                             l55 0036  
                           l64 0FF6                             l73 00C8                             l49 0048  
                           l58 0FFF                             l67 001D                             l76 017C  
                           l79 0125                   ___awdiv@sign 0076                             fsr 0004  
                          l122 01FE                            l114 01EA                            l132 020F  
                          l125 0204                            l117 01F0                            l221 02E4  
                          l142 00AA                            l230 0150                            l136 0224  
                          l216 0449                            l224 014C                            l129 0209  
                          l162 03C4                            l234 045D                            l411 0070  
                          l148 008D                            l156 03C4                            l172 05AB  
                          l228 0138                            l245 0494                            l246 0498  
                          l271 01B2                            l175 0677                            l184 071D  
                          l264 07E2                            l185 06F4                            l177 06B8  
                          l281 05E7                            l275 01E8                            l259 04F7  
                          l267 0104                            l283 0607                            l198 071D  
                          l551 027F                            l538 034B                            _RC3 003B  
                          _RC4 003C                   __CFG_CPD$OFF 0000                            fsr0 0004  
                          indf 0000                   ___awmod@sign 002D                   __CFG_FOSC$XT 0000  
       ??_validaDecenasMinutos 0070                   __CFG_LVP$OFF 0000              ?_i2c_reinicia_com 0070  
             ??_mostrarDigitos 0070                   ?_escribe_rtc 0071                           l2001 0701  
                         l2011 070A                           l2101 0143                           l2111 045F  
                         l2031 03D7                           l2103 0148                           l2121 046A  
                         l2113 0464                           l2201 071E                           l2041 03F4  
                         l2033 03DC                           l2025 03C5                           l2105 0149  
                         l2131 0477                           l2123 046B                           l2115 0465  
                         l2211 07C6                           l2203 07B0                           l2051 0414  
                         l2043 03F9                           l2027 03CA                           l2107 014E  
                         l2141 0488                           l2133 047C                           l2125 0470  
                         l2117 0468                           l2109 044A                           l2213 07CA  
                         l2205 07B4                           l2221 07DD                           l2061 0433  
                         l2053 0419                           l2037 03E6                           l2029 03D2  
                         l2143 0489                           l2135 047D                           l2127 0471  
                         l2215 07D1                           l2207 07BB                           l2071 0280  
                         l2063 0438                           l2047 0403                           l2039 03EE  
                         l2231 05B6                           l2223 05AC                           l2401 06AD  
                         l2145 048E                           l2137 0482                           l2129 0476  
                         l2217 07D5                           l2209 07BF                           l2081 02AC  
                         l2073 028F                           l2057 0423                           l2049 040E  
                         l2241 05C7                           l2233 05B7                           l2225 05B0  
                         l2403 06E9                           l2147 048F                           l2139 0483  
                         l2083 02C0                           l2075 0297                           l2091 02E1  
                         l2067 0442                           l2059 042D                           l2251 05D6  
                         l2243 05C8                           l2235 05B8                           l2227 05B1  
                         l2405 0712                           l2149 0496                           l1701 0152  
                         l2085 02C2                           l2077 0299                           l2069 0444  
                         l2093 0126                           l2261 05F9                           l2253 05DC  
                         l2245 05C9                           l2237 05BD                           l2229 05B2  
                         l2407 0219                           l1711 0113                           l1703 017B  
                         l2087 02D5                           l2079 02AA                           l2095 012C  
                         l2271 0613                           l2263 0602                           l2255 05E1  
                         l2247 05CA                           l2239 05C3                           l1801 018A  
                         l2193 049D                           l1713 0124                           l2089 02D7  
                         l2097 0133                           l2281 062E                           l2273 0618  
                         l2265 0604                           l2257 05EB                           l2249 05CB  
                         l1651 0FF7                           l1803 018E                           l1811 01B9  
                         l2195 04EF                           l1707 0106                           l2099 013C  
                         l2291 064B                           l2283 0633                           l2267 060B  
                         l2259 05F0                           l2275 061D                           l1717 01E9  
                         l1645 002A                           l1661 0019                           l1653 0FFC  
                         l1805 0195                           l1813 01C0                           l1741 0071  
                         l1733 008E                           l1901 0264                           l1709 0106  
                         l1821 00E7                           l2293 064D                           l2285 0638  
                         l2277 0624                           l2269 060F                           l1719 01F4  
                         l1727 0214                           l1647 002A                           l1655 0FEE  
                         l1663 001D                           l1807 01A8                           l1815 01C4  
                         l1743 007B                           l1751 0353                           l1735 0098  
                         l1831 02E5                           l1903 026B                           l1671 00C9  
                         l1823 00EB                           l2295 0652                           l2287 063F  
                         l2279 062C                           l1649 0032                           l1657 0FF3  
                         l1817 01CB                           l1809 01B3                           l1745 0082  
                         l1761 0372                           l1753 035B                           l1737 009F  
                         l1841 02F5                           l1833 02E6                           l1905 0271  
                         l1681 00E4                           l1673 00CE                           l1825 00EC  
                         l1921 04F8                           l1913 0037                           l2289 0645  
                         l2297 0658                           l1659 0014                           l1819 01DE  
                         l1747 008A                           l1763 0373                           l1755 035C  
                         l1739 00A7                           l1691 0062                           l1851 0309  
                         l1843 02FA                           l1835 02EA                           l1907 0276  
                         l1675 00D6                           l1667 000A                           l1827 00F6  
                         l1931 0523                           l1923 0501                           l1915 003B  
                         l1685 00AC                           l1781 03A0                           l1773 0388  
                         l1765 0377                           l1757 0363                           l1749 034C  
                         l1693 0066                           l1861 032F                           l1853 0310  
                         l1845 02FE                           l1837 02EF                           l1909 027B  
                         l1677 00DC                           l1669 000F                           l1829 00FD  
                         l1941 0572                           l1933 0527                           l1925 0509  
                         l1917 0043                           l1791 03B8                           l1783 03A5  
                         l1775 038D                           l1767 037D                           l1759 0369  
                         l1695 0068                           l1687 005D                           l2399 04A5  
                         l1871 0347                           l1863 0330                           l1855 0314  
                         l1847 0300                           l1839 02F1                           l1679 00E1  
                         l1951 058E                           l1943 0574                           l1935 0532  
                         l1927 0516                           l1919 0046                           l1793 03C1  
                         l1785 03AE                           l1777 0395                           l1769 0385  
                         l1961 066A                           l1697 006F                           l1689 005E  
                         l1865 0337                           l1857 0318                           l1849 0306  
                         l1881 0231                           l1953 0599                           l1945 057F  
                         l1937 0548                           l1929 051B                           l1779 0399  
                         l1971 068F                           l1963 0672                           l1859 0329  
                         l1867 033D                           l1891 0245                           l1883 0233  
                         l1875 0225                           l1947 0586                           l1939 056C  
                         l1955 05A1                           l1797 017D                           l1789 03B3  
                         l1973 0694                           l1965 067B                           l1869 0342  
                         l1893 024C                           l1885 0237                           l1877 0228  
                         l1957 05A7                           l1949 058C                           l1799 0183  
                         l1991 06D5                           l1975 0699                           l1983 06A5  
                         l1967 0683                           l1959 0661                           l1895 0250  
                         l1887 023C                           l1879 022C                           l1993 06DB  
                         l1985 06BC                           l1977 069A                           l1969 068A  
                         l1897 0254                           l1889 0242                           l1987 06C5  
                         l1979 069F                           l1899 025E                           l1989 06CF  
                         l1997 06E1                           l1999 06F8                           u1100 0208  
                         u1020 0032                           u1101 0207                           u1021 0031  
                         u1110 020F                           u1030 0036                           u1111 020E  
                         u1031 0035                           u1120 0213                           u1200 0372  
                         u1040 0062                           u2000 063F                           u1121 0212  
                         u1201 0371                           u1041 0061                           u2001 063E  
                         u1210 037D                           u1130 0098                           u1050 006F  
                         u2010 0645                           u1211 037C                           u1131 0097  
                         u1051 006E                           u2011 0644                           u1300 018A  
                         u1220 0385                           u1140 00A7                           u2020 064B  
                         u1301 0189                           u1221 0384                           u1141 00A6  
                         u2021 064A                           u1070 01F0                           u1310 018E  
                         u1150 007B                           u1230 038D                           u1071 01EF  
                         u1311 018D                           u1151 007A                           u1231 038C  
                         u1080 01F4                           u1320 0195                           u1160 008A  
                         u1240 0395                           u1400 02F5                           u1081 01F3  
                         u1321 0194                           u1161 0089                           u1241 0394  
                         u1401 02F4                           u1065 0109                           u1090 0204  
                         u1250 03A5                           u1170 0353                           u1410 0306  
                         u1091 0203                           u1251 03A4                           u1171 0352  
                         u1411 0305                           u2107 02C6                           u1340 01B9  
                         u1260 03AE                           u1180 035B                           u1500 0237  
                         u1341 01B8                           u1261 03AD                           u1181 035A  
                         u1501 0236                           u2117 02DB                           u2037 05D1  
                         u1350 01C0                           u1270 03B8                           u1190 0369  
                         u1430 0318                           u1510 0242                           u1335 0199  
                         u1351 01BF                           u1271 03B7                           u1191 0368  
                         u1431 0317                           u1511 0241                           u2127 057A  
                         u2047 03E2                           u1360 01C4                           u1280 03C1  
                         u1600 0586                           u1361 01C3                           u1281 03C0  
                         u1425 030A                           u2137 0594                           u1601 0585  
                         u2057 03FF                           u1290 0183                           u1370 01CB  
                         u1450 0329                           u1530 0254                           u1610 05A7  
                         u2147 01F8                           u1291 0182                           u1371 01CA  
                         u1451 0328                           u1531 0253                           u1611 05A6  
                         u2067 041F                           u1620 066A                           u1540 025E  
                         u1700 0414                           u1621 0669                           u1445 0319  
                         u1541 025D                           u1525 0246                           u2077 043E  
                         u1701 0413                           u1630 067B                           u1470 033D  
                         u1390 02EA                           u1710 0419                           u1631 067A  
                         u1471 033C                           u1455 0325                           u1391 02E9  
                         u2087 029D                           u1711 0418                           u1640 06BC  
                         u1480 0342                           u1560 0271                           u1720 0433  
                         u1800 0143                           u1385 01CF                           u1641 06BB  
                         u1481 0341                           u1465 0331                           u1561 0270  
                         u1545 025A                           u2097 02B0                           u1721 0432  
                         u1801 0142                           u1650 06F8                           u1570 0276  
                         u1490 022C                           u1730 0438                           u1810 0148  
                         u1651 06F7                           u1571 0275                           u1555 0265  
                         u1491 022B                           u1731 0437                           u1811 0147  
                         u1820 07B4                           u1580 0516                           u1740 0449  
                         u1660 03D7                           u1900 05DC                           u1821 07B3  
                         u1581 0515                           u1741 0448                           u1661 03D6  
                         u1901 05DB                           u1830 07BB                           u1590 0523  
                         u1750 028F                           u1670 03DC                           u1910 05E1  
                         u1831 07BA                           u1591 0522                           u1751 028E  
                         u1671 03DB                           u1911 05E0                           u1840 07BF  
                         u1680 03F4                           u1760 012C                           u1920 05EB  
                         u1841 07BE                           u1585 0512                           u1681 03F3  
                         u1761 012B                           u1921 05EA                           u1850 07C6  
                         u1690 03F9                           u1770 0133                           u1930 05F0  
                         u1851 07C5                           u1755 028B                           u1691 03F8  
                         u1771 0132                           u1931 05EF                           u1860 07CA  
                         u1780 0138                           u1940 0602                           u1861 07C9  
                         u1781 0137                           u1941 0601                           u1870 07D1  
                         u1790 013C                           u1950 060B                           u1871 07D0  
                         u1791 013B                           u1951 060A                           u1880 07D5  
                         u1960 060F                           u1881 07D4                           u1961 060E  
                         u1890 07DC                           u1970 0613                           u1891 07DB  
                         u1971 0612                           u1980 0618                           u1981 0617  
                         u1990 0624                           u1991 0623                           _AmPm 003A  
           ??_i2c_reinicia_com 0070                   __CFG_WRT$OFF 0000                  ??_i2c_detener 0070  
            ?_parpadearDigitos 0070                           _main 05AC                           btemp 007E  
                ??_i2c_iniciar 0070                           start 0000             ??_parpadearDigitos 0070  
            ___bmul@multiplier 0073   parpadearDigitos@repeticiones 0072                 _i2c_envia_dato 0013  
               _i2c_inicia_com 0FF7                          ?_main 0070                  _convertirDato 0105  
              __end_of___awdiv 034C                  __CFG_WDTE$OFF 0000                __end_of___awmod 0280  
            convertirDato@dato 0077                ___awdiv@divisor 0070                ___awdiv@counter 0075  
                        _PORTA 0005                          _PORTB 0006                          _PORTC 0007  
                        _PORTD 0008                          _TRISA 0085                          _TRISB 0086  
                        _TRISD 0088              setRtcHora@horaRtc 0075                 __CFG_BOREN$OFF 0000  
                        pclath 000A        setRtcMinutos@minutosRtc 0075                          status 0003  
                        wtemp0 007E                     _i2c_espera 002A               ??_dameHoraActual 002E  
             _contadorBotonSet 003C                __initialization 07E3            __end_of_i2c_detener 0FF7  
       __end_of_i2c_envia_dato 001E                   __end_of_main 0661          __end_of_setRtcDefault 0105  
       __end_of_i2c_inicia_com 1000            __end_of_i2c_iniciar 0049                 ?_convertirDato 0070  
                       ??_main 0036          __end_of_setRtcMinutos 01E9             i2c_envia_dato@dato 0070  
             ___awdiv@dividend 0072             convertirDato@datoR 0078                   ?_validaHoras 0070  
                       _SSPADD 0093                         _SSPCON 0014                         _SSPBUF 0013  
               _controlBotones 0661                 __CFG_PWRTE$OFF 0000                         ___bmul 005C  
              ?_i2c_envia_dato 0070                      ??___awdiv 0074                      ??___awmod 007D  
            ?_convertirFormato 0070               __end_of_leer_rtc 017D                ?_i2c_inicia_com 0070  
        __end_of_validaMinutos 00AB             ??_convertirFormato 0074               ___awdiv@quotient 0077  
              ___awmod@divisor 0079                ___awmod@counter 002C                _i2c_recibe_dato 00C9  
         escribe_rtc@direccion 0072         __end_of_controlBotones 071E        __end_of__initialization 07FC  
         __size_of_escribe_rtc 001E                    _i2c_detener 0FEE                    _i2c_iniciar 0037  
                  ?_i2c_espera 0070            ___bmul@multiplicand 0070              _contadorBotonTemp 0038  
                 leer_rtc@dato 0074                 __pcstackCOMMON 0070                   __pidataBANK0 001E  
              ??_convertirDato 0074       __size_of_dameTemperatura 00B4                     __pbssBANK0 0038  
              ?_controlBotones 0070                     __pmaintext 05AC      __size_of_i2c_reinicia_com 0009  
                      ?___bmul 0070        dameTemperatura@unidades 0033        __end_of_i2c_recibe_dato 00E7  
                      _ACKSTAT 048E      __size_of_parpadearDigitos 0085                     _antiRebote 01E9  
                   _contDecMin 0042  convertirFormato@numeroEvaluar 0076                   _digitoActual 003E  
          __size_of_i2c_espera 000D                        _SSPCON2 0091                        _SSPSTAT 0094  
__size_of_validaDecenasMinutos 001D                      ?_leer_rtc 0070           __size_of_validaHoras 0079  
              __size_of___bmul 0015                        ___awdiv 02E5                        ___awmod 0225  
                      __ptext1 0126                        __ptext2 03C5                        __ptext3 0280  
                      __ptext4 0037                        __ptext5 04F8                        __ptext6 071E  
                      __ptext7 00E7                        __ptext8 0151                        __ptext9 000A  
                      _contMin 0041                        _formato 003B               ___awmod@dividend 007B  
         setRtcDefault@horaRtc 0074              ??_dameTemperatura 002E                        _numeros 0020  
         end_of_initialization 07FC     dameTemperatura@temperatura 0035                     ??_leer_rtc 0072  
                   _setRtcHora 017D               ??_i2c_envia_dato 0070               ??_i2c_inicia_com 0070  
      __size_of_mostrarDigitos 0065               ?_i2c_recibe_dato 0070                    ?_antiRebote 0070  
                    _PORTBbits 0006                      _TRISCbits 0087      __size_of_convertirFormato 00AE  
                ?_verificaAmPm 0070         __size_of_setRtcDefault 001E                   ?_i2c_detener 0070  
                 ?_i2c_iniciar 0070         __size_of_setRtcMinutos 0036                   ??_i2c_espera 0070  
             _i2c_reinicia_com 000A                 __end_of___bmul 0071               _parpadearDigitos 03C5  
      __size_of_dameHoraActual 00C5            start_initialization 07E3                 ??_verificaAmPm 0070  
             ??_controlBotones 0076             __end_of_i2c_espera 0037                  ??_escribe_rtc 0072  
       __size_of_validaMinutos 001D                    ?_setRtcHora 0070            __size_of_antiRebote 003C  
                     ??___bmul 0071                     init_fetch0 0049                  _setRtcDefault 00E7  
                  __pdataBANK0 0020              leer_rtc@direccion 0073          __end_of_convertirDato 0126  
                _setRtcMinutos 01B3                      ___latbits 0002                  __pcstackBANK0 002C  
       dameTemperatura@decenas 0034              __size_of_leer_rtc 002C                      __pnvBANK0 0043  
          __end_of_escribe_rtc 00C9                 _mostrarDigitos 0280                 ?_setRtcDefault 0070  
                     ?___awdiv 0070                       ?___awmod 0079   __end_of_validaDecenasMinutos 008E  
              _dameTemperatura 04F8                  _validaMinutos 008E                 ?_setRtcMinutos 0070  
          __size_of_setRtcHora 0036               _convertirFormato 044A                  ??_validaHoras 0070  
                  _contDecHora 002B         __end_of_mostrarDigitos 02E5                _contHoraMostrar 0043  
         __size_of_i2c_detener 0009                    _contHoraAux 003F           __size_of_i2c_iniciar 0012  
         __end_of_verificaAmPm 0151                 _contDecHoraAux 0040                 ?_validaMinutos 0070  
                 ??_antiRebote 0072                     _ADCON1bits 009F                 _dameHoraActual 071E  
     __end_of_i2c_reinicia_com 0013                    _escribe_rtc 00AB       __end_of_parpadearDigitos 044A  
              ?_mostrarDigitos 0070             __end_of_antiRebote 0225        __end_of_dameTemperatura 05AC  
              ??_setRtcDefault 0073            __end_of_validaHoras 03C5               __size_of___awdiv 0067  
       __end_of_dameHoraActual 07E3               __size_of___awmod 005B                ??_setRtcMinutos 0073  
  dameTemperatura@repeticiones 0031       __size_of_i2c_recibe_dato 001E                       __ptext10 00C9  
                     __ptext11 0105                       __ptext20 01B3                       __ptext12 0225  
                     __ptext21 017D                       __ptext13 02E5                       __ptext22 00AB  
                     __ptext14 044A                       __ptext23 0FF7                       __ptext15 005C  
                     __ptext24 0013                       __ptext16 0661                       __ptext25 0FEE  
                     __ptext17 008E                       __ptext26 002A                       __ptext18 034C  
                     __ptext27 01E9                       __ptext19 0071                       _contHora 002A  
                antiRebote@pin 0070           _validaDecenasMinutos 0071                       _leer_rtc 0151  
                 ??_setRtcHora 0073          dameHoraActual@auxHora 0032                  __size_of_main 00B5  
              ??_validaMinutos 0070                ?_dameHoraActual 0070        __size_of_i2c_envia_dato 000B  
      __size_of_i2c_inicia_com 0009             _contDecHoraMostrar 0044       i2c_recibe_dato@datoleido 0071  
           __end_of_setRtcHora 01B3                       init_ram0 004D          ?_validaDecenasMinutos 0070  
              escribe_rtc@dato 0071                    _validaHoras 034C          __size_of_verificaAmPm 002B  
         dameHoraActual@auxMin 0031               ?_dameTemperatura 0070                   _numeroActual 003D  
     __end_of_convertirFormato 04F8                    _SSPCON2bits 0091                   _verificaAmPm 0126  
            ??_i2c_recibe_dato 0070         __size_of_convertirDato 0021        __size_of_controlBotones 00BD  
